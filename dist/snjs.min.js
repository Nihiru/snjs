(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("SNLibrary", [], factory);
	else if(typeof exports === 'object')
		exports["SNLibrary"] = factory();
	else
		root["SNLibrary"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./lib/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../sncrypto/dist/sncrypto.js":
/*!************************************!*\
  !*** ../sncrypto/dist/sncrypto.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

(function webpackUniversalModuleDefinition(root, factory) {
  if (( false ? undefined : _typeof2(exports)) === 'object' && ( false ? undefined : _typeof2(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}
})(window, function () {
  return (
    /******/
    function (modules) {
      // webpackBootstrap

      /******/
      // install a JSONP callback for chunk loading

      /******/
      function webpackJsonpCallback(data) {
        /******/
        var chunkIds = data[0];
        /******/

        var moreModules = data[1];
        /******/

        /******/

        /******/
        // add "moreModules" to the modules object,

        /******/
        // then flag all "chunkIds" as loaded and fire callback

        /******/

        var moduleId,
            chunkId,
            i = 0,
            resolves = [];
        /******/

        for (; i < chunkIds.length; i++) {
          /******/
          chunkId = chunkIds[i];
          /******/

          if (Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
            /******/
            resolves.push(installedChunks[chunkId][0]);
            /******/
          }
          /******/


          installedChunks[chunkId] = 0;
          /******/
        }
        /******/


        for (moduleId in moreModules) {
          /******/
          if (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
            /******/
            modules[moduleId] = moreModules[moduleId];
            /******/
          }
          /******/

        }
        /******/


        if (parentJsonpFunction) parentJsonpFunction(data);
        /******/

        /******/

        while (resolves.length) {
          /******/
          resolves.shift()();
          /******/
        }
        /******/

        /******/

      }

      ;
      /******/

      /******/

      /******/
      // The module cache

      /******/

      var installedModules = {};
      /******/

      /******/
      // object to store loaded and loading chunks

      /******/
      // undefined = chunk not loaded, null = chunk preloaded/prefetched

      /******/
      // Promise = chunk loading, 0 = chunk loaded

      /******/

      var installedChunks = {
        /******/
        "sncrypto.js": 0
        /******/

      };
      /******/

      /******/

      /******/

      /******/
      // script path function

      /******/

      function jsonpScriptSrc(chunkId) {
        /******/
        return __webpack_require__.p + "" + ({
          "vendors~libsodium": "vendors~libsodium",
          "libsodium": "libsodium"
        }[chunkId] || chunkId) + ".bundle.js";
        /******/
      }
      /******/

      /******/
      // The require function

      /******/


      function __webpack_require__(moduleId) {
        /******/

        /******/
        // Check if module is in cache

        /******/
        if (installedModules[moduleId]) {
          /******/
          return installedModules[moduleId].exports;
          /******/
        }
        /******/
        // Create a new module (and put it into the cache)

        /******/


        var module = installedModules[moduleId] = {
          /******/
          i: moduleId,

          /******/
          l: false,

          /******/
          exports: {}
          /******/

        };
        /******/

        /******/
        // Execute the module function

        /******/

        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/

        /******/
        // Flag the module as loaded

        /******/

        module.l = true;
        /******/

        /******/
        // Return the exports of the module

        /******/

        return module.exports;
        /******/
      }
      /******/

      /******/
      // This file contains only the entry chunk.

      /******/
      // The chunk loading function for additional chunks

      /******/


      __webpack_require__.e = function requireEnsure(chunkId) {
        /******/
        var promises = [];
        /******/

        /******/

        /******/
        // JSONP chunk loading for javascript

        /******/

        /******/

        var installedChunkData = installedChunks[chunkId];
        /******/

        if (installedChunkData !== 0) {
          // 0 means "already installed".

          /******/

          /******/
          // a Promise means "currently loading".

          /******/
          if (installedChunkData) {
            /******/
            promises.push(installedChunkData[2]);
            /******/
          } else {
            /******/
            // setup Promise in chunk cache

            /******/
            var promise = new Promise(function (resolve, reject) {
              /******/
              installedChunkData = installedChunks[chunkId] = [resolve, reject];
              /******/
            });
            /******/

            promises.push(installedChunkData[2] = promise);
            /******/

            /******/
            // start chunk loading

            /******/

            var script = document.createElement('script');
            /******/

            var onScriptComplete;
            /******/

            /******/

            script.charset = 'utf-8';
            /******/

            script.timeout = 120;
            /******/

            if (__webpack_require__.nc) {
              /******/
              script.setAttribute("nonce", __webpack_require__.nc);
              /******/
            }
            /******/


            script.src = jsonpScriptSrc(chunkId);
            /******/

            /******/
            // create error before stack unwound to get useful stacktrace later

            /******/

            var error = new Error();
            /******/

            onScriptComplete = function onScriptComplete(event) {
              /******/
              // avoid mem leaks in IE.

              /******/
              script.onerror = script.onload = null;
              /******/

              clearTimeout(timeout);
              /******/

              var chunk = installedChunks[chunkId];
              /******/

              if (chunk !== 0) {
                /******/
                if (chunk) {
                  /******/
                  var errorType = event && (event.type === 'load' ? 'missing' : event.type);
                  /******/

                  var realSrc = event && event.target && event.target.src;
                  /******/

                  error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
                  /******/

                  error.name = 'ChunkLoadError';
                  /******/

                  error.type = errorType;
                  /******/

                  error.request = realSrc;
                  /******/

                  chunk[1](error);
                  /******/
                }
                /******/


                installedChunks[chunkId] = undefined;
                /******/
              }
              /******/

            };
            /******/


            var timeout = setTimeout(function () {
              /******/
              onScriptComplete({
                type: 'timeout',
                target: script
              });
              /******/
            }, 120000);
            /******/

            script.onerror = script.onload = onScriptComplete;
            /******/

            document.head.appendChild(script);
            /******/
          }
          /******/

        }
        /******/


        return Promise.all(promises);
        /******/
      };
      /******/

      /******/
      // expose the modules object (__webpack_modules__)

      /******/


      __webpack_require__.m = modules;
      /******/

      /******/
      // expose the module cache

      /******/

      __webpack_require__.c = installedModules;
      /******/

      /******/
      // define getter function for harmony exports

      /******/

      __webpack_require__.d = function (exports, name, getter) {
        /******/
        if (!__webpack_require__.o(exports, name)) {
          /******/
          Object.defineProperty(exports, name, {
            enumerable: true,
            get: getter
          });
          /******/
        }
        /******/

      };
      /******/

      /******/
      // define __esModule on exports

      /******/


      __webpack_require__.r = function (exports) {
        /******/
        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
          /******/
          Object.defineProperty(exports, Symbol.toStringTag, {
            value: 'Module'
          });
          /******/
        }
        /******/


        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        /******/
      };
      /******/

      /******/
      // create a fake namespace object

      /******/
      // mode & 1: value is a module id, require it

      /******/
      // mode & 2: merge all properties of value into the ns

      /******/
      // mode & 4: return value when already ns object

      /******/
      // mode & 8|1: behave like require

      /******/


      __webpack_require__.t = function (value, mode) {
        /******/
        if (mode & 1) value = __webpack_require__(value);
        /******/

        if (mode & 8) return value;
        /******/

        if (mode & 4 && _typeof2(value) === 'object' && value && value.__esModule) return value;
        /******/

        var ns = Object.create(null);
        /******/

        __webpack_require__.r(ns);
        /******/


        Object.defineProperty(ns, 'default', {
          enumerable: true,
          value: value
        });
        /******/

        if (mode & 2 && typeof value != 'string') for (var key in value) {
          __webpack_require__.d(ns, key, function (key) {
            return value[key];
          }.bind(null, key));
        }
        /******/

        return ns;
        /******/
      };
      /******/

      /******/
      // getDefaultExport function for compatibility with non-harmony modules

      /******/


      __webpack_require__.n = function (module) {
        /******/
        var getter = module && module.__esModule ?
        /******/
        function getDefault() {
          return module['default'];
        } :
        /******/
        function getModuleExports() {
          return module;
        };
        /******/

        __webpack_require__.d(getter, 'a', getter);
        /******/


        return getter;
        /******/
      };
      /******/

      /******/
      // Object.prototype.hasOwnProperty.call

      /******/


      __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      /******/

      /******/
      // __webpack_public_path__

      /******/


      __webpack_require__.p = "/dist/";
      /******/

      /******/
      // on error function for async loading

      /******/

      __webpack_require__.oe = function (err) {
        console.error(err);
        throw err;
      };
      /******/

      /******/


      var jsonpArray = window["webpackJsonpSNCrypto"] = window["webpackJsonpSNCrypto"] || [];
      /******/

      var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
      /******/

      jsonpArray.push = webpackJsonpCallback;
      /******/

      jsonpArray = jsonpArray.slice();
      /******/

      for (var i = 0; i < jsonpArray.length; i++) {
        webpackJsonpCallback(jsonpArray[i]);
      }
      /******/


      var parentJsonpFunction = oldJsonpFunction;
      /******/

      /******/

      /******/
      // Load entry module and return exports

      /******/

      return __webpack_require__(__webpack_require__.s = "./lib/main.js");
      /******/
    }(
    /************************************************************************/

    /******/
    {
      /***/
      "./lib/crypto/pure_crypto.js":
      /*!***********************************!*\
        !*** ./lib/crypto/pure_crypto.js ***!
        \***********************************/

      /*! exports provided: SNPureCrypto */

      /***/
      function libCryptoPure_cryptoJs(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "SNPureCrypto", function () {
          return SNPureCrypto;
        });
        /* harmony import */


        var _Lib_web_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
        /*! @Lib/web_utils */
        "./lib/web_utils.js");

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          return Constructor;
        }
        /**
         *  Abstract class with default implementations of some crypto functions.
         */


        var SNPureCrypto =
        /*#__PURE__*/
        function () {
          function SNPureCrypto() {
            _classCallCheck(this, SNPureCrypto);
          }

          _createClass(SNPureCrypto, [{
            key: "generateUUIDSync",
            value: function generateUUIDSync() {
              return Object(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_0__["generateUUIDSync"])();
            }
            /* Can be overriden by native platforms to provide async implementation; defaults here to syncronous */

          }, {
            key: "generateUUID",
            value: function generateUUID() {
              return regeneratorRuntime.async(function generateUUID$(_context) {
                while (1) {
                  switch (_context.prev = _context.next) {
                    case 0:
                      return _context.abrupt("return", Object(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_0__["generateUUIDSync"])());

                    case 1:
                    case "end":
                      return _context.stop();
                  }
                }
              });
            }
            /* Constant-time string comparison */

          }, {
            key: "timingSafeEqual",
            value: function timingSafeEqual(a, b) {
              var strA = String(a);
              var strB = String(b);
              var lenA = strA.length;
              var result = 0;

              if (lenA !== strB.length) {
                strB = strA;
                result = 1;
              }

              for (var i = 0; i < lenA; i++) {
                result |= strA.charCodeAt(i) ^ strB.charCodeAt(i);
              }

              return result === 0;
            }
          }]);

          return SNPureCrypto;
        }();
        /***/

      },

      /***/
      "./lib/crypto/react_native_crypto.js":
      /*!*******************************************!*\
        !*** ./lib/crypto/react_native_crypto.js ***!
        \*******************************************/

      /*! exports provided: SNReactNativeCrypto */

      /***/
      function libCryptoReact_native_cryptoJs(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "SNReactNativeCrypto", function () {
          return SNReactNativeCrypto;
        });
        /* harmony import */


        var _Crypto_pure_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
        /*! @Crypto/pure_crypto */
        "./lib/crypto/pure_crypto.js");

        function _typeof(obj) {
          if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
            _typeof = function _typeof(obj) {
              return _typeof2(obj);
            };
          } else {
            _typeof = function _typeof(obj) {
              return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
            };
          }

          return _typeof(obj);
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          return Constructor;
        }

        function _possibleConstructorReturn(self, call) {
          if (call && (_typeof(call) === "object" || typeof call === "function")) {
            return call;
          }

          return _assertThisInitialized(self);
        }

        function _assertThisInitialized(self) {
          if (self === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return self;
        }

        function _getPrototypeOf(o) {
          _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
            return o.__proto__ || Object.getPrototypeOf(o);
          };
          return _getPrototypeOf(o);
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function");
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              writable: true,
              configurable: true
            }
          });
          if (superClass) _setPrototypeOf(subClass, superClass);
        }

        function _setPrototypeOf(o, p) {
          _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
            o.__proto__ = p;
            return o;
          };

          return _setPrototypeOf(o, p);
        }

        var SNReactNativeCrypto =
        /*#__PURE__*/
        function (_SNPureCrypto) {
          _inherits(SNReactNativeCrypto, _SNPureCrypto);

          function SNReactNativeCrypto() {
            _classCallCheck(this, SNReactNativeCrypto);

            return _possibleConstructorReturn(this, _getPrototypeOf(SNReactNativeCrypto).apply(this, arguments));
          }

          _createClass(SNReactNativeCrypto, [{
            key: "setNativeModules",

            /** 
             * @public
             * Dynamically set native module instances. 
             */
            value: function setNativeModules(_ref) {
              var aes = _ref.aes,
                  base64 = _ref.base64,
                  sodium = _ref.sodium;
              this.Aes = aes;
              this.base64 = base64;
              this.sodium = sodium;
            }
          }, {
            key: "generateUUID",
            value: function generateUUID() {
              return regeneratorRuntime.async(function generateUUID$(_context) {
                while (1) {
                  switch (_context.prev = _context.next) {
                    case 0:
                      return _context.abrupt("return", this.Aes.randomUuid().then(function (uuid) {
                        return uuid.toLowerCase();
                      }));

                    case 1:
                    case "end":
                      return _context.stop();
                  }
                }
              }, null, this);
            }
          }, {
            key: "pbkdf2",
            value: function pbkdf2(password, salt, cost, length) {
              return regeneratorRuntime.async(function pbkdf2$(_context2) {
                while (1) {
                  switch (_context2.prev = _context2.next) {
                    case 0:
                      return _context2.abrupt("return", this.Aes.pbkdf2(password, salt, cost, length).then(function (key) {
                        return key;
                      }));

                    case 1:
                    case "end":
                      return _context2.stop();
                  }
                }
              }, null, this);
            }
          }, {
            key: "generateRandomKey",
            value: function generateRandomKey(length) {
              return regeneratorRuntime.async(function generateRandomKey$(_context3) {
                while (1) {
                  switch (_context3.prev = _context3.next) {
                    case 0:
                      return _context3.abrupt("return", this.Aes.randomKey(length / 8));

                    case 1:
                    case "end":
                      return _context3.stop();
                  }
                }
              }, null, this);
            }
          }, {
            key: "base64",
            value: function base64(text) {
              return regeneratorRuntime.async(function base64$(_context4) {
                while (1) {
                  switch (_context4.prev = _context4.next) {
                    case 0:
                      return _context4.abrupt("return", this.base64.encode(text));

                    case 1:
                    case "end":
                      return _context4.stop();
                  }
                }
              }, null, this);
            }
          }, {
            key: "base64Decode",
            value: function base64Decode(base64String) {
              return regeneratorRuntime.async(function base64Decode$(_context5) {
                while (1) {
                  switch (_context5.prev = _context5.next) {
                    case 0:
                      return _context5.abrupt("return", this.base64.decode(base64String));

                    case 1:
                    case "end":
                      return _context5.stop();
                  }
                }
              }, null, this);
            }
          }, {
            key: "sha256",
            value: function sha256(text) {
              return regeneratorRuntime.async(function sha256$(_context6) {
                while (1) {
                  switch (_context6.prev = _context6.next) {
                    case 0:
                      return _context6.abrupt("return", this.Aes.sha256(text));

                    case 1:
                    case "end":
                      return _context6.stop();
                  }
                }
              }, null, this);
            }
          }, {
            key: "hmac256",
            value: function hmac256(message, key) {
              return regeneratorRuntime.async(function hmac256$(_context7) {
                while (1) {
                  switch (_context7.prev = _context7.next) {
                    case 0:
                      return _context7.abrupt("return", this.Aes.hmac256(message, key));

                    case 1:
                    case "end":
                      return _context7.stop();
                  }
                }
              }, null, this);
            }
          }]);

          return SNReactNativeCrypto;
        }(_Crypto_pure_crypto__WEBPACK_IMPORTED_MODULE_0__["SNPureCrypto"]);
        /***/

      },

      /***/
      "./lib/crypto/webcrypto.js":
      /*!*********************************!*\
        !*** ./lib/crypto/webcrypto.js ***!
        \*********************************/

      /*! exports provided: SNWebCrypto */

      /***/
      function libCryptoWebcryptoJs(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "SNWebCrypto", function () {
          return SNWebCrypto;
        });
        /* harmony import */


        var _Crypto_pure_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
        /*! @Crypto/pure_crypto */
        "./lib/crypto/pure_crypto.js");
        /* harmony import */


        var _Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
        /*! @Lib/web_utils */
        "./lib/web_utils.js");

        function _typeof(obj) {
          if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
            _typeof = function _typeof(obj) {
              return _typeof2(obj);
            };
          } else {
            _typeof = function _typeof(obj) {
              return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
            };
          }

          return _typeof(obj);
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          return Constructor;
        }

        function _possibleConstructorReturn(self, call) {
          if (call && (_typeof(call) === "object" || typeof call === "function")) {
            return call;
          }

          return _assertThisInitialized(self);
        }

        function _assertThisInitialized(self) {
          if (self === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return self;
        }

        function _getPrototypeOf(o) {
          _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
            return o.__proto__ || Object.getPrototypeOf(o);
          };
          return _getPrototypeOf(o);
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function");
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              writable: true,
              configurable: true
            }
          });
          if (superClass) _setPrototypeOf(subClass, superClass);
        }

        function _setPrototypeOf(o, p) {
          _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
            o.__proto__ = p;
            return o;
          };

          return _setPrototypeOf(o, p);
        }

        var subtleCrypto = _Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["getSubtleCrypto"]();

        var SNWebCrypto =
        /*#__PURE__*/
        function (_SNPureCrypto) {
          _inherits(SNWebCrypto, _SNPureCrypto);

          function SNWebCrypto() {
            var _this;

            _classCallCheck(this, SNWebCrypto);

            _this = _possibleConstructorReturn(this, _getPrototypeOf(SNWebCrypto).call(this));
            _this.ready = Promise.all(
            /*! import() | libsodium */
            [__webpack_require__.e("vendors~libsodium"), __webpack_require__.e("libsodium")]).then(__webpack_require__.bind(null,
            /*! ../libsodium */
            "./lib/libsodium.js")).then(function (result) {
              _this.sodium = result;
              return _this.sodium.ready;
            });
            return _this;
          }
          /** @public */


          _createClass(SNWebCrypto, [{
            key: "pbkdf2",
            value: function pbkdf2(_ref) {
              var password, salt, iterations, length, key;
              return regeneratorRuntime.async(function pbkdf2$(_context) {
                while (1) {
                  switch (_context.prev = _context.next) {
                    case 0:
                      password = _ref.password, salt = _ref.salt, iterations = _ref.iterations, length = _ref.length;
                      _context.next = 3;
                      return regeneratorRuntime.awrap(this.webCryptoImportKey(password, "PBKDF2", ["deriveBits"]));

                    case 3:
                      key = _context.sent;

                      if (key) {
                        _context.next = 7;
                        break;
                      }

                      console.log("Key is null, unable to continue");
                      return _context.abrupt("return", null);

                    case 7:
                      return _context.abrupt("return", this.webCryptoDeriveBits(key, salt, iterations, length));

                    case 8:
                    case "end":
                      return _context.stop();
                  }
                }
              }, null, this);
            }
            /** @public */

          }, {
            key: "generateRandomKey",
            value: function generateRandomKey(bits) {
              var bytes, arrayBuffer;
              return regeneratorRuntime.async(function generateRandomKey$(_context2) {
                while (1) {
                  switch (_context2.prev = _context2.next) {
                    case 0:
                      bytes = bits / 8;
                      arrayBuffer = _Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["getGlobalScope"]().crypto.getRandomValues(new Uint8Array(bytes));
                      return _context2.abrupt("return", _Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["arrayBufferToHexString"](arrayBuffer));

                    case 3:
                    case "end":
                      return _context2.stop();
                  }
                }
              });
            }
            /** @public */

          }, {
            key: "aes256CbcEncrypt",
            value: function aes256CbcEncrypt(text, key, iv) {
              var keyData, ivData, alg, importedKeyData, textData, result, ciphertext;
              return regeneratorRuntime.async(function aes256CbcEncrypt$(_context3) {
                while (1) {
                  switch (_context3.prev = _context3.next) {
                    case 0:
                      _context3.next = 2;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["hexStringToArrayBuffer"](key));

                    case 2:
                      keyData = _context3.sent;
                      _context3.next = 5;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["hexStringToArrayBuffer"](iv));

                    case 5:
                      ivData = _context3.sent;
                      alg = {
                        name: 'AES-CBC',
                        iv: ivData
                      };
                      _context3.next = 9;
                      return regeneratorRuntime.awrap(this.webCryptoImportKey(keyData, alg.name, ["encrypt"]));

                    case 9:
                      importedKeyData = _context3.sent;
                      _context3.next = 12;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["stringToArrayBuffer"](text));

                    case 12:
                      textData = _context3.sent;
                      _context3.next = 15;
                      return regeneratorRuntime.awrap(crypto.subtle.encrypt(alg, importedKeyData, textData));

                    case 15:
                      result = _context3.sent;
                      _context3.next = 18;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["arrayBufferToBase64"](result));

                    case 18:
                      ciphertext = _context3.sent;
                      return _context3.abrupt("return", ciphertext);

                    case 20:
                    case "end":
                      return _context3.stop();
                  }
                }
              }, null, this);
            }
            /** @public */

          }, {
            key: "aes256CbcDecrypt",
            value: function aes256CbcDecrypt(ciphertext, key, iv) {
              var keyData, ivData, alg, importedKeyData, textData;
              return regeneratorRuntime.async(function aes256CbcDecrypt$(_context5) {
                while (1) {
                  switch (_context5.prev = _context5.next) {
                    case 0:
                      _context5.next = 2;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["hexStringToArrayBuffer"](key));

                    case 2:
                      keyData = _context5.sent;
                      _context5.next = 5;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["hexStringToArrayBuffer"](iv));

                    case 5:
                      ivData = _context5.sent;
                      alg = {
                        name: 'AES-CBC',
                        iv: ivData
                      };
                      _context5.next = 9;
                      return regeneratorRuntime.awrap(this.webCryptoImportKey(keyData, alg.name, ["decrypt"]));

                    case 9:
                      importedKeyData = _context5.sent;
                      _context5.next = 12;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["base64ToArrayBuffer"](ciphertext));

                    case 12:
                      textData = _context5.sent;
                      return _context5.abrupt("return", crypto.subtle.decrypt(alg, importedKeyData, textData).then(function _callee(result) {
                        var decoded;
                        return regeneratorRuntime.async(function _callee$(_context4) {
                          while (1) {
                            switch (_context4.prev = _context4.next) {
                              case 0:
                                _context4.next = 2;
                                return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["arrayBufferToString"](result));

                              case 2:
                                decoded = _context4.sent;
                                return _context4.abrupt("return", decoded);

                              case 4:
                              case "end":
                                return _context4.stop();
                            }
                          }
                        });
                      }).catch(function (error) {
                        console.error("Error decrypting:", error);
                      }));

                    case 14:
                    case "end":
                      return _context5.stop();
                  }
                }
              }, null, this);
            }
            /** @public */

          }, {
            key: "hmac256",
            value: function hmac256(message, key) {
              var keyHexData, keyData, messageData;
              return regeneratorRuntime.async(function hmac256$(_context7) {
                while (1) {
                  switch (_context7.prev = _context7.next) {
                    case 0:
                      _context7.next = 2;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["hexStringToArrayBuffer"](key));

                    case 2:
                      keyHexData = _context7.sent;
                      _context7.next = 5;
                      return regeneratorRuntime.awrap(this.webCryptoImportKey(keyHexData, "HMAC", ["sign"], {
                        name: "SHA-256"
                      }));

                    case 5:
                      keyData = _context7.sent;
                      _context7.next = 8;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["stringToArrayBuffer"](message));

                    case 8:
                      messageData = _context7.sent;
                      return _context7.abrupt("return", crypto.subtle.sign({
                        name: "HMAC"
                      }, keyData, messageData).then(function _callee2(signature) {
                        var hash;
                        return regeneratorRuntime.async(function _callee2$(_context6) {
                          while (1) {
                            switch (_context6.prev = _context6.next) {
                              case 0:
                                _context6.next = 2;
                                return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["arrayBufferToHexString"](signature));

                              case 2:
                                hash = _context6.sent;
                                return _context6.abrupt("return", hash);

                              case 4:
                              case "end":
                                return _context6.stop();
                            }
                          }
                        });
                      }).catch(function (err) {
                        console.error("Error computing hmac", err);
                      }));

                    case 10:
                    case "end":
                      return _context7.stop();
                  }
                }
              }, null, this);
            }
            /** @public */

          }, {
            key: "sha256",
            value: function sha256(text) {
              var textData, digest;
              return regeneratorRuntime.async(function sha256$(_context8) {
                while (1) {
                  switch (_context8.prev = _context8.next) {
                    case 0:
                      _context8.next = 2;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["stringToArrayBuffer"](text));

                    case 2:
                      textData = _context8.sent;
                      _context8.next = 5;
                      return regeneratorRuntime.awrap(crypto.subtle.digest("SHA-256", textData));

                    case 5:
                      digest = _context8.sent;
                      return _context8.abrupt("return", _Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["arrayBufferToHexString"](digest));

                    case 7:
                    case "end":
                      return _context8.stop();
                  }
                }
              });
            }
            /**
             * @public
             * Use only for legacy applications.
             */
            // eslint-disable-next-line camelcase

          }, {
            key: "unsafe_sha1",
            value: function unsafe_sha1(text) {
              var textData, digest;
              return regeneratorRuntime.async(function unsafe_sha1$(_context9) {
                while (1) {
                  switch (_context9.prev = _context9.next) {
                    case 0:
                      _context9.next = 2;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["stringToArrayBuffer"](text));

                    case 2:
                      textData = _context9.sent;
                      _context9.next = 5;
                      return regeneratorRuntime.awrap(crypto.subtle.digest("SHA-1", textData));

                    case 5:
                      digest = _context9.sent;
                      return _context9.abrupt("return", _Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["arrayBufferToHexString"](digest));

                    case 7:
                    case "end":
                      return _context9.stop();
                  }
                }
              });
            }
            /** @private */

          }, {
            key: "webCryptoImportKey",
            value: function webCryptoImportKey(input, alg, actions, hash) {
              var text;
              return regeneratorRuntime.async(function webCryptoImportKey$(_context10) {
                while (1) {
                  switch (_context10.prev = _context10.next) {
                    case 0:
                      if (!(typeof input === "string")) {
                        _context10.next = 6;
                        break;
                      }

                      _context10.next = 3;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["stringToArrayBuffer"](input));

                    case 3:
                      _context10.t0 = _context10.sent;
                      _context10.next = 7;
                      break;

                    case 6:
                      _context10.t0 = input;

                    case 7:
                      text = _context10.t0;
                      return _context10.abrupt("return", subtleCrypto.importKey("raw", text, {
                        name: alg,
                        hash: hash
                      }, false, actions).then(function (key) {
                        return key;
                      }).catch(function (err) {
                        console.error(err);
                        return null;
                      }));

                    case 9:
                    case "end":
                      return _context10.stop();
                  }
                }
              });
            }
            /** @private */

          }, {
            key: "webCryptoDeriveBits",
            value: function webCryptoDeriveBits(key, salt, iterations, length) {
              var params;
              return regeneratorRuntime.async(function webCryptoDeriveBits$(_context12) {
                while (1) {
                  switch (_context12.prev = _context12.next) {
                    case 0:
                      _context12.next = 2;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["stringToArrayBuffer"](salt));

                    case 2:
                      _context12.t0 = _context12.sent;
                      _context12.t1 = iterations;
                      _context12.t2 = {
                        name: "SHA-512"
                      };
                      params = {
                        name: "PBKDF2",
                        salt: _context12.t0,
                        iterations: _context12.t1,
                        hash: _context12.t2
                      };
                      return _context12.abrupt("return", subtleCrypto.deriveBits(params, key, length).then(function _callee3(bits) {
                        var key;
                        return regeneratorRuntime.async(function _callee3$(_context11) {
                          while (1) {
                            switch (_context11.prev = _context11.next) {
                              case 0:
                                _context11.next = 2;
                                return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["arrayBufferToHexString"](new Uint8Array(bits)));

                              case 2:
                                key = _context11.sent;
                                return _context11.abrupt("return", key);

                              case 4:
                              case "end":
                                return _context11.stop();
                            }
                          }
                        });
                      }).catch(function (err) {
                        console.error(err);
                        return null;
                      }));

                    case 7:
                    case "end":
                      return _context12.stop();
                  }
                }
              });
            }
            /**
             * @public
             * @param {string} password  Plain text string
             * @param {string} salt  Salt in hex format
             * @returns Hex string
             */

          }, {
            key: "argon2",
            value: function argon2(_ref2) {
              var password, salt, iterations, bytes, length, result;
              return regeneratorRuntime.async(function argon2$(_context13) {
                while (1) {
                  switch (_context13.prev = _context13.next) {
                    case 0:
                      password = _ref2.password, salt = _ref2.salt, iterations = _ref2.iterations, bytes = _ref2.bytes, length = _ref2.length;
                      _context13.next = 3;
                      return regeneratorRuntime.awrap(this.ready);

                    case 3:
                      _context13.t0 = this.sodium;
                      _context13.t1 = length;
                      _context13.next = 7;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["toBuffer"](password, 'binary'));

                    case 7:
                      _context13.t2 = _context13.sent;
                      _context13.next = 10;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["toBuffer"](salt, 'hex'));

                    case 10:
                      _context13.t3 = _context13.sent;
                      _context13.t4 = iterations;
                      _context13.t5 = bytes;
                      _context13.t6 = this.sodium.crypto_pwhash_ALG_DEFAULT;
                      result = _context13.t0.crypto_pwhash.call(_context13.t0, _context13.t1, _context13.t2, _context13.t3, _context13.t4, _context13.t5, _context13.t6, 'hex');
                      return _context13.abrupt("return", result);

                    case 16:
                    case "end":
                      return _context13.stop();
                  }
                }
              }, null, this);
            }
            /**
             * Encrypt a message (and optional associated data) with XChaCha20-Poly1305.
             *
             * @param {String|Buffer} plaintext
             * @param {String} nonce  In hex format
             * @param {String} key   In hex format
             * @param {String|Buffer} assocData
             */

          }, {
            key: "xchacha20Encrypt",
            value: function xchacha20Encrypt(plaintext, nonce, key, assocData) {
              return regeneratorRuntime.async(function xchacha20Encrypt$(_context14) {
                while (1) {
                  switch (_context14.prev = _context14.next) {
                    case 0:
                      _context14.next = 2;
                      return regeneratorRuntime.awrap(this.ready);

                    case 2:
                      if (!(nonce.length !== 48)) {
                        _context14.next = 4;
                        break;
                      }

                      throw 'Nonce must be 24 bytes';

                    case 4:
                      _context14.t0 = this.sodium;
                      _context14.next = 7;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["toBuffer"](plaintext));

                    case 7:
                      _context14.t1 = _context14.sent;
                      _context14.next = 10;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["toBuffer"](assocData));

                    case 10:
                      _context14.t2 = _context14.sent;
                      _context14.next = 13;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["toBuffer"](nonce, 'hex'));

                    case 13:
                      _context14.t3 = _context14.sent;
                      _context14.next = 16;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["toBuffer"](key, 'hex'));

                    case 16:
                      _context14.t4 = _context14.sent;
                      return _context14.abrupt("return", _context14.t0.crypto_aead_xchacha20poly1305_ietf_encrypt.call(_context14.t0, _context14.t1, _context14.t2, null, _context14.t3, _context14.t4, 'base64'));

                    case 18:
                    case "end":
                      return _context14.stop();
                  }
                }
              }, null, this);
            }
            /**
             * Decrypt a message (and optional associated data) with XChaCha20-Poly1305
             *
             * @param {String|Buffer} ciphertext
             * @param {String} nonce  In hex format
             * @param {String} key  In hex format
             * @param {String|Buffer} assocData
             */

          }, {
            key: "xchacha20Decrypt",
            value: function xchacha20Decrypt(ciphertext, nonce, key, assocData) {
              return regeneratorRuntime.async(function xchacha20Decrypt$(_context15) {
                while (1) {
                  switch (_context15.prev = _context15.next) {
                    case 0:
                      _context15.next = 2;
                      return regeneratorRuntime.awrap(this.ready);

                    case 2:
                      if (!(nonce.length !== 48)) {
                        _context15.next = 4;
                        break;
                      }

                      throw 'Nonce must be 24 bytes';

                    case 4:
                      _context15.prev = 4;
                      _context15.t0 = this.sodium;
                      _context15.next = 8;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["toBuffer"](ciphertext, 'base64'));

                    case 8:
                      _context15.t1 = _context15.sent;
                      _context15.next = 11;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["toBuffer"](assocData));

                    case 11:
                      _context15.t2 = _context15.sent;
                      _context15.next = 14;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["toBuffer"](nonce, 'hex'));

                    case 14:
                      _context15.t3 = _context15.sent;
                      _context15.next = 17;
                      return regeneratorRuntime.awrap(_Lib_web_utils__WEBPACK_IMPORTED_MODULE_1__["toBuffer"](key, 'hex'));

                    case 17:
                      _context15.t4 = _context15.sent;
                      return _context15.abrupt("return", _context15.t0.crypto_aead_xchacha20poly1305_ietf_decrypt.call(_context15.t0, null, _context15.t1, _context15.t2, _context15.t3, _context15.t4, 'text'));

                    case 21:
                      _context15.prev = 21;
                      _context15.t5 = _context15["catch"](4);
                      return _context15.abrupt("return", null);

                    case 24:
                    case "end":
                      return _context15.stop();
                  }
                }
              }, null, this, [[4, 21]]);
            }
          }]);

          return SNWebCrypto;
        }(_Crypto_pure_crypto__WEBPACK_IMPORTED_MODULE_0__["SNPureCrypto"]);
        /***/

      },

      /***/
      "./lib/main.js":
      /*!*********************!*\
        !*** ./lib/main.js ***!
        \*********************/

      /*! exports provided: SNPureCrypto, SNWebCrypto, SNReactNativeCrypto, isWebCryptoAvailable, Buffer, base64Encode, base64Decode, base64ToHex */

      /***/
      function libMainJs(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        __webpack_require__.r(__webpack_exports__);
        /* harmony import */


        var _crypto_pure_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
        /*! ./crypto/pure_crypto */
        "./lib/crypto/pure_crypto.js");
        /* harmony reexport (safe) */


        __webpack_require__.d(__webpack_exports__, "SNPureCrypto", function () {
          return _crypto_pure_crypto__WEBPACK_IMPORTED_MODULE_0__["SNPureCrypto"];
        });
        /* harmony import */


        var _crypto_webcrypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
        /*! ./crypto/webcrypto */
        "./lib/crypto/webcrypto.js");
        /* harmony reexport (safe) */


        __webpack_require__.d(__webpack_exports__, "SNWebCrypto", function () {
          return _crypto_webcrypto__WEBPACK_IMPORTED_MODULE_1__["SNWebCrypto"];
        });
        /* harmony import */


        var _crypto_react_native_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
        /*! ./crypto/react_native_crypto */
        "./lib/crypto/react_native_crypto.js");
        /* harmony reexport (safe) */


        __webpack_require__.d(__webpack_exports__, "SNReactNativeCrypto", function () {
          return _crypto_react_native_crypto__WEBPACK_IMPORTED_MODULE_2__["SNReactNativeCrypto"];
        });
        /* harmony import */


        var _web_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
        /*! ./web_utils */
        "./lib/web_utils.js");
        /* harmony reexport (safe) */


        __webpack_require__.d(__webpack_exports__, "isWebCryptoAvailable", function () {
          return _web_utils__WEBPACK_IMPORTED_MODULE_3__["isWebCryptoAvailable"];
        });
        /* harmony reexport (safe) */


        __webpack_require__.d(__webpack_exports__, "Buffer", function () {
          return _web_utils__WEBPACK_IMPORTED_MODULE_3__["Buffer"];
        });
        /* harmony reexport (safe) */


        __webpack_require__.d(__webpack_exports__, "base64Encode", function () {
          return _web_utils__WEBPACK_IMPORTED_MODULE_3__["base64Encode"];
        });
        /* harmony reexport (safe) */


        __webpack_require__.d(__webpack_exports__, "base64Decode", function () {
          return _web_utils__WEBPACK_IMPORTED_MODULE_3__["base64Decode"];
        });
        /* harmony reexport (safe) */


        __webpack_require__.d(__webpack_exports__, "base64ToHex", function () {
          return _web_utils__WEBPACK_IMPORTED_MODULE_3__["base64ToHex"];
        });
        /***/

      },

      /***/
      "./lib/web_utils.js":
      /*!**************************!*\
        !*** ./lib/web_utils.js ***!
        \**************************/

      /*! exports provided: Buffer, getGlobalScope, ieOrEdge, isWebCryptoAvailable, getSubtleCrypto, generateUUIDSync, stringToArrayBuffer, arrayBufferToString, arrayBufferToHexString, hexStringToArrayBuffer, base64ToArrayBuffer, arrayBufferToBase64, hexToBase64, base64ToHex, base64Encode, base64Decode, toHexBuffer, toBuffer */

      /***/
      function libWeb_utilsJs(module, __webpack_exports__, __webpack_require__) {
        "use strict";

        __webpack_require__.r(__webpack_exports__);
        /* WEBPACK VAR INJECTION */


        (function (global) {
          /* harmony export (binding) */
          __webpack_require__.d(__webpack_exports__, "Buffer", function () {
            return Buffer;
          });
          /* harmony export (binding) */


          __webpack_require__.d(__webpack_exports__, "getGlobalScope", function () {
            return getGlobalScope;
          });
          /* harmony export (binding) */


          __webpack_require__.d(__webpack_exports__, "ieOrEdge", function () {
            return ieOrEdge;
          });
          /* harmony export (binding) */


          __webpack_require__.d(__webpack_exports__, "isWebCryptoAvailable", function () {
            return isWebCryptoAvailable;
          });
          /* harmony export (binding) */


          __webpack_require__.d(__webpack_exports__, "getSubtleCrypto", function () {
            return getSubtleCrypto;
          });
          /* harmony export (binding) */


          __webpack_require__.d(__webpack_exports__, "generateUUIDSync", function () {
            return generateUUIDSync;
          });
          /* harmony export (binding) */


          __webpack_require__.d(__webpack_exports__, "stringToArrayBuffer", function () {
            return stringToArrayBuffer;
          });
          /* harmony export (binding) */


          __webpack_require__.d(__webpack_exports__, "arrayBufferToString", function () {
            return arrayBufferToString;
          });
          /* harmony export (binding) */


          __webpack_require__.d(__webpack_exports__, "arrayBufferToHexString", function () {
            return arrayBufferToHexString;
          });
          /* harmony export (binding) */


          __webpack_require__.d(__webpack_exports__, "hexStringToArrayBuffer", function () {
            return hexStringToArrayBuffer;
          });
          /* harmony export (binding) */


          __webpack_require__.d(__webpack_exports__, "base64ToArrayBuffer", function () {
            return base64ToArrayBuffer;
          });
          /* harmony export (binding) */


          __webpack_require__.d(__webpack_exports__, "arrayBufferToBase64", function () {
            return arrayBufferToBase64;
          });
          /* harmony export (binding) */


          __webpack_require__.d(__webpack_exports__, "hexToBase64", function () {
            return hexToBase64;
          });
          /* harmony export (binding) */


          __webpack_require__.d(__webpack_exports__, "base64ToHex", function () {
            return base64ToHex;
          });
          /* harmony export (binding) */


          __webpack_require__.d(__webpack_exports__, "base64Encode", function () {
            return base64Encode;
          });
          /* harmony export (binding) */


          __webpack_require__.d(__webpack_exports__, "base64Decode", function () {
            return base64Decode;
          });
          /* harmony export (binding) */


          __webpack_require__.d(__webpack_exports__, "toHexBuffer", function () {
            return toHexBuffer;
          });
          /* harmony export (binding) */


          __webpack_require__.d(__webpack_exports__, "toBuffer", function () {
            return toBuffer;
          });

          var Buffer = __webpack_require__(
          /*! buffer/ */
          "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer;

          var arrayToBuffer = __webpack_require__(
          /*! typedarray-to-buffer */
          "./node_modules/typedarray-to-buffer/index.js");

          function getGlobalScope() {
            return typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : null;
          }

          function ieOrEdge() {
            return typeof document !== 'undefined' && document.documentMode || /Edge/.test(navigator.userAgent);
          }

          function isWebCryptoAvailable() {
            return !ieOrEdge() && getGlobalScope().crypto && getGlobalScope().crypto.subtle;
          }

          function getSubtleCrypto() {
            return getGlobalScope().crypto ? getGlobalScope().crypto.subtle : null;
          }

          function generateUUIDSync() {
            var globalScope = getGlobalScope();
            var crypto = globalScope.crypto || globalScope.msCrypto;

            if (crypto) {
              var buf = new Uint32Array(4);
              crypto.getRandomValues(buf);
              var idx = -1;
              return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                idx++;
                var r = buf[idx >> 3] >> idx % 8 * 4 & 15;
                var v = c === 'x' ? r : r & 0x3 | 0x8;
                return v.toString(16);
              });
            } else {
              var d = new Date().getTime();

              if (globalScope.performance && typeof globalScope.performance.now === "function") {
                d += performance.now(); // use high-precision timer if available
              }

              var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                var r = (d + Math.random() * 16) % 16 | 0;
                d = Math.floor(d / 16);
                return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);
              });
              return uuid;
            }
          }

          function stringToArrayBuffer(string) {
            return regeneratorRuntime.async(function stringToArrayBuffer$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    return _context.abrupt("return", new Promise(function (resolve, reject) {
                      var blob = new Blob([string]);
                      var reader = new FileReader();

                      reader.onload = function (e) {
                        resolve(e.target.result);
                      };

                      reader.readAsArrayBuffer(blob);
                    }));

                  case 1:
                  case "end":
                    return _context.stop();
                }
              }
            });
          }

          function arrayBufferToString(arrayBuffer) {
            return regeneratorRuntime.async(function arrayBufferToString$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    return _context2.abrupt("return", new Promise(function (resolve, reject) {
                      var blob = new Blob([arrayBuffer]);
                      var reader = new FileReader();

                      reader.onload = function (e) {
                        resolve(e.target.result);
                      };

                      reader.readAsText(blob);
                    }));

                  case 1:
                  case "end":
                    return _context2.stop();
                }
              }
            });
          }

          function arrayBufferToHexString(arrayBuffer) {
            var byteArray, hexString, nextHexByte, i;
            return regeneratorRuntime.async(function arrayBufferToHexString$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    byteArray = new Uint8Array(arrayBuffer);
                    hexString = "";

                    for (i = 0; i < byteArray.byteLength; i++) {
                      nextHexByte = byteArray[i].toString(16);

                      if (nextHexByte.length < 2) {
                        nextHexByte = "0" + nextHexByte;
                      }

                      hexString += nextHexByte;
                    }

                    return _context3.abrupt("return", hexString);

                  case 4:
                  case "end":
                    return _context3.stop();
                }
              }
            });
          }

          function hexStringToArrayBuffer(hex) {
            var bytes, c;
            return regeneratorRuntime.async(function hexStringToArrayBuffer$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    bytes = [];

                    for (c = 0; c < hex.length; c += 2) {
                      bytes.push(parseInt(hex.substr(c, 2), 16));
                    }

                    return _context4.abrupt("return", new Uint8Array(bytes));

                  case 3:
                  case "end":
                    return _context4.stop();
                }
              }
            });
          }

          function base64ToArrayBuffer(base64) {
            var binaryString, len, bytes, i;
            return regeneratorRuntime.async(function base64ToArrayBuffer$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    _context5.next = 2;
                    return regeneratorRuntime.awrap(base64Decode(base64));

                  case 2:
                    binaryString = _context5.sent;
                    len = binaryString.length;
                    bytes = new Uint8Array(len);

                    for (i = 0; i < len; i++) {
                      bytes[i] = binaryString.charCodeAt(i);
                    }

                    return _context5.abrupt("return", bytes.buffer);

                  case 7:
                  case "end":
                    return _context5.stop();
                }
              }
            });
          }

          function arrayBufferToBase64(buffer) {
            return regeneratorRuntime.async(function arrayBufferToBase64$(_context6) {
              while (1) {
                switch (_context6.prev = _context6.next) {
                  case 0:
                    return _context6.abrupt("return", new Promise(function (resolve, reject) {
                      var blob = new Blob([buffer], {
                        type: 'application/octet-binary'
                      });
                      var reader = new FileReader();

                      reader.onload = function (evt) {
                        var dataurl = evt.target.result;
                        resolve(dataurl.substr(dataurl.indexOf(',') + 1));
                      };

                      reader.readAsDataURL(blob);
                    }));

                  case 1:
                  case "end":
                    return _context6.stop();
                }
              }
            });
          }

          function hexToBase64(hex) {
            var buffer;
            return regeneratorRuntime.async(function hexToBase64$(_context7) {
              while (1) {
                switch (_context7.prev = _context7.next) {
                  case 0:
                    buffer = Buffer.from(hex, 'hex');
                    return _context7.abrupt("return", buffer.toString('base64'));

                  case 2:
                  case "end":
                    return _context7.stop();
                }
              }
            });
          }

          function base64ToHex(base64) {
            var buffer;
            return regeneratorRuntime.async(function base64ToHex$(_context8) {
              while (1) {
                switch (_context8.prev = _context8.next) {
                  case 0:
                    buffer = Buffer.from(base64, 'base64');
                    return _context8.abrupt("return", buffer.toString('hex'));

                  case 2:
                  case "end":
                    return _context8.stop();
                }
              }
            });
          }

          function base64Encode(text) {
            return getGlobalScope().btoa(encodeURIComponent(text).replace(/%([0-9A-F]{2})/g, function toSolidBytes(match, p1) {
              return String.fromCharCode('0x' + p1);
            }));
          }

          function base64Decode(base64String) {
            return getGlobalScope().atob(base64String);
          }

          function toHexBuffer(string) {
            return regeneratorRuntime.async(function toHexBuffer$(_context9) {
              while (1) {
                switch (_context9.prev = _context9.next) {
                  case 0:
                    return _context9.abrupt("return", Buffer.from(string, 'hex'));

                  case 1:
                  case "end":
                    return _context9.stop();
                }
              }
            });
          }
          /**
          * Coerce input to a Buffer, throwing a TypeError if it cannot be coerced.
          *
          * @param {string|Buffer|Uint8Array|Promise<Buffer>} stringOrBuffer
          * @returns {Buffer}
          */


          function toBuffer(stringOrBuffer) {
            var format,
                _args10 = arguments;
            return regeneratorRuntime.async(function toBuffer$(_context10) {
              while (1) {
                switch (_context10.prev = _context10.next) {
                  case 0:
                    format = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : 'binary';

                    if (!Buffer.isBuffer(stringOrBuffer)) {
                      _context10.next = 5;
                      break;
                    }

                    return _context10.abrupt("return", stringOrBuffer);

                  case 5:
                    if (!(stringOrBuffer === null)) {
                      _context10.next = 9;
                      break;
                    }

                    return _context10.abrupt("return", null);

                  case 9:
                    if (!(typeof stringOrBuffer === 'string')) {
                      _context10.next = 13;
                      break;
                    }

                    return _context10.abrupt("return", Buffer.from(stringOrBuffer, format));

                  case 13:
                    if (!(stringOrBuffer instanceof Uint8Array)) {
                      _context10.next = 17;
                      break;
                    }

                    return _context10.abrupt("return", arrayToBuffer(stringOrBuffer));

                  case 17:
                    if (!(stringOrBuffer instanceof Promise)) {
                      _context10.next = 21;
                      break;
                    }

                    return _context10.abrupt("return", stringOrBuffer);

                  case 21:
                    throw new TypeError('Invalid type; string or buffer expected');

                  case 22:
                  case "end":
                    return _context10.stop();
                }
              }
            });
          }
          /* WEBPACK VAR INJECTION */

        }).call(this, __webpack_require__(
        /*! ./../node_modules/webpack/buildin/global.js */
        "./node_modules/webpack/buildin/global.js"));
        /***/
      },

      /***/
      "./node_modules/base64-js/index.js":
      /*!*****************************************!*\
        !*** ./node_modules/base64-js/index.js ***!
        \*****************************************/

      /*! no static exports found */

      /***/
      function node_modulesBase64JsIndexJs(module, exports, __webpack_require__) {
        "use strict";

        exports.byteLength = byteLength;
        exports.toByteArray = toByteArray;
        exports.fromByteArray = fromByteArray;
        var lookup = [];
        var revLookup = [];
        var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
        var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

        for (var i = 0, len = code.length; i < len; ++i) {
          lookup[i] = code[i];
          revLookup[code.charCodeAt(i)] = i;
        } // Support decoding URL-safe base64 strings, as Node.js does.
        // See: https://en.wikipedia.org/wiki/Base64#URL_applications


        revLookup['-'.charCodeAt(0)] = 62;
        revLookup['_'.charCodeAt(0)] = 63;

        function getLens(b64) {
          var len = b64.length;

          if (len % 4 > 0) {
            throw new Error('Invalid string. Length must be a multiple of 4');
          } // Trim off extra bytes after placeholder bytes are found
          // See: https://github.com/beatgammit/base64-js/issues/42


          var validLen = b64.indexOf('=');
          if (validLen === -1) validLen = len;
          var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;
          return [validLen, placeHoldersLen];
        } // base64 is 4/3 + up to two characters of the original data


        function byteLength(b64) {
          var lens = getLens(b64);
          var validLen = lens[0];
          var placeHoldersLen = lens[1];
          return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
        }

        function _byteLength(b64, validLen, placeHoldersLen) {
          return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
        }

        function toByteArray(b64) {
          var tmp;
          var lens = getLens(b64);
          var validLen = lens[0];
          var placeHoldersLen = lens[1];
          var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
          var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars

          var len = placeHoldersLen > 0 ? validLen - 4 : validLen;
          var i;

          for (i = 0; i < len; i += 4) {
            tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
            arr[curByte++] = tmp >> 16 & 0xFF;
            arr[curByte++] = tmp >> 8 & 0xFF;
            arr[curByte++] = tmp & 0xFF;
          }

          if (placeHoldersLen === 2) {
            tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
            arr[curByte++] = tmp & 0xFF;
          }

          if (placeHoldersLen === 1) {
            tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
            arr[curByte++] = tmp >> 8 & 0xFF;
            arr[curByte++] = tmp & 0xFF;
          }

          return arr;
        }

        function tripletToBase64(num) {
          return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
        }

        function encodeChunk(uint8, start, end) {
          var tmp;
          var output = [];

          for (var i = start; i < end; i += 3) {
            tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);
            output.push(tripletToBase64(tmp));
          }

          return output.join('');
        }

        function fromByteArray(uint8) {
          var tmp;
          var len = uint8.length;
          var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes

          var parts = [];
          var maxChunkLength = 16383; // must be multiple of 3
          // go through the array every three bytes, we'll deal with trailing stuff later

          for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
            parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
          } // pad the end with zeros, but make sure to not forget the extra bytes


          if (extraBytes === 1) {
            tmp = uint8[len - 1];
            parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');
          } else if (extraBytes === 2) {
            tmp = (uint8[len - 2] << 8) + uint8[len - 1];
            parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');
          }

          return parts.join('');
        }
        /***/

      },

      /***/
      "./node_modules/ieee754/index.js":
      /*!***************************************!*\
        !*** ./node_modules/ieee754/index.js ***!
        \***************************************/

      /*! no static exports found */

      /***/
      function node_modulesIeee754IndexJs(module, exports) {
        exports.read = function (buffer, offset, isLE, mLen, nBytes) {
          var e, m;
          var eLen = nBytes * 8 - mLen - 1;
          var eMax = (1 << eLen) - 1;
          var eBias = eMax >> 1;
          var nBits = -7;
          var i = isLE ? nBytes - 1 : 0;
          var d = isLE ? -1 : 1;
          var s = buffer[offset + i];
          i += d;
          e = s & (1 << -nBits) - 1;
          s >>= -nBits;
          nBits += eLen;

          for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

          m = e & (1 << -nBits) - 1;
          e >>= -nBits;
          nBits += mLen;

          for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

          if (e === 0) {
            e = 1 - eBias;
          } else if (e === eMax) {
            return m ? NaN : (s ? -1 : 1) * Infinity;
          } else {
            m = m + Math.pow(2, mLen);
            e = e - eBias;
          }

          return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
        };

        exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
          var e, m, c;
          var eLen = nBytes * 8 - mLen - 1;
          var eMax = (1 << eLen) - 1;
          var eBias = eMax >> 1;
          var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
          var i = isLE ? 0 : nBytes - 1;
          var d = isLE ? 1 : -1;
          var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
          value = Math.abs(value);

          if (isNaN(value) || value === Infinity) {
            m = isNaN(value) ? 1 : 0;
            e = eMax;
          } else {
            e = Math.floor(Math.log(value) / Math.LN2);

            if (value * (c = Math.pow(2, -e)) < 1) {
              e--;
              c *= 2;
            }

            if (e + eBias >= 1) {
              value += rt / c;
            } else {
              value += rt * Math.pow(2, 1 - eBias);
            }

            if (value * c >= 2) {
              e++;
              c /= 2;
            }

            if (e + eBias >= eMax) {
              m = 0;
              e = eMax;
            } else if (e + eBias >= 1) {
              m = (value * c - 1) * Math.pow(2, mLen);
              e = e + eBias;
            } else {
              m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
              e = 0;
            }
          }

          for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

          e = e << mLen | m;
          eLen += mLen;

          for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

          buffer[offset + i - d] |= s * 128;
        };
        /***/

      },

      /***/
      "./node_modules/is-typedarray/index.js":
      /*!*********************************************!*\
        !*** ./node_modules/is-typedarray/index.js ***!
        \*********************************************/

      /*! no static exports found */

      /***/
      function node_modulesIsTypedarrayIndexJs(module, exports) {
        module.exports = isTypedArray;
        isTypedArray.strict = isStrictTypedArray;
        isTypedArray.loose = isLooseTypedArray;
        var toString = Object.prototype.toString;
        var names = {
          '[object Int8Array]': true,
          '[object Int16Array]': true,
          '[object Int32Array]': true,
          '[object Uint8Array]': true,
          '[object Uint8ClampedArray]': true,
          '[object Uint16Array]': true,
          '[object Uint32Array]': true,
          '[object Float32Array]': true,
          '[object Float64Array]': true
        };

        function isTypedArray(arr) {
          return isStrictTypedArray(arr) || isLooseTypedArray(arr);
        }

        function isStrictTypedArray(arr) {
          return arr instanceof Int8Array || arr instanceof Int16Array || arr instanceof Int32Array || arr instanceof Uint8Array || arr instanceof Uint8ClampedArray || arr instanceof Uint16Array || arr instanceof Uint32Array || arr instanceof Float32Array || arr instanceof Float64Array;
        }

        function isLooseTypedArray(arr) {
          return names[toString.call(arr)];
        }
        /***/

      },

      /***/
      "./node_modules/isarray/index.js":
      /*!***************************************!*\
        !*** ./node_modules/isarray/index.js ***!
        \***************************************/

      /*! no static exports found */

      /***/
      function node_modulesIsarrayIndexJs(module, exports) {
        var toString = {}.toString;

        module.exports = Array.isArray || function (arr) {
          return toString.call(arr) == '[object Array]';
        };
        /***/

      },

      /***/
      "./node_modules/node-libs-browser/node_modules/buffer/index.js":
      /*!*********************************************************************!*\
        !*** ./node_modules/node-libs-browser/node_modules/buffer/index.js ***!
        \*********************************************************************/

      /*! no static exports found */

      /***/
      function node_modulesNodeLibsBrowserNode_modulesBufferIndexJs(module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */

        (function (global) {
          /*!
          * The buffer module from node.js, for the browser.
          *
          * @author   Feross Aboukhadijeh <http://feross.org>
          * @license  MIT
          */

          /* eslint-disable no-proto */
          var base64 = __webpack_require__(
          /*! base64-js */
          "./node_modules/base64-js/index.js");

          var ieee754 = __webpack_require__(
          /*! ieee754 */
          "./node_modules/ieee754/index.js");

          var isArray = __webpack_require__(
          /*! isarray */
          "./node_modules/isarray/index.js");

          exports.Buffer = Buffer;
          exports.SlowBuffer = SlowBuffer;
          exports.INSPECT_MAX_BYTES = 50;
          /**
           * If `Buffer.TYPED_ARRAY_SUPPORT`:
           *   === true    Use Uint8Array implementation (fastest)
           *   === false   Use Object implementation (most compatible, even IE6)
           *
           * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
           * Opera 11.6+, iOS 4.2+.
           *
           * Due to various browser bugs, sometimes the Object implementation will be used even
           * when the browser supports typed arrays.
           *
           * Note:
           *
           *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
           *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
           *
           *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
           *
           *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
           *     incorrect length in some situations.
          
           * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
           * get the Object implementation, which is slower but behaves correctly.
           */

          Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();
          /*
           * Export kMaxLength after typed array support is determined.
           */

          exports.kMaxLength = kMaxLength();

          function typedArraySupport() {
            try {
              var arr = new Uint8Array(1);
              arr.__proto__ = {
                __proto__: Uint8Array.prototype,
                foo: function foo() {
                  return 42;
                }
              };
              return arr.foo() === 42 && // typed array instances can be augmented
              typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
              arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`
            } catch (e) {
              return false;
            }
          }

          function kMaxLength() {
            return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;
          }

          function createBuffer(that, length) {
            if (kMaxLength() < length) {
              throw new RangeError('Invalid typed array length');
            }

            if (Buffer.TYPED_ARRAY_SUPPORT) {
              // Return an augmented `Uint8Array` instance, for best performance
              that = new Uint8Array(length);
              that.__proto__ = Buffer.prototype;
            } else {
              // Fallback: Return an object instance of the Buffer class
              if (that === null) {
                that = new Buffer(length);
              }

              that.length = length;
            }

            return that;
          }
          /**
           * The Buffer constructor returns instances of `Uint8Array` that have their
           * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
           * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
           * and the `Uint8Array` methods. Square bracket notation works as expected -- it
           * returns a single octet.
           *
           * The `Uint8Array` prototype remains unmodified.
           */


          function Buffer(arg, encodingOrOffset, length) {
            if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
              return new Buffer(arg, encodingOrOffset, length);
            } // Common case.


            if (typeof arg === 'number') {
              if (typeof encodingOrOffset === 'string') {
                throw new Error('If encoding is specified then the first argument must be a string');
              }

              return allocUnsafe(this, arg);
            }

            return from(this, arg, encodingOrOffset, length);
          }

          Buffer.poolSize = 8192; // not used by this implementation
          // TODO: Legacy, not needed anymore. Remove in next major version.

          Buffer._augment = function (arr) {
            arr.__proto__ = Buffer.prototype;
            return arr;
          };

          function from(that, value, encodingOrOffset, length) {
            if (typeof value === 'number') {
              throw new TypeError('"value" argument must not be a number');
            }

            if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
              return fromArrayBuffer(that, value, encodingOrOffset, length);
            }

            if (typeof value === 'string') {
              return fromString(that, value, encodingOrOffset);
            }

            return fromObject(that, value);
          }
          /**
           * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
           * if value is a number.
           * Buffer.from(str[, encoding])
           * Buffer.from(array)
           * Buffer.from(buffer)
           * Buffer.from(arrayBuffer[, byteOffset[, length]])
           **/


          Buffer.from = function (value, encodingOrOffset, length) {
            return from(null, value, encodingOrOffset, length);
          };

          if (Buffer.TYPED_ARRAY_SUPPORT) {
            Buffer.prototype.__proto__ = Uint8Array.prototype;
            Buffer.__proto__ = Uint8Array;

            if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {
              // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
              Object.defineProperty(Buffer, Symbol.species, {
                value: null,
                configurable: true
              });
            }
          }

          function assertSize(size) {
            if (typeof size !== 'number') {
              throw new TypeError('"size" argument must be a number');
            } else if (size < 0) {
              throw new RangeError('"size" argument must not be negative');
            }
          }

          function alloc(that, size, fill, encoding) {
            assertSize(size);

            if (size <= 0) {
              return createBuffer(that, size);
            }

            if (fill !== undefined) {
              // Only pay attention to encoding if it's a string. This
              // prevents accidentally sending in a number that would
              // be interpretted as a start offset.
              return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);
            }

            return createBuffer(that, size);
          }
          /**
           * Creates a new filled Buffer instance.
           * alloc(size[, fill[, encoding]])
           **/


          Buffer.alloc = function (size, fill, encoding) {
            return alloc(null, size, fill, encoding);
          };

          function allocUnsafe(that, size) {
            assertSize(size);
            that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);

            if (!Buffer.TYPED_ARRAY_SUPPORT) {
              for (var i = 0; i < size; ++i) {
                that[i] = 0;
              }
            }

            return that;
          }
          /**
           * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
           * */


          Buffer.allocUnsafe = function (size) {
            return allocUnsafe(null, size);
          };
          /**
           * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
           */


          Buffer.allocUnsafeSlow = function (size) {
            return allocUnsafe(null, size);
          };

          function fromString(that, string, encoding) {
            if (typeof encoding !== 'string' || encoding === '') {
              encoding = 'utf8';
            }

            if (!Buffer.isEncoding(encoding)) {
              throw new TypeError('"encoding" must be a valid string encoding');
            }

            var length = byteLength(string, encoding) | 0;
            that = createBuffer(that, length);
            var actual = that.write(string, encoding);

            if (actual !== length) {
              // Writing a hex string, for example, that contains invalid characters will
              // cause everything after the first invalid character to be ignored. (e.g.
              // 'abxxcd' will be treated as 'ab')
              that = that.slice(0, actual);
            }

            return that;
          }

          function fromArrayLike(that, array) {
            var length = array.length < 0 ? 0 : checked(array.length) | 0;
            that = createBuffer(that, length);

            for (var i = 0; i < length; i += 1) {
              that[i] = array[i] & 255;
            }

            return that;
          }

          function fromArrayBuffer(that, array, byteOffset, length) {
            array.byteLength; // this throws if `array` is not a valid ArrayBuffer

            if (byteOffset < 0 || array.byteLength < byteOffset) {
              throw new RangeError('\'offset\' is out of bounds');
            }

            if (array.byteLength < byteOffset + (length || 0)) {
              throw new RangeError('\'length\' is out of bounds');
            }

            if (byteOffset === undefined && length === undefined) {
              array = new Uint8Array(array);
            } else if (length === undefined) {
              array = new Uint8Array(array, byteOffset);
            } else {
              array = new Uint8Array(array, byteOffset, length);
            }

            if (Buffer.TYPED_ARRAY_SUPPORT) {
              // Return an augmented `Uint8Array` instance, for best performance
              that = array;
              that.__proto__ = Buffer.prototype;
            } else {
              // Fallback: Return an object instance of the Buffer class
              that = fromArrayLike(that, array);
            }

            return that;
          }

          function fromObject(that, obj) {
            if (Buffer.isBuffer(obj)) {
              var len = checked(obj.length) | 0;
              that = createBuffer(that, len);

              if (that.length === 0) {
                return that;
              }

              obj.copy(that, 0, 0, len);
              return that;
            }

            if (obj) {
              if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {
                if (typeof obj.length !== 'number' || isnan(obj.length)) {
                  return createBuffer(that, 0);
                }

                return fromArrayLike(that, obj);
              }

              if (obj.type === 'Buffer' && isArray(obj.data)) {
                return fromArrayLike(that, obj.data);
              }
            }

            throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');
          }

          function checked(length) {
            // Note: cannot use `length < kMaxLength()` here because that fails when
            // length is NaN (which is otherwise coerced to zero.)
            if (length >= kMaxLength()) {
              throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');
            }

            return length | 0;
          }

          function SlowBuffer(length) {
            if (+length != length) {
              // eslint-disable-line eqeqeq
              length = 0;
            }

            return Buffer.alloc(+length);
          }

          Buffer.isBuffer = function isBuffer(b) {
            return !!(b != null && b._isBuffer);
          };

          Buffer.compare = function compare(a, b) {
            if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
              throw new TypeError('Arguments must be Buffers');
            }

            if (a === b) return 0;
            var x = a.length;
            var y = b.length;

            for (var i = 0, len = Math.min(x, y); i < len; ++i) {
              if (a[i] !== b[i]) {
                x = a[i];
                y = b[i];
                break;
              }
            }

            if (x < y) return -1;
            if (y < x) return 1;
            return 0;
          };

          Buffer.isEncoding = function isEncoding(encoding) {
            switch (String(encoding).toLowerCase()) {
              case 'hex':
              case 'utf8':
              case 'utf-8':
              case 'ascii':
              case 'latin1':
              case 'binary':
              case 'base64':
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return true;

              default:
                return false;
            }
          };

          Buffer.concat = function concat(list, length) {
            if (!isArray(list)) {
              throw new TypeError('"list" argument must be an Array of Buffers');
            }

            if (list.length === 0) {
              return Buffer.alloc(0);
            }

            var i;

            if (length === undefined) {
              length = 0;

              for (i = 0; i < list.length; ++i) {
                length += list[i].length;
              }
            }

            var buffer = Buffer.allocUnsafe(length);
            var pos = 0;

            for (i = 0; i < list.length; ++i) {
              var buf = list[i];

              if (!Buffer.isBuffer(buf)) {
                throw new TypeError('"list" argument must be an Array of Buffers');
              }

              buf.copy(buffer, pos);
              pos += buf.length;
            }

            return buffer;
          };

          function byteLength(string, encoding) {
            if (Buffer.isBuffer(string)) {
              return string.length;
            }

            if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
              return string.byteLength;
            }

            if (typeof string !== 'string') {
              string = '' + string;
            }

            var len = string.length;
            if (len === 0) return 0; // Use a for loop to avoid recursion

            var loweredCase = false;

            for (;;) {
              switch (encoding) {
                case 'ascii':
                case 'latin1':
                case 'binary':
                  return len;

                case 'utf8':
                case 'utf-8':
                case undefined:
                  return utf8ToBytes(string).length;

                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                  return len * 2;

                case 'hex':
                  return len >>> 1;

                case 'base64':
                  return base64ToBytes(string).length;

                default:
                  if (loweredCase) return utf8ToBytes(string).length; // assume utf8

                  encoding = ('' + encoding).toLowerCase();
                  loweredCase = true;
              }
            }
          }

          Buffer.byteLength = byteLength;

          function slowToString(encoding, start, end) {
            var loweredCase = false; // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
            // property of a typed array.
            // This behaves neither like String nor Uint8Array in that we set start/end
            // to their upper/lower bounds if the value passed is out of range.
            // undefined is handled specially as per ECMA-262 6th Edition,
            // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.

            if (start === undefined || start < 0) {
              start = 0;
            } // Return early if start > this.length. Done here to prevent potential uint32
            // coercion fail below.


            if (start > this.length) {
              return '';
            }

            if (end === undefined || end > this.length) {
              end = this.length;
            }

            if (end <= 0) {
              return '';
            } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.


            end >>>= 0;
            start >>>= 0;

            if (end <= start) {
              return '';
            }

            if (!encoding) encoding = 'utf8';

            while (true) {
              switch (encoding) {
                case 'hex':
                  return hexSlice(this, start, end);

                case 'utf8':
                case 'utf-8':
                  return utf8Slice(this, start, end);

                case 'ascii':
                  return asciiSlice(this, start, end);

                case 'latin1':
                case 'binary':
                  return latin1Slice(this, start, end);

                case 'base64':
                  return base64Slice(this, start, end);

                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                  return utf16leSlice(this, start, end);

                default:
                  if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
                  encoding = (encoding + '').toLowerCase();
                  loweredCase = true;
              }
            }
          } // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
          // Buffer instances.


          Buffer.prototype._isBuffer = true;

          function swap(b, n, m) {
            var i = b[n];
            b[n] = b[m];
            b[m] = i;
          }

          Buffer.prototype.swap16 = function swap16() {
            var len = this.length;

            if (len % 2 !== 0) {
              throw new RangeError('Buffer size must be a multiple of 16-bits');
            }

            for (var i = 0; i < len; i += 2) {
              swap(this, i, i + 1);
            }

            return this;
          };

          Buffer.prototype.swap32 = function swap32() {
            var len = this.length;

            if (len % 4 !== 0) {
              throw new RangeError('Buffer size must be a multiple of 32-bits');
            }

            for (var i = 0; i < len; i += 4) {
              swap(this, i, i + 3);
              swap(this, i + 1, i + 2);
            }

            return this;
          };

          Buffer.prototype.swap64 = function swap64() {
            var len = this.length;

            if (len % 8 !== 0) {
              throw new RangeError('Buffer size must be a multiple of 64-bits');
            }

            for (var i = 0; i < len; i += 8) {
              swap(this, i, i + 7);
              swap(this, i + 1, i + 6);
              swap(this, i + 2, i + 5);
              swap(this, i + 3, i + 4);
            }

            return this;
          };

          Buffer.prototype.toString = function toString() {
            var length = this.length | 0;
            if (length === 0) return '';
            if (arguments.length === 0) return utf8Slice(this, 0, length);
            return slowToString.apply(this, arguments);
          };

          Buffer.prototype.equals = function equals(b) {
            if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
            if (this === b) return true;
            return Buffer.compare(this, b) === 0;
          };

          Buffer.prototype.inspect = function inspect() {
            var str = '';
            var max = exports.INSPECT_MAX_BYTES;

            if (this.length > 0) {
              str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');
              if (this.length > max) str += ' ... ';
            }

            return '<Buffer ' + str + '>';
          };

          Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
            if (!Buffer.isBuffer(target)) {
              throw new TypeError('Argument must be a Buffer');
            }

            if (start === undefined) {
              start = 0;
            }

            if (end === undefined) {
              end = target ? target.length : 0;
            }

            if (thisStart === undefined) {
              thisStart = 0;
            }

            if (thisEnd === undefined) {
              thisEnd = this.length;
            }

            if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
              throw new RangeError('out of range index');
            }

            if (thisStart >= thisEnd && start >= end) {
              return 0;
            }

            if (thisStart >= thisEnd) {
              return -1;
            }

            if (start >= end) {
              return 1;
            }

            start >>>= 0;
            end >>>= 0;
            thisStart >>>= 0;
            thisEnd >>>= 0;
            if (this === target) return 0;
            var x = thisEnd - thisStart;
            var y = end - start;
            var len = Math.min(x, y);
            var thisCopy = this.slice(thisStart, thisEnd);
            var targetCopy = target.slice(start, end);

            for (var i = 0; i < len; ++i) {
              if (thisCopy[i] !== targetCopy[i]) {
                x = thisCopy[i];
                y = targetCopy[i];
                break;
              }
            }

            if (x < y) return -1;
            if (y < x) return 1;
            return 0;
          }; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
          // OR the last index of `val` in `buffer` at offset <= `byteOffset`.
          //
          // Arguments:
          // - buffer - a Buffer to search
          // - val - a string, Buffer, or number
          // - byteOffset - an index into `buffer`; will be clamped to an int32
          // - encoding - an optional encoding, relevant is val is a string
          // - dir - true for indexOf, false for lastIndexOf


          function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
            // Empty buffer means no match
            if (buffer.length === 0) return -1; // Normalize byteOffset

            if (typeof byteOffset === 'string') {
              encoding = byteOffset;
              byteOffset = 0;
            } else if (byteOffset > 0x7fffffff) {
              byteOffset = 0x7fffffff;
            } else if (byteOffset < -0x80000000) {
              byteOffset = -0x80000000;
            }

            byteOffset = +byteOffset; // Coerce to Number.

            if (isNaN(byteOffset)) {
              // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
              byteOffset = dir ? 0 : buffer.length - 1;
            } // Normalize byteOffset: negative offsets start from the end of the buffer


            if (byteOffset < 0) byteOffset = buffer.length + byteOffset;

            if (byteOffset >= buffer.length) {
              if (dir) return -1;else byteOffset = buffer.length - 1;
            } else if (byteOffset < 0) {
              if (dir) byteOffset = 0;else return -1;
            } // Normalize val


            if (typeof val === 'string') {
              val = Buffer.from(val, encoding);
            } // Finally, search either indexOf (if dir is true) or lastIndexOf


            if (Buffer.isBuffer(val)) {
              // Special case: looking for empty string/buffer always fails
              if (val.length === 0) {
                return -1;
              }

              return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
            } else if (typeof val === 'number') {
              val = val & 0xFF; // Search for a byte value [0-255]

              if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {
                if (dir) {
                  return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
                } else {
                  return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
                }
              }

              return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
            }

            throw new TypeError('val must be string, number or Buffer');
          }

          function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
            var indexSize = 1;
            var arrLength = arr.length;
            var valLength = val.length;

            if (encoding !== undefined) {
              encoding = String(encoding).toLowerCase();

              if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
                if (arr.length < 2 || val.length < 2) {
                  return -1;
                }

                indexSize = 2;
                arrLength /= 2;
                valLength /= 2;
                byteOffset /= 2;
              }
            }

            function read(buf, i) {
              if (indexSize === 1) {
                return buf[i];
              } else {
                return buf.readUInt16BE(i * indexSize);
              }
            }

            var i;

            if (dir) {
              var foundIndex = -1;

              for (i = byteOffset; i < arrLength; i++) {
                if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
                  if (foundIndex === -1) foundIndex = i;
                  if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
                } else {
                  if (foundIndex !== -1) i -= i - foundIndex;
                  foundIndex = -1;
                }
              }
            } else {
              if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;

              for (i = byteOffset; i >= 0; i--) {
                var found = true;

                for (var j = 0; j < valLength; j++) {
                  if (read(arr, i + j) !== read(val, j)) {
                    found = false;
                    break;
                  }
                }

                if (found) return i;
              }
            }

            return -1;
          }

          Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
            return this.indexOf(val, byteOffset, encoding) !== -1;
          };

          Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
            return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
          };

          Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
            return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
          };

          function hexWrite(buf, string, offset, length) {
            offset = Number(offset) || 0;
            var remaining = buf.length - offset;

            if (!length) {
              length = remaining;
            } else {
              length = Number(length);

              if (length > remaining) {
                length = remaining;
              }
            } // must be an even number of digits


            var strLen = string.length;
            if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');

            if (length > strLen / 2) {
              length = strLen / 2;
            }

            for (var i = 0; i < length; ++i) {
              var parsed = parseInt(string.substr(i * 2, 2), 16);
              if (isNaN(parsed)) return i;
              buf[offset + i] = parsed;
            }

            return i;
          }

          function utf8Write(buf, string, offset, length) {
            return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
          }

          function asciiWrite(buf, string, offset, length) {
            return blitBuffer(asciiToBytes(string), buf, offset, length);
          }

          function latin1Write(buf, string, offset, length) {
            return asciiWrite(buf, string, offset, length);
          }

          function base64Write(buf, string, offset, length) {
            return blitBuffer(base64ToBytes(string), buf, offset, length);
          }

          function ucs2Write(buf, string, offset, length) {
            return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
          }

          Buffer.prototype.write = function write(string, offset, length, encoding) {
            // Buffer#write(string)
            if (offset === undefined) {
              encoding = 'utf8';
              length = this.length;
              offset = 0; // Buffer#write(string, encoding)
            } else if (length === undefined && typeof offset === 'string') {
              encoding = offset;
              length = this.length;
              offset = 0; // Buffer#write(string, offset[, length][, encoding])
            } else if (isFinite(offset)) {
              offset = offset | 0;

              if (isFinite(length)) {
                length = length | 0;
                if (encoding === undefined) encoding = 'utf8';
              } else {
                encoding = length;
                length = undefined;
              } // legacy write(string, encoding, offset, length) - remove in v0.13

            } else {
              throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
            }

            var remaining = this.length - offset;
            if (length === undefined || length > remaining) length = remaining;

            if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
              throw new RangeError('Attempt to write outside buffer bounds');
            }

            if (!encoding) encoding = 'utf8';
            var loweredCase = false;

            for (;;) {
              switch (encoding) {
                case 'hex':
                  return hexWrite(this, string, offset, length);

                case 'utf8':
                case 'utf-8':
                  return utf8Write(this, string, offset, length);

                case 'ascii':
                  return asciiWrite(this, string, offset, length);

                case 'latin1':
                case 'binary':
                  return latin1Write(this, string, offset, length);

                case 'base64':
                  // Warning: maxLength not taken into account in base64Write
                  return base64Write(this, string, offset, length);

                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                  return ucs2Write(this, string, offset, length);

                default:
                  if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
                  encoding = ('' + encoding).toLowerCase();
                  loweredCase = true;
              }
            }
          };

          Buffer.prototype.toJSON = function toJSON() {
            return {
              type: 'Buffer',
              data: Array.prototype.slice.call(this._arr || this, 0)
            };
          };

          function base64Slice(buf, start, end) {
            if (start === 0 && end === buf.length) {
              return base64.fromByteArray(buf);
            } else {
              return base64.fromByteArray(buf.slice(start, end));
            }
          }

          function utf8Slice(buf, start, end) {
            end = Math.min(buf.length, end);
            var res = [];
            var i = start;

            while (i < end) {
              var firstByte = buf[i];
              var codePoint = null;
              var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;

              if (i + bytesPerSequence <= end) {
                var secondByte, thirdByte, fourthByte, tempCodePoint;

                switch (bytesPerSequence) {
                  case 1:
                    if (firstByte < 0x80) {
                      codePoint = firstByte;
                    }

                    break;

                  case 2:
                    secondByte = buf[i + 1];

                    if ((secondByte & 0xC0) === 0x80) {
                      tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;

                      if (tempCodePoint > 0x7F) {
                        codePoint = tempCodePoint;
                      }
                    }

                    break;

                  case 3:
                    secondByte = buf[i + 1];
                    thirdByte = buf[i + 2];

                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
                      tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;

                      if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                        codePoint = tempCodePoint;
                      }
                    }

                    break;

                  case 4:
                    secondByte = buf[i + 1];
                    thirdByte = buf[i + 2];
                    fourthByte = buf[i + 3];

                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
                      tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;

                      if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                        codePoint = tempCodePoint;
                      }
                    }

                }
              }

              if (codePoint === null) {
                // we did not generate a valid codePoint so insert a
                // replacement char (U+FFFD) and advance only 1 byte
                codePoint = 0xFFFD;
                bytesPerSequence = 1;
              } else if (codePoint > 0xFFFF) {
                // encode to utf16 (surrogate pair dance)
                codePoint -= 0x10000;
                res.push(codePoint >>> 10 & 0x3FF | 0xD800);
                codePoint = 0xDC00 | codePoint & 0x3FF;
              }

              res.push(codePoint);
              i += bytesPerSequence;
            }

            return decodeCodePointsArray(res);
          } // Based on http://stackoverflow.com/a/22747272/680742, the browser with
          // the lowest limit is Chrome, with 0x10000 args.
          // We go 1 magnitude less, for safety


          var MAX_ARGUMENTS_LENGTH = 0x1000;

          function decodeCodePointsArray(codePoints) {
            var len = codePoints.length;

            if (len <= MAX_ARGUMENTS_LENGTH) {
              return String.fromCharCode.apply(String, codePoints); // avoid extra slice()
            } // Decode in chunks to avoid "call stack size exceeded".


            var res = '';
            var i = 0;

            while (i < len) {
              res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
            }

            return res;
          }

          function asciiSlice(buf, start, end) {
            var ret = '';
            end = Math.min(buf.length, end);

            for (var i = start; i < end; ++i) {
              ret += String.fromCharCode(buf[i] & 0x7F);
            }

            return ret;
          }

          function latin1Slice(buf, start, end) {
            var ret = '';
            end = Math.min(buf.length, end);

            for (var i = start; i < end; ++i) {
              ret += String.fromCharCode(buf[i]);
            }

            return ret;
          }

          function hexSlice(buf, start, end) {
            var len = buf.length;
            if (!start || start < 0) start = 0;
            if (!end || end < 0 || end > len) end = len;
            var out = '';

            for (var i = start; i < end; ++i) {
              out += toHex(buf[i]);
            }

            return out;
          }

          function utf16leSlice(buf, start, end) {
            var bytes = buf.slice(start, end);
            var res = '';

            for (var i = 0; i < bytes.length; i += 2) {
              res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
            }

            return res;
          }

          Buffer.prototype.slice = function slice(start, end) {
            var len = this.length;
            start = ~~start;
            end = end === undefined ? len : ~~end;

            if (start < 0) {
              start += len;
              if (start < 0) start = 0;
            } else if (start > len) {
              start = len;
            }

            if (end < 0) {
              end += len;
              if (end < 0) end = 0;
            } else if (end > len) {
              end = len;
            }

            if (end < start) end = start;
            var newBuf;

            if (Buffer.TYPED_ARRAY_SUPPORT) {
              newBuf = this.subarray(start, end);
              newBuf.__proto__ = Buffer.prototype;
            } else {
              var sliceLen = end - start;
              newBuf = new Buffer(sliceLen, undefined);

              for (var i = 0; i < sliceLen; ++i) {
                newBuf[i] = this[i + start];
              }
            }

            return newBuf;
          };
          /*
           * Need to make sure that buffer isn't trying to write out of bounds.
           */


          function checkOffset(offset, ext, length) {
            if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
            if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
          }

          Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
            offset = offset | 0;
            byteLength = byteLength | 0;
            if (!noAssert) checkOffset(offset, byteLength, this.length);
            var val = this[offset];
            var mul = 1;
            var i = 0;

            while (++i < byteLength && (mul *= 0x100)) {
              val += this[offset + i] * mul;
            }

            return val;
          };

          Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
            offset = offset | 0;
            byteLength = byteLength | 0;

            if (!noAssert) {
              checkOffset(offset, byteLength, this.length);
            }

            var val = this[offset + --byteLength];
            var mul = 1;

            while (byteLength > 0 && (mul *= 0x100)) {
              val += this[offset + --byteLength] * mul;
            }

            return val;
          };

          Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
            if (!noAssert) checkOffset(offset, 1, this.length);
            return this[offset];
          };

          Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
            if (!noAssert) checkOffset(offset, 2, this.length);
            return this[offset] | this[offset + 1] << 8;
          };

          Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
            if (!noAssert) checkOffset(offset, 2, this.length);
            return this[offset] << 8 | this[offset + 1];
          };

          Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
            if (!noAssert) checkOffset(offset, 4, this.length);
            return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
          };

          Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
            if (!noAssert) checkOffset(offset, 4, this.length);
            return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
          };

          Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
            offset = offset | 0;
            byteLength = byteLength | 0;
            if (!noAssert) checkOffset(offset, byteLength, this.length);
            var val = this[offset];
            var mul = 1;
            var i = 0;

            while (++i < byteLength && (mul *= 0x100)) {
              val += this[offset + i] * mul;
            }

            mul *= 0x80;
            if (val >= mul) val -= Math.pow(2, 8 * byteLength);
            return val;
          };

          Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
            offset = offset | 0;
            byteLength = byteLength | 0;
            if (!noAssert) checkOffset(offset, byteLength, this.length);
            var i = byteLength;
            var mul = 1;
            var val = this[offset + --i];

            while (i > 0 && (mul *= 0x100)) {
              val += this[offset + --i] * mul;
            }

            mul *= 0x80;
            if (val >= mul) val -= Math.pow(2, 8 * byteLength);
            return val;
          };

          Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
            if (!noAssert) checkOffset(offset, 1, this.length);
            if (!(this[offset] & 0x80)) return this[offset];
            return (0xff - this[offset] + 1) * -1;
          };

          Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
            if (!noAssert) checkOffset(offset, 2, this.length);
            var val = this[offset] | this[offset + 1] << 8;
            return val & 0x8000 ? val | 0xFFFF0000 : val;
          };

          Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
            if (!noAssert) checkOffset(offset, 2, this.length);
            var val = this[offset + 1] | this[offset] << 8;
            return val & 0x8000 ? val | 0xFFFF0000 : val;
          };

          Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
            if (!noAssert) checkOffset(offset, 4, this.length);
            return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
          };

          Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
            if (!noAssert) checkOffset(offset, 4, this.length);
            return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
          };

          Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
            if (!noAssert) checkOffset(offset, 4, this.length);
            return ieee754.read(this, offset, true, 23, 4);
          };

          Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
            if (!noAssert) checkOffset(offset, 4, this.length);
            return ieee754.read(this, offset, false, 23, 4);
          };

          Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
            if (!noAssert) checkOffset(offset, 8, this.length);
            return ieee754.read(this, offset, true, 52, 8);
          };

          Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
            if (!noAssert) checkOffset(offset, 8, this.length);
            return ieee754.read(this, offset, false, 52, 8);
          };

          function checkInt(buf, value, offset, ext, max, min) {
            if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
            if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
            if (offset + ext > buf.length) throw new RangeError('Index out of range');
          }

          Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
            value = +value;
            offset = offset | 0;
            byteLength = byteLength | 0;

            if (!noAssert) {
              var maxBytes = Math.pow(2, 8 * byteLength) - 1;
              checkInt(this, value, offset, byteLength, maxBytes, 0);
            }

            var mul = 1;
            var i = 0;
            this[offset] = value & 0xFF;

            while (++i < byteLength && (mul *= 0x100)) {
              this[offset + i] = value / mul & 0xFF;
            }

            return offset + byteLength;
          };

          Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
            value = +value;
            offset = offset | 0;
            byteLength = byteLength | 0;

            if (!noAssert) {
              var maxBytes = Math.pow(2, 8 * byteLength) - 1;
              checkInt(this, value, offset, byteLength, maxBytes, 0);
            }

            var i = byteLength - 1;
            var mul = 1;
            this[offset + i] = value & 0xFF;

            while (--i >= 0 && (mul *= 0x100)) {
              this[offset + i] = value / mul & 0xFF;
            }

            return offset + byteLength;
          };

          Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
            if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
            this[offset] = value & 0xff;
            return offset + 1;
          };

          function objectWriteUInt16(buf, value, offset, littleEndian) {
            if (value < 0) value = 0xffff + value + 1;

            for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
              buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;
            }
          }

          Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);

            if (Buffer.TYPED_ARRAY_SUPPORT) {
              this[offset] = value & 0xff;
              this[offset + 1] = value >>> 8;
            } else {
              objectWriteUInt16(this, value, offset, true);
            }

            return offset + 2;
          };

          Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);

            if (Buffer.TYPED_ARRAY_SUPPORT) {
              this[offset] = value >>> 8;
              this[offset + 1] = value & 0xff;
            } else {
              objectWriteUInt16(this, value, offset, false);
            }

            return offset + 2;
          };

          function objectWriteUInt32(buf, value, offset, littleEndian) {
            if (value < 0) value = 0xffffffff + value + 1;

            for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
              buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;
            }
          }

          Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);

            if (Buffer.TYPED_ARRAY_SUPPORT) {
              this[offset + 3] = value >>> 24;
              this[offset + 2] = value >>> 16;
              this[offset + 1] = value >>> 8;
              this[offset] = value & 0xff;
            } else {
              objectWriteUInt32(this, value, offset, true);
            }

            return offset + 4;
          };

          Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);

            if (Buffer.TYPED_ARRAY_SUPPORT) {
              this[offset] = value >>> 24;
              this[offset + 1] = value >>> 16;
              this[offset + 2] = value >>> 8;
              this[offset + 3] = value & 0xff;
            } else {
              objectWriteUInt32(this, value, offset, false);
            }

            return offset + 4;
          };

          Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
            value = +value;
            offset = offset | 0;

            if (!noAssert) {
              var limit = Math.pow(2, 8 * byteLength - 1);
              checkInt(this, value, offset, byteLength, limit - 1, -limit);
            }

            var i = 0;
            var mul = 1;
            var sub = 0;
            this[offset] = value & 0xFF;

            while (++i < byteLength && (mul *= 0x100)) {
              if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
                sub = 1;
              }

              this[offset + i] = (value / mul >> 0) - sub & 0xFF;
            }

            return offset + byteLength;
          };

          Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
            value = +value;
            offset = offset | 0;

            if (!noAssert) {
              var limit = Math.pow(2, 8 * byteLength - 1);
              checkInt(this, value, offset, byteLength, limit - 1, -limit);
            }

            var i = byteLength - 1;
            var mul = 1;
            var sub = 0;
            this[offset + i] = value & 0xFF;

            while (--i >= 0 && (mul *= 0x100)) {
              if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
                sub = 1;
              }

              this[offset + i] = (value / mul >> 0) - sub & 0xFF;
            }

            return offset + byteLength;
          };

          Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
            if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
            if (value < 0) value = 0xff + value + 1;
            this[offset] = value & 0xff;
            return offset + 1;
          };

          Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);

            if (Buffer.TYPED_ARRAY_SUPPORT) {
              this[offset] = value & 0xff;
              this[offset + 1] = value >>> 8;
            } else {
              objectWriteUInt16(this, value, offset, true);
            }

            return offset + 2;
          };

          Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);

            if (Buffer.TYPED_ARRAY_SUPPORT) {
              this[offset] = value >>> 8;
              this[offset + 1] = value & 0xff;
            } else {
              objectWriteUInt16(this, value, offset, false);
            }

            return offset + 2;
          };

          Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);

            if (Buffer.TYPED_ARRAY_SUPPORT) {
              this[offset] = value & 0xff;
              this[offset + 1] = value >>> 8;
              this[offset + 2] = value >>> 16;
              this[offset + 3] = value >>> 24;
            } else {
              objectWriteUInt32(this, value, offset, true);
            }

            return offset + 4;
          };

          Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
            if (value < 0) value = 0xffffffff + value + 1;

            if (Buffer.TYPED_ARRAY_SUPPORT) {
              this[offset] = value >>> 24;
              this[offset + 1] = value >>> 16;
              this[offset + 2] = value >>> 8;
              this[offset + 3] = value & 0xff;
            } else {
              objectWriteUInt32(this, value, offset, false);
            }

            return offset + 4;
          };

          function checkIEEE754(buf, value, offset, ext, max, min) {
            if (offset + ext > buf.length) throw new RangeError('Index out of range');
            if (offset < 0) throw new RangeError('Index out of range');
          }

          function writeFloat(buf, value, offset, littleEndian, noAssert) {
            if (!noAssert) {
              checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
            }

            ieee754.write(buf, value, offset, littleEndian, 23, 4);
            return offset + 4;
          }

          Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
            return writeFloat(this, value, offset, true, noAssert);
          };

          Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
            return writeFloat(this, value, offset, false, noAssert);
          };

          function writeDouble(buf, value, offset, littleEndian, noAssert) {
            if (!noAssert) {
              checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);
            }

            ieee754.write(buf, value, offset, littleEndian, 52, 8);
            return offset + 8;
          }

          Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
            return writeDouble(this, value, offset, true, noAssert);
          };

          Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
            return writeDouble(this, value, offset, false, noAssert);
          }; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)


          Buffer.prototype.copy = function copy(target, targetStart, start, end) {
            if (!start) start = 0;
            if (!end && end !== 0) end = this.length;
            if (targetStart >= target.length) targetStart = target.length;
            if (!targetStart) targetStart = 0;
            if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done

            if (end === start) return 0;
            if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions

            if (targetStart < 0) {
              throw new RangeError('targetStart out of bounds');
            }

            if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');
            if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?

            if (end > this.length) end = this.length;

            if (target.length - targetStart < end - start) {
              end = target.length - targetStart + start;
            }

            var len = end - start;
            var i;

            if (this === target && start < targetStart && targetStart < end) {
              // descending copy from end
              for (i = len - 1; i >= 0; --i) {
                target[i + targetStart] = this[i + start];
              }
            } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
              // ascending copy from start
              for (i = 0; i < len; ++i) {
                target[i + targetStart] = this[i + start];
              }
            } else {
              Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);
            }

            return len;
          }; // Usage:
          //    buffer.fill(number[, offset[, end]])
          //    buffer.fill(buffer[, offset[, end]])
          //    buffer.fill(string[, offset[, end]][, encoding])


          Buffer.prototype.fill = function fill(val, start, end, encoding) {
            // Handle string cases:
            if (typeof val === 'string') {
              if (typeof start === 'string') {
                encoding = start;
                start = 0;
                end = this.length;
              } else if (typeof end === 'string') {
                encoding = end;
                end = this.length;
              }

              if (val.length === 1) {
                var code = val.charCodeAt(0);

                if (code < 256) {
                  val = code;
                }
              }

              if (encoding !== undefined && typeof encoding !== 'string') {
                throw new TypeError('encoding must be a string');
              }

              if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
                throw new TypeError('Unknown encoding: ' + encoding);
              }
            } else if (typeof val === 'number') {
              val = val & 255;
            } // Invalid ranges are not set to a default, so can range check early.


            if (start < 0 || this.length < start || this.length < end) {
              throw new RangeError('Out of range index');
            }

            if (end <= start) {
              return this;
            }

            start = start >>> 0;
            end = end === undefined ? this.length : end >>> 0;
            if (!val) val = 0;
            var i;

            if (typeof val === 'number') {
              for (i = start; i < end; ++i) {
                this[i] = val;
              }
            } else {
              var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());
              var len = bytes.length;

              for (i = 0; i < end - start; ++i) {
                this[i + start] = bytes[i % len];
              }
            }

            return this;
          }; // HELPER FUNCTIONS
          // ================


          var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;

          function base64clean(str) {
            // Node strips out invalid characters like \n and \t from the string, base64-js does not
            str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''

            if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not

            while (str.length % 4 !== 0) {
              str = str + '=';
            }

            return str;
          }

          function stringtrim(str) {
            if (str.trim) return str.trim();
            return str.replace(/^\s+|\s+$/g, '');
          }

          function toHex(n) {
            if (n < 16) return '0' + n.toString(16);
            return n.toString(16);
          }

          function utf8ToBytes(string, units) {
            units = units || Infinity;
            var codePoint;
            var length = string.length;
            var leadSurrogate = null;
            var bytes = [];

            for (var i = 0; i < length; ++i) {
              codePoint = string.charCodeAt(i); // is surrogate component

              if (codePoint > 0xD7FF && codePoint < 0xE000) {
                // last char was a lead
                if (!leadSurrogate) {
                  // no lead yet
                  if (codePoint > 0xDBFF) {
                    // unexpected trail
                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
                    continue;
                  } else if (i + 1 === length) {
                    // unpaired lead
                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
                    continue;
                  } // valid lead


                  leadSurrogate = codePoint;
                  continue;
                } // 2 leads in a row


                if (codePoint < 0xDC00) {
                  if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
                  leadSurrogate = codePoint;
                  continue;
                } // valid surrogate pair


                codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
              } else if (leadSurrogate) {
                // valid bmp char, but last char was a lead
                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
              }

              leadSurrogate = null; // encode utf8

              if (codePoint < 0x80) {
                if ((units -= 1) < 0) break;
                bytes.push(codePoint);
              } else if (codePoint < 0x800) {
                if ((units -= 2) < 0) break;
                bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
              } else if (codePoint < 0x10000) {
                if ((units -= 3) < 0) break;
                bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
              } else if (codePoint < 0x110000) {
                if ((units -= 4) < 0) break;
                bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
              } else {
                throw new Error('Invalid code point');
              }
            }

            return bytes;
          }

          function asciiToBytes(str) {
            var byteArray = [];

            for (var i = 0; i < str.length; ++i) {
              // Node's code seems to be doing this and not & 0x7F..
              byteArray.push(str.charCodeAt(i) & 0xFF);
            }

            return byteArray;
          }

          function utf16leToBytes(str, units) {
            var c, hi, lo;
            var byteArray = [];

            for (var i = 0; i < str.length; ++i) {
              if ((units -= 2) < 0) break;
              c = str.charCodeAt(i);
              hi = c >> 8;
              lo = c % 256;
              byteArray.push(lo);
              byteArray.push(hi);
            }

            return byteArray;
          }

          function base64ToBytes(str) {
            return base64.toByteArray(base64clean(str));
          }

          function blitBuffer(src, dst, offset, length) {
            for (var i = 0; i < length; ++i) {
              if (i + offset >= dst.length || i >= src.length) break;
              dst[i + offset] = src[i];
            }

            return i;
          }

          function isnan(val) {
            return val !== val; // eslint-disable-line no-self-compare
          }
          /* WEBPACK VAR INJECTION */

        }).call(this, __webpack_require__(
        /*! ./../../../webpack/buildin/global.js */
        "./node_modules/webpack/buildin/global.js"));
        /***/
      },

      /***/
      "./node_modules/typedarray-to-buffer/index.js":
      /*!****************************************************!*\
        !*** ./node_modules/typedarray-to-buffer/index.js ***!
        \****************************************************/

      /*! no static exports found */

      /***/
      function node_modulesTypedarrayToBufferIndexJs(module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */
        (function (Buffer) {
          /**
          * Convert a typed array to a Buffer without a copy
          *
          * Author:   Feross Aboukhadijeh <https://feross.org>
          * License:  MIT
          *
          * `npm install typedarray-to-buffer`
          */
          var isTypedArray = __webpack_require__(
          /*! is-typedarray */
          "./node_modules/is-typedarray/index.js").strict;

          module.exports = function typedarrayToBuffer(arr) {
            if (isTypedArray(arr)) {
              // To avoid a copy, use the typed array's underlying ArrayBuffer to back new Buffer
              var buf = Buffer.from(arr.buffer);

              if (arr.byteLength !== arr.buffer.byteLength) {
                // Respect the "view", i.e. byteOffset and byteLength, without doing a copy
                buf = buf.slice(arr.byteOffset, arr.byteOffset + arr.byteLength);
              }

              return buf;
            } else {
              // Pass through all other types to `Buffer.from`
              return Buffer.from(arr);
            }
          };
          /* WEBPACK VAR INJECTION */

        }).call(this, __webpack_require__(
        /*! ./../node-libs-browser/node_modules/buffer/index.js */
        "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer);
        /***/
      },

      /***/
      "./node_modules/webpack/buildin/global.js":
      /*!***********************************!*\
        !*** (webpack)/buildin/global.js ***!
        \***********************************/

      /*! no static exports found */

      /***/
      function node_modulesWebpackBuildinGlobalJs(module, exports) {
        function _typeof(obj) {
          if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
            _typeof = function _typeof(obj) {
              return _typeof2(obj);
            };
          } else {
            _typeof = function _typeof(obj) {
              return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
            };
          }

          return _typeof(obj);
        }

        var g; // This works in non-strict mode

        g = function () {
          return this;
        }();

        try {
          // This works if eval is allowed (see CSP)
          g = g || new Function("return this")();
        } catch (e) {
          // This works if the window reference is available
          if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === "object") g = window;
        } // g can still be undefined, but nothing to do about it...
        // We return undefined, instead of nothing here, so it's
        // easier to handle this case. if(!global) { ...}


        module.exports = g;
        /***/
      }
      /******/

    })
  );
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../snjs/node_modules/webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./lib/application.js":
/*!****************************!*\
  !*** ./lib/application.js ***!
  \****************************/
/*! exports provided: SNApplication */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNApplication", function() { return SNApplication; });
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
/* harmony import */ var _Payloads_generator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads/generator */ "./lib/protocol/payloads/generator.js");
/* harmony import */ var _Lib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Lib */ "./lib/index.js");
/* harmony import */ var _Services__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Services */ "./lib/services/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }







/** How often to automatically sync, in milliseconds */

var DEFAULT_AUTO_SYNC_INTERVAL = 30000;
var SNApplication =
/*#__PURE__*/
function () {
  /**
   * @param environment
      Required - The Environment that identifies your application.
   * @param platform
      Required - The Platform that identifies your application.
   * @param namespace
      Optional - a unique identifier to namespace storage and
      other persistent properties. Defaults to empty string.
   * @param deviceInterface
      A DeviceInterface object.
   * @param swapClasses
      Gives consumers the ability to provide their own custom
      subclass for a service. swapClasses should be an array
      of key/value pairs consisting of keys 'swap' and 'with'.
      'swap' is the base class you wish to replace, and 'with'
      is the custom subclass to use.
   * @param skipClasses
      An optional array of classes to skip making services for.
   * @param crypto
      The platform-dependent instance of SNCrypto to use.
      Web uses SNWebCrypto, mobile uses SNReactNativeCrypto.
   */
  function SNApplication() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        environment = _ref.environment,
        platform = _ref.platform,
        namespace = _ref.namespace,
        host = _ref.host,
        deviceInterface = _ref.deviceInterface,
        swapClasses = _ref.swapClasses,
        skipClasses = _ref.skipClasses,
        crypto = _ref.crypto;

    _classCallCheck(this, SNApplication);

    if (!deviceInterface) {
      throw 'Device Interface must be supplied.';
    }

    if (!environment) {
      throw 'Environment must be supplied when creating an application.';
    }

    if (!platform) {
      throw 'Platform must be supplied when creating an application.';
    }

    this.environment = environment;
    this.platform = platform;
    this.namespace = namespace || '';
    this.host = host;
    this.deviceInterface = deviceInterface;
    this.crypto = crypto;
    this.swapClasses = swapClasses;
    this.skipClasses = skipClasses;
    this.eventHandlers = [];
    this.services = [];
    this.streamObservers = [];
    this.serviceObservers = [];
    this.managedSubscribers = [];
    this.constructServices();
  }
  /**
   * @publilc
   * The first thing consumers should call when starting their app.
   * This function will load all services in their correct order.
   * @param callbacks
   *          async .requiresChallengeResponses(challenges)
   *            @param challenges
   *          .handleChallengeFailures
   *          
   An array of DeviceAuthentication Challenges that require responses.
   */


  _createClass(SNApplication, [{
    key: "prepareForLaunch",
    value: function prepareForLaunch(_ref2) {
      var callbacks;
      return regeneratorRuntime.async(function prepareForLaunch$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              callbacks = _ref2.callbacks;

              if (callbacks.requiresChallengeResponses) {
                _context.next = 3;
                break;
              }

              throw 'Application.launch callbacks are not properly configured.';

            case 3:
              this.launchCallbacks = callbacks;
              _context.next = 6;
              return regeneratorRuntime.awrap(this.deviceInterface.openDatabase());

            case 6:
              _context.next = 8;
              return regeneratorRuntime.awrap(this.migrationService.initialize());

            case 8:
              _context.next = 10;
              return regeneratorRuntime.awrap(this.handleStage(_Lib__WEBPACK_IMPORTED_MODULE_3__["ApplicationStages"].PreparingForLaunch_0));

            case 10:
              _context.next = 12;
              return regeneratorRuntime.awrap(this.storageService.initializeFromDisk());

            case 12:
              _context.next = 14;
              return regeneratorRuntime.awrap(this.keyManager.initialize());

            case 14:
              _context.next = 16;
              return regeneratorRuntime.awrap(this.handleStage(_Lib__WEBPACK_IMPORTED_MODULE_3__["ApplicationStages"].ReadyForLaunch_05));

            case 16:
              this.started = true;
              _context.next = 19;
              return regeneratorRuntime.awrap(this.notifyEvent(_Lib__WEBPACK_IMPORTED_MODULE_3__["ApplicationEvents"].Started));

            case 19:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
    /**
     * @publilc
     * Runs migrations, handles device authentication, unlocks application, and
     * issues a callback if a device activation requires user input
     * (i.e local passcode or fingerprint).
     * @param awaitDatabaseLoad  Option to await database load before marking the app 
     *                           as ready. Used as far as we know for .restart and unit tests.
     */

  }, {
    key: "launch",
    value: function launch() {
      var _this = this;

      var _ref3,
          awaitDatabaseLoad,
          databasePayloads,
          loadPromise,
          _args3 = arguments;

      return regeneratorRuntime.async(function launch$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              _ref3 = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {}, awaitDatabaseLoad = _ref3.awaitDatabaseLoad;
              _context3.next = 3;
              return regeneratorRuntime.awrap(this.handleLaunchAuthentication());

            case 3:
              _context3.next = 5;
              return regeneratorRuntime.awrap(this.storageService.isStorageWrapped());

            case 5:
              if (!_context3.sent) {
                _context3.next = 8;
                break;
              }

              _context3.next = 8;
              return regeneratorRuntime.awrap(this.storageService.decryptStorage());

            case 8:
              _context3.next = 10;
              return regeneratorRuntime.awrap(this.sessionManager.initializeFromDisk());

            case 10:
              this.historyManager.initializeFromDisk();
              this.unlocked = true;
              _context3.next = 14;
              return regeneratorRuntime.awrap(this.notifyEvent(_Lib__WEBPACK_IMPORTED_MODULE_3__["ApplicationEvents"].Launched));

            case 14:
              _context3.next = 16;
              return regeneratorRuntime.awrap(this.handleStage(_Lib__WEBPACK_IMPORTED_MODULE_3__["ApplicationStages"].StorageDecrypted_09));

            case 16:
              _context3.next = 18;
              return regeneratorRuntime.awrap(this.handleStage(_Lib__WEBPACK_IMPORTED_MODULE_3__["ApplicationStages"].Launched_10));

            case 18:
              _context3.next = 20;
              return regeneratorRuntime.awrap(this.syncService.getDatabasePayloads());

            case 20:
              databasePayloads = _context3.sent;
              _context3.next = 23;
              return regeneratorRuntime.awrap(this.handleStage(_Lib__WEBPACK_IMPORTED_MODULE_3__["ApplicationStages"].LoadingDatabase_11));

            case 23:
              /**
              * We don't want to await this, as we want to begin allowing the app to function
              * before local data has been loaded fully. We await only initial
              * `getDatabasePayloads` to lock in on database state.
              */
              loadPromise = this.syncService.loadDatabasePayloads(databasePayloads).then(function _callee() {
                return regeneratorRuntime.async(function _callee$(_context2) {
                  while (1) {
                    switch (_context2.prev = _context2.next) {
                      case 0:
                        if (!_this.dealloced) {
                          _context2.next = 2;
                          break;
                        }

                        throw 'Application has been destroyed.';

                      case 2:
                        _context2.next = 4;
                        return regeneratorRuntime.awrap(_this.handleStage(_Lib__WEBPACK_IMPORTED_MODULE_3__["ApplicationStages"].LoadedDatabase_12));

                      case 4:
                        _this.beginAutoSyncTimer();

                        return _context2.abrupt("return", _this.syncService.sync({
                          mode: _Services__WEBPACK_IMPORTED_MODULE_4__["SyncModes"].DownloadFirst
                        }));

                      case 6:
                      case "end":
                        return _context2.stop();
                    }
                  }
                });
              });

              if (!awaitDatabaseLoad) {
                _context3.next = 27;
                break;
              }

              _context3.next = 27;
              return regeneratorRuntime.awrap(loadPromise);

            case 27:
            case "end":
              return _context3.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "beginAutoSyncTimer",
    value: function beginAutoSyncTimer() {
      var _this2 = this;

      this.autoSyncInterval = this.deviceInterface.interval(function () {
        _this2.syncService.log('Syncing from autosync');

        _this2.sync();
      }, DEFAULT_AUTO_SYNC_INTERVAL);
    }
    /**
     * @private
     * @param previousResponses Applications may require authetnication earlier than launch
     *                          in the case of migrations. We can reuse their valid responses.
     */

  }, {
    key: "handleLaunchAuthentication",
    value: function handleLaunchAuthentication() {
      var pendingChallenges;
      return regeneratorRuntime.async(function handleLaunchAuthentication$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return regeneratorRuntime.awrap(this.deviceAuthService.getLaunchChallenges());

            case 2:
              pendingChallenges = _context4.sent;
              _context4.next = 5;
              return regeneratorRuntime.awrap(this.handleLaunchChallenge(pendingChallenges));

            case 5:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this);
    }
    /** @private */

  }, {
    key: "handleLaunchChallenge",
    value: function handleLaunchChallenge(challenges) {
      var pendingChallenges, response, responses, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _response, valid;

      return regeneratorRuntime.async(function handleLaunchChallenge$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              pendingChallenges = challenges.slice();

            case 1:
              if (!(pendingChallenges.length > 0)) {
                _context5.next = 43;
                break;
              }

              _context5.next = 4;
              return regeneratorRuntime.awrap(this.launchCallbacks.requiresChallengeResponses(pendingChallenges));

            case 4:
              response = _context5.sent;
              responses = Array.isArray(response) ? response : [response];
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context5.prev = 9;
              _iterator = responses[Symbol.iterator]();

            case 11:
              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                _context5.next = 27;
                break;
              }

              _response = _step.value;
              _context5.next = 15;
              return regeneratorRuntime.awrap(this.deviceAuthService.validateChallengeResponse(_response));

            case 15:
              valid = _context5.sent;

              if (!valid) {
                _context5.next = 22;
                break;
              }

              _context5.next = 19;
              return regeneratorRuntime.awrap(this.deviceAuthService.handleChallengeResponse(_response));

            case 19:
              Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["removeFromArray"])(pendingChallenges, _response.challenge);
              _context5.next = 24;
              break;

            case 22:
              _context5.next = 24;
              return regeneratorRuntime.awrap(this.launchCallbacks.handleChallengeFailures([_response]));

            case 24:
              _iteratorNormalCompletion = true;
              _context5.next = 11;
              break;

            case 27:
              _context5.next = 33;
              break;

            case 29:
              _context5.prev = 29;
              _context5.t0 = _context5["catch"](9);
              _didIteratorError = true;
              _iteratorError = _context5.t0;

            case 33:
              _context5.prev = 33;
              _context5.prev = 34;

              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }

            case 36:
              _context5.prev = 36;

              if (!_didIteratorError) {
                _context5.next = 39;
                break;
              }

              throw _iteratorError;

            case 39:
              return _context5.finish(36);

            case 40:
              return _context5.finish(33);

            case 41:
              _context5.next = 1;
              break;

            case 43:
            case "end":
              return _context5.stop();
          }
        }
      }, null, this, [[9, 29, 33, 41], [34,, 36, 40]]);
    }
    /** @private */

  }, {
    key: "getMigrationChallengeResponder",
    value: function getMigrationChallengeResponder() {
      var _this3 = this;

      return function _callee2(challenge) {
        var responses;
        return regeneratorRuntime.async(function _callee2$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return regeneratorRuntime.awrap(_this3.launchCallbacks.requiresChallengeResponses([challenge]));

              case 2:
                responses = _context6.sent;
                return _context6.abrupt("return", responses[0]);

              case 4:
              case "end":
                return _context6.stop();
            }
          }
        });
      };
    }
    /** @private */

  }, {
    key: "handleStage",
    value: function handleStage(stage) {
      var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, service;

      return regeneratorRuntime.async(function handleStage$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              _iteratorNormalCompletion2 = true;
              _didIteratorError2 = false;
              _iteratorError2 = undefined;
              _context7.prev = 3;
              _iterator2 = this.services[Symbol.iterator]();

            case 5:
              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
                _context7.next = 12;
                break;
              }

              service = _step2.value;
              _context7.next = 9;
              return regeneratorRuntime.awrap(service.handleApplicationStage(stage));

            case 9:
              _iteratorNormalCompletion2 = true;
              _context7.next = 5;
              break;

            case 12:
              _context7.next = 18;
              break;

            case 14:
              _context7.prev = 14;
              _context7.t0 = _context7["catch"](3);
              _didIteratorError2 = true;
              _iteratorError2 = _context7.t0;

            case 18:
              _context7.prev = 18;
              _context7.prev = 19;

              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }

            case 21:
              _context7.prev = 21;

              if (!_didIteratorError2) {
                _context7.next = 24;
                break;
              }

              throw _iteratorError2;

            case 24:
              return _context7.finish(21);

            case 25:
              return _context7.finish(18);

            case 26:
            case "end":
              return _context7.stop();
          }
        }
      }, null, this, [[3, 14, 18, 26], [19,, 21, 25]]);
    }
    /** 
     * @public 
     * @param singleEvent  A private param used to destroy observer after it is called once
     *                     for this event.
     */

  }, {
    key: "addEventObserver",
    value: function addEventObserver(callback, singleEvent) {
      var _this4 = this;

      var observer = {
        callback: callback,
        singleEvent: singleEvent
      };
      this.eventHandlers.push(observer);
      return function () {
        Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["removeFromArray"])(_this4.eventHandlers, observer);
      };
    }
  }, {
    key: "addSingleEventObserver",
    value: function addSingleEventObserver(event, callback) {
      return this.addEventObserver(function (firedEvent) {
        if (firedEvent === event) {
          callback();
        }
      }, event);
    }
    /** @private */

  }, {
    key: "notifyEvent",
    value: function notifyEvent(event, data) {
      var _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, observer;

      return regeneratorRuntime.async(function notifyEvent$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              _iteratorNormalCompletion3 = true;
              _didIteratorError3 = false;
              _iteratorError3 = undefined;
              _context8.prev = 3;
              _iterator3 = this.eventHandlers.slice()[Symbol.iterator]();

            case 5:
              if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {
                _context8.next = 18;
                break;
              }

              observer = _step3.value;

              if (!(observer.singleEvent && observer.singleEvent === event)) {
                _context8.next = 12;
                break;
              }

              _context8.next = 10;
              return regeneratorRuntime.awrap(observer.callback(event, data || {}));

            case 10:
              _context8.next = 15;
              break;

            case 12:
              if (observer.singleEvent) {
                _context8.next = 15;
                break;
              }

              _context8.next = 15;
              return regeneratorRuntime.awrap(observer.callback(event, data || {}));

            case 15:
              _iteratorNormalCompletion3 = true;
              _context8.next = 5;
              break;

            case 18:
              _context8.next = 24;
              break;

            case 20:
              _context8.prev = 20;
              _context8.t0 = _context8["catch"](3);
              _didIteratorError3 = true;
              _iteratorError3 = _context8.t0;

            case 24:
              _context8.prev = 24;
              _context8.prev = 25;

              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
                _iterator3.return();
              }

            case 27:
              _context8.prev = 27;

              if (!_didIteratorError3) {
                _context8.next = 30;
                break;
              }

              throw _iteratorError3;

            case 30:
              return _context8.finish(27);

            case 31:
              return _context8.finish(24);

            case 32:
            case "end":
              return _context8.stop();
          }
        }
      }, null, this, [[3, 20, 24, 32], [25,, 27, 31]]);
    }
    /** @public */

  }, {
    key: "isDatabaseLoaded",
    value: function isDatabaseLoaded() {
      return this.syncService.isDatabaseLoaded();
    }
    /** @public */

  }, {
    key: "savePayload",
    value: function savePayload(_ref4) {
      var payload, dirtied;
      return regeneratorRuntime.async(function savePayload$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              payload = _ref4.payload;
              dirtied = Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_2__["CopyPayload"])({
                payload: payload,
                override: {
                  dirty: true
                }
              });
              _context9.next = 4;
              return regeneratorRuntime.awrap(this.modelManager.mapPayloadToLocalItem({
                payload: dirtied
              }));

            case 4:
              _context9.next = 6;
              return regeneratorRuntime.awrap(this.syncService.sync());

            case 6:
            case "end":
              return _context9.stop();
          }
        }
      }, null, this);
    }
    /** 
     * @public 
     * Finds an item by UUID.
     */

  }, {
    key: "findItem",
    value: function findItem(_ref5) {
      var uuid = _ref5.uuid;
      return this.modelManager.findItem(uuid);
    }
    /** 
    * @public 
    * Finds an item by predicate.
    */

  }, {
    key: "findItems",
    value: function findItems(_ref6) {
      var predicate = _ref6.predicate;
      return this.modelManager.itemsMatchingPredicate(predicate);
    }
    /** @public */

  }, {
    key: "mergeItem",
    value: function mergeItem(_ref7) {
      var item, source;
      return regeneratorRuntime.async(function mergeItem$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              item = _ref7.item, source = _ref7.source;
              return _context10.abrupt("return", this.modelManager.mapItem({
                item: item,
                source: source
              }));

            case 2:
            case "end":
              return _context10.stop();
          }
        }
      }, null, this);
    }
    /** 
     * @public 
     * @param add  Whether to add the item to application state.
     * @param needsSync  Whether to mark the item as needing sync. `add` must also be true.
     */

  }, {
    key: "createItem",
    value: function createItem(_ref8) {
      var contentType, content, add, needsSync, item;
      return regeneratorRuntime.async(function createItem$(_context11) {
        while (1) {
          switch (_context11.prev = _context11.next) {
            case 0:
              contentType = _ref8.contentType, content = _ref8.content, add = _ref8.add, needsSync = _ref8.needsSync;
              _context11.next = 3;
              return regeneratorRuntime.awrap(this.modelManager.createItem({
                contentType: contentType,
                content: content,
                add: add,
                needsSync: needsSync
              }));

            case 3:
              item = _context11.sent;
              return _context11.abrupt("return", item);

            case 5:
            case "end":
              return _context11.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "saveItem",
    value: function saveItem(_ref9) {
      var item;
      return regeneratorRuntime.async(function saveItem$(_context12) {
        while (1) {
          switch (_context12.prev = _context12.next) {
            case 0:
              item = _ref9.item;
              _context12.next = 3;
              return regeneratorRuntime.awrap(this.modelManager.setItemDirty(item, true));

            case 3:
              _context12.next = 5;
              return regeneratorRuntime.awrap(this.syncService.sync());

            case 5:
              if (item.content_type === _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].Tag) {
                this.modelManager.reorderTagLocation(item);
              }

            case 6:
            case "end":
              return _context12.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "saveItems",
    value: function saveItems(_ref10) {
      var items;
      return regeneratorRuntime.async(function saveItems$(_context13) {
        while (1) {
          switch (_context13.prev = _context13.next) {
            case 0:
              items = _ref10.items;
              _context13.next = 3;
              return regeneratorRuntime.awrap(this.modelManager.setItemsDirty(items));

            case 3:
              _context13.next = 5;
              return regeneratorRuntime.awrap(this.syncService.sync());

            case 5:
            case "end":
              return _context13.stop();
          }
        }
      }, null, this);
    }
    /** 
     * @public 
     * @param updateUserModifiedDate  
     *  Whether to change the modified date the user sees of the item.
     */

  }, {
    key: "setItemNeedsSync",
    value: function setItemNeedsSync(_ref11) {
      var item, updateUserModifiedDate;
      return regeneratorRuntime.async(function setItemNeedsSync$(_context14) {
        while (1) {
          switch (_context14.prev = _context14.next) {
            case 0:
              item = _ref11.item, updateUserModifiedDate = _ref11.updateUserModifiedDate;
              return _context14.abrupt("return", this.modelManager.setItemDirty(item, true, updateUserModifiedDate));

            case 2:
            case "end":
              return _context14.stop();
          }
        }
      }, null, this);
    }
    /** 
     * @public 
     * @param updateUserModifiedDate  
     *  Whether to change the modified date the user sees of the item.
     */

  }, {
    key: "setItemsNeedsSync",
    value: function setItemsNeedsSync(_ref12) {
      var items;
      return regeneratorRuntime.async(function setItemsNeedsSync$(_context15) {
        while (1) {
          switch (_context15.prev = _context15.next) {
            case 0:
              items = _ref12.items;
              return _context15.abrupt("return", this.modelManager.setItemsDirty(items));

            case 2:
            case "end":
              return _context15.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "deleteItem",
    value: function deleteItem(_ref13) {
      var item;
      return regeneratorRuntime.async(function deleteItem$(_context16) {
        while (1) {
          switch (_context16.prev = _context16.next) {
            case 0:
              item = _ref13.item;
              this.modelManager.setItemToBeDeleted(item);
              this.sync();

            case 3:
            case "end":
              return _context16.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "deleteItemLocally",
    value: function deleteItemLocally(_ref14) {
      var item;
      return regeneratorRuntime.async(function deleteItemLocally$(_context17) {
        while (1) {
          switch (_context17.prev = _context17.next) {
            case 0:
              item = _ref14.item;
              this.modelManager.removeItemLocally(item);

            case 2:
            case "end":
              return _context17.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "emptyTrash",
    value: function emptyTrash() {
      return regeneratorRuntime.async(function emptyTrash$(_context18) {
        while (1) {
          switch (_context18.prev = _context18.next) {
            case 0:
              return _context18.abrupt("return", this.modelManager.emptyTrash());

            case 1:
            case "end":
              return _context18.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "getTrashedItems",
    value: function getTrashedItems() {
      return this.modelManager.trashedItems();
    }
    /** 
     * @public 
     * @param contentType  A string, array of strings, or '*'
     */

  }, {
    key: "getItems",
    value: function getItems(_ref15) {
      var contentType = _ref15.contentType;
      return this.modelManager.getItems(contentType);
    }
    /** @public */

  }, {
    key: "getDisplayableItems",
    value: function getDisplayableItems(_ref16) {
      var contentType = _ref16.contentType;
      return this.modelManager.validItemsForContentType(contentType);
    }
    /** @public */

  }, {
    key: "getNotesMatchingSmartTag",
    value: function getNotesMatchingSmartTag(_ref17) {
      var smartTag = _ref17.smartTag;
      return this.modelManager.notesMatchingSmartTag(smartTag);
    }
    /** @public */

  }, {
    key: "findTag",
    value: function findTag(_ref18) {
      var title = _ref18.title;
      return this.modelManager.findTag({
        title: title
      });
    }
    /** @public */

  }, {
    key: "findOrCreateTag",
    value: function findOrCreateTag(_ref19) {
      var title;
      return regeneratorRuntime.async(function findOrCreateTag$(_context19) {
        while (1) {
          switch (_context19.prev = _context19.next) {
            case 0:
              title = _ref19.title;
              return _context19.abrupt("return", this.modelManager.findOrCreateTag({
                title: title
              }));

            case 2:
            case "end":
              return _context19.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "getSmartTags",
    value: function getSmartTags() {
      return this.modelManager.getSmartTags();
    }
    /** @public */

  }, {
    key: "getNoteCount",
    value: function getNoteCount() {
      return this.modelManager.noteCount();
    }
    /** 
     * @public 
     * Begin streaming items to display in the UI.
     * @param contentType  Can be string, '*', or array of types.
     */

  }, {
    key: "streamItems",
    value: function streamItems(_ref20) {
      var _this5 = this;

      var contentType = _ref20.contentType,
          stream = _ref20.stream;
      var observer = this.modelManager.addMappingObserver(contentType, function (allItems, validItems, deletedItems, source, sourceKey) {
        var includedContentTypes = allItems.map(function (item) {
          return item.content_type;
        });
        stream({
          items: allItems,
          contentTypes: includedContentTypes,
          source: source,
          sourceKey: sourceKey
        });
      });
      this.streamObservers.push(observer);
      return function () {
        Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["removeFromArray"])(_this5.streamObservers, observer);
      };
    }
    /** @public */

  }, {
    key: "setHost",
    value: function setHost(host) {
      return regeneratorRuntime.async(function setHost$(_context20) {
        while (1) {
          switch (_context20.prev = _context20.next) {
            case 0:
              return _context20.abrupt("return", this.apiService.setHost(host));

            case 1:
            case "end":
              return _context20.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "getHost",
    value: function getHost() {
      return regeneratorRuntime.async(function getHost$(_context21) {
        while (1) {
          switch (_context21.prev = _context21.next) {
            case 0:
              return _context21.abrupt("return", this.apiService.getHost());

            case 1:
            case "end":
              return _context21.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "getUser",
    value: function getUser() {
      if (!this.unlocked) {
        throw 'Attempting to access user before application unlocked';
      }

      return this.sessionManager.getUser();
    }
    /** @public */

  }, {
    key: "getUserVersion",
    value: function getUserVersion() {
      return regeneratorRuntime.async(function getUserVersion$(_context22) {
        while (1) {
          switch (_context22.prev = _context22.next) {
            case 0:
              return _context22.abrupt("return", this.protocolService.getUserVersion());

            case 1:
            case "end":
              return _context22.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "noAccount",
    value: function noAccount() {
      var user = this.getUser();
      return Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(user);
    }
    /** 
     * @public 
     * @return  A dictionary with `affectedItems` as the items that were either created 
     *          or dirtied by this import and `errorCount`, which is the number of items
     *          that were not imported due to failure to decrypt.
     */

  }, {
    key: "importData",
    value: function importData(_ref21) {
      var data, password, awaitSync, decryptedPayloads, validPayloads, affectedItems, promise;
      return regeneratorRuntime.async(function importData$(_context23) {
        while (1) {
          switch (_context23.prev = _context23.next) {
            case 0:
              data = _ref21.data, password = _ref21.password, awaitSync = _ref21.awaitSync;
              _context23.next = 3;
              return regeneratorRuntime.awrap(this.protocolService.payloadsByDecryptingBackupFile({
                data: data,
                password: password
              }));

            case 3:
              decryptedPayloads = _context23.sent;
              validPayloads = decryptedPayloads.filter(function (payload) {
                return !payload.errorDecrypting;
              });
              _context23.next = 7;
              return regeneratorRuntime.awrap(this.modelManager.importPayloads(validPayloads));

            case 7:
              affectedItems = _context23.sent;
              promise = this.sync();

              if (!awaitSync) {
                _context23.next = 12;
                break;
              }

              _context23.next = 12;
              return regeneratorRuntime.awrap(promise);

            case 12:
              return _context23.abrupt("return", {
                affectedItems: affectedItems,
                errorCount: decryptedPayloads.length - validPayloads.length
              });

            case 13:
            case "end":
              return _context23.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "isEphemeralSession",
    value: function isEphemeralSession() {
      return this.storageService.isEphemeralSession();
    }
    /** @private */

  }, {
    key: "lockSyncing",
    value: function lockSyncing() {
      this.syncService.lockSyncing();
    }
    /** @private */

  }, {
    key: "unlockSyncing",
    value: function unlockSyncing() {
      this.syncService.unlockSyncing();
    }
    /** @public */

  }, {
    key: "getSyncStatus",
    value: function getSyncStatus() {
      return regeneratorRuntime.async(function getSyncStatus$(_context24) {
        while (1) {
          switch (_context24.prev = _context24.next) {
            case 0:
              return _context24.abrupt("return", this.syncService.status);

            case 1:
            case "end":
              return _context24.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "sync",
    value: function sync(options) {
      return regeneratorRuntime.async(function sync$(_context25) {
        while (1) {
          switch (_context25.prev = _context25.next) {
            case 0:
              return _context25.abrupt("return", this.syncService.sync(options));

            case 1:
            case "end":
              return _context25.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "resolveOutOfSync",
    value: function resolveOutOfSync() {
      return regeneratorRuntime.async(function resolveOutOfSync$(_context26) {
        while (1) {
          switch (_context26.prev = _context26.next) {
            case 0:
              return _context26.abrupt("return", this.syncService.resolveOutOfSync());

            case 1:
            case "end":
              return _context26.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "setValue",
    value: function setValue(key, value, mode) {
      return regeneratorRuntime.async(function setValue$(_context27) {
        while (1) {
          switch (_context27.prev = _context27.next) {
            case 0:
              return _context27.abrupt("return", this.storageService.setValue(key, value, mode));

            case 1:
            case "end":
              return _context27.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "getValue",
    value: function getValue(key, mode) {
      return regeneratorRuntime.async(function getValue$(_context28) {
        while (1) {
          switch (_context28.prev = _context28.next) {
            case 0:
              return _context28.abrupt("return", this.storageService.getValue(key, mode));

            case 1:
            case "end":
              return _context28.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "removeValue",
    value: function removeValue(key, mode) {
      return regeneratorRuntime.async(function removeValue$(_context29) {
        while (1) {
          switch (_context29.prev = _context29.next) {
            case 0:
              return _context29.abrupt("return", this.storageService.removeValue(key, mode));

            case 1:
            case "end":
              return _context29.stop();
          }
        }
      }, null, this);
    }
    /** 
     * @public 
     * Deletes all payloads from storage.
     */

  }, {
    key: "clearDatabase",
    value: function clearDatabase() {
      return regeneratorRuntime.async(function clearDatabase$(_context30) {
        while (1) {
          switch (_context30.prev = _context30.next) {
            case 0:
              return _context30.abrupt("return", this.storageService.clearAllPayloads());

            case 1:
            case "end":
              return _context30.stop();
          }
        }
      }, null, this);
    }
    /** 
     * @private 
     * Allows items keys to be rewritten to local db on local credential status change,
     * such as if passcode is added, changed, or removed.
     * This allows IndexedDB unencrypted logs to be deleted
     * `deletePayloads` will remove data from backing store,
     * but not from working memory See:
     * https://github.com/standardnotes/desktop/issues/131
     */

  }, {
    key: "rewriteItemsKeys",
    value: function rewriteItemsKeys() {
      var itemsKeys, payloads;
      return regeneratorRuntime.async(function rewriteItemsKeys$(_context31) {
        while (1) {
          switch (_context31.prev = _context31.next) {
            case 0:
              itemsKeys = this.itemsKeyManager.allItemsKeys;
              payloads = itemsKeys.map(function (key) {
                return key.payloadRepresentation();
              });
              _context31.next = 4;
              return regeneratorRuntime.awrap(this.storageService.deletePayloads(payloads));

            case 4:
              _context31.next = 6;
              return regeneratorRuntime.awrap(this.syncService.persistPayloads({
                decryptedPayloads: payloads
              }));

            case 6:
            case "end":
              return _context31.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "restart",
    value: function restart() {
      return regeneratorRuntime.async(function restart$(_context32) {
        while (1) {
          switch (_context32.prev = _context32.next) {
            case 0:
              _context32.next = 2;
              return regeneratorRuntime.awrap(this.deinit());

            case 2:
              this.dealloced = false;
              this.constructServices();
              _context32.next = 6;
              return regeneratorRuntime.awrap(this.prepareForLaunch({
                callbacks: this.launchCallbacks
              }));

            case 6:
              _context32.next = 8;
              return regeneratorRuntime.awrap(this.launch({
                awaitDatabaseLoad: true
              }));

            case 8:
            case "end":
              return _context32.stop();
          }
        }
      }, null, this);
    }
    /**
     * @public
     * Destroys the application instance.
     */

  }, {
    key: "deinit",
    value: function deinit() {
      var _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, uninstallObserver, _iteratorNormalCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, uninstallSubscriber, _iteratorNormalCompletion6, _didIteratorError6, _iteratorError6, _iterator6, _step6, service;

      return regeneratorRuntime.async(function deinit$(_context33) {
        while (1) {
          switch (_context33.prev = _context33.next) {
            case 0:
              clearInterval(this.autoSyncInterval);
              _iteratorNormalCompletion4 = true;
              _didIteratorError4 = false;
              _iteratorError4 = undefined;
              _context33.prev = 4;

              for (_iterator4 = this.serviceObservers[Symbol.iterator](); !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
                uninstallObserver = _step4.value;
                uninstallObserver();
              }

              _context33.next = 12;
              break;

            case 8:
              _context33.prev = 8;
              _context33.t0 = _context33["catch"](4);
              _didIteratorError4 = true;
              _iteratorError4 = _context33.t0;

            case 12:
              _context33.prev = 12;
              _context33.prev = 13;

              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {
                _iterator4.return();
              }

            case 15:
              _context33.prev = 15;

              if (!_didIteratorError4) {
                _context33.next = 18;
                break;
              }

              throw _iteratorError4;

            case 18:
              return _context33.finish(15);

            case 19:
              return _context33.finish(12);

            case 20:
              _iteratorNormalCompletion5 = true;
              _didIteratorError5 = false;
              _iteratorError5 = undefined;
              _context33.prev = 23;

              for (_iterator5 = this.managedSubscribers[Symbol.iterator](); !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
                uninstallSubscriber = _step5.value;
                uninstallSubscriber();
              }

              _context33.next = 31;
              break;

            case 27:
              _context33.prev = 27;
              _context33.t1 = _context33["catch"](23);
              _didIteratorError5 = true;
              _iteratorError5 = _context33.t1;

            case 31:
              _context33.prev = 31;
              _context33.prev = 32;

              if (!_iteratorNormalCompletion5 && _iterator5.return != null) {
                _iterator5.return();
              }

            case 34:
              _context33.prev = 34;

              if (!_didIteratorError5) {
                _context33.next = 37;
                break;
              }

              throw _iteratorError5;

            case 37:
              return _context33.finish(34);

            case 38:
              return _context33.finish(31);

            case 39:
              _iteratorNormalCompletion6 = true;
              _didIteratorError6 = false;
              _iteratorError6 = undefined;
              _context33.prev = 42;
              _iterator6 = this.services[Symbol.iterator]();

            case 44:
              if (_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done) {
                _context33.next = 52;
                break;
              }

              service = _step6.value;

              if (!service.deinit) {
                _context33.next = 49;
                break;
              }

              _context33.next = 49;
              return regeneratorRuntime.awrap(service.deinit());

            case 49:
              _iteratorNormalCompletion6 = true;
              _context33.next = 44;
              break;

            case 52:
              _context33.next = 58;
              break;

            case 54:
              _context33.prev = 54;
              _context33.t2 = _context33["catch"](42);
              _didIteratorError6 = true;
              _iteratorError6 = _context33.t2;

            case 58:
              _context33.prev = 58;
              _context33.prev = 59;

              if (!_iteratorNormalCompletion6 && _iterator6.return != null) {
                _iterator6.return();
              }

            case 61:
              _context33.prev = 61;

              if (!_didIteratorError6) {
                _context33.next = 64;
                break;
              }

              throw _iteratorError6;

            case 64:
              return _context33.finish(61);

            case 65:
              return _context33.finish(58);

            case 66:
              this.streamObservers = [];
              this.clearServices();
              this.dealloced = true;
              this.started = false;

            case 70:
            case "end":
              return _context33.stop();
          }
        }
      }, null, this, [[4, 8, 12, 20], [13,, 15, 19], [23, 27, 31, 39], [32,, 34, 38], [42, 54, 58, 66], [59,, 61, 65]]);
    }
    /**
     * @public
     * Allows your PureService subclass to receive `deinit` event to unload observers.
     */

  }, {
    key: "registerService",
    value: function registerService(service) {
      this.services.push(service);
    }
    /**
     *  @public
     *  @param mergeLocal  Whether to merge existing offline data into account. If false,
     *                     any pre-existing data will be fully deleted upon success.
     */

  }, {
    key: "register",
    value: function register(_ref22) {
      var email, password, ephemeral, mergeLocal, result;
      return regeneratorRuntime.async(function register$(_context34) {
        while (1) {
          switch (_context34.prev = _context34.next) {
            case 0:
              email = _ref22.email, password = _ref22.password, ephemeral = _ref22.ephemeral, mergeLocal = _ref22.mergeLocal;
              this.lockSyncing();
              _context34.next = 4;
              return regeneratorRuntime.awrap(this.sessionManager.register({
                email: email,
                password: password
              }));

            case 4:
              result = _context34.sent;
              this.unlockSyncing();

              if (result.response.error) {
                _context34.next = 25;
                break;
              }

              _context34.next = 9;
              return regeneratorRuntime.awrap(this.keyManager.setNewRootKey({
                key: result.rootKey,
                keyParams: result.keyParams
              }));

            case 9:
              this.syncService.resetSyncState();
              _context34.next = 12;
              return regeneratorRuntime.awrap(this.storageService.setPersistencePolicy(ephemeral ? _Services__WEBPACK_IMPORTED_MODULE_4__["StoragePersistencePolicies"].Ephemeral : _Services__WEBPACK_IMPORTED_MODULE_4__["StoragePersistencePolicies"].Default));

            case 12:
              if (!mergeLocal) {
                _context34.next = 17;
                break;
              }

              _context34.next = 15;
              return regeneratorRuntime.awrap(this.syncService.markAllItemsAsNeedingSync({
                alternateUuids: true
              }));

            case 15:
              _context34.next = 20;
              break;

            case 17:
              this.modelManager.removeAllItemsFromMemory();
              _context34.next = 20;
              return regeneratorRuntime.awrap(this.clearDatabase());

            case 20:
              _context34.next = 22;
              return regeneratorRuntime.awrap(this.notifyEvent(_Lib__WEBPACK_IMPORTED_MODULE_3__["ApplicationEvents"].SignedIn));

            case 22:
              _context34.next = 24;
              return regeneratorRuntime.awrap(this.syncService.sync({
                mode: _Services__WEBPACK_IMPORTED_MODULE_4__["SyncModes"].DownloadFirst
              }));

            case 24:
              this.protocolService.decryptErroredItems();

            case 25:
              return _context34.abrupt("return", result.response);

            case 26:
            case "end":
              return _context34.stop();
          }
        }
      }, null, this);
    }
    /**
     *  @public 
     *  @param mergeLocal  Whether to merge existing offline data into account. If false, 
     *                     any pre-existing data will be fully deleted upon success.
     */

  }, {
    key: "signIn",
    value: function signIn(_ref23) {
      var email, password, strict, ephemeral, mfaKeyPath, mfaCode, _ref23$mergeLocal, mergeLocal, result;

      return regeneratorRuntime.async(function signIn$(_context35) {
        while (1) {
          switch (_context35.prev = _context35.next) {
            case 0:
              email = _ref23.email, password = _ref23.password, strict = _ref23.strict, ephemeral = _ref23.ephemeral, mfaKeyPath = _ref23.mfaKeyPath, mfaCode = _ref23.mfaCode, _ref23$mergeLocal = _ref23.mergeLocal, mergeLocal = _ref23$mergeLocal === void 0 ? true : _ref23$mergeLocal;

              /** Prevent a timed sync from occuring while signing in. */
              this.lockSyncing();
              _context35.next = 4;
              return regeneratorRuntime.awrap(this.sessionManager.signIn({
                email: email,
                password: password,
                strict: strict,
                mfaKeyPath: mfaKeyPath,
                mfaCode: mfaCode
              }));

            case 4:
              result = _context35.sent;
              this.unlockSyncing();

              if (result.response.error) {
                _context35.next = 25;
                break;
              }

              _context35.next = 9;
              return regeneratorRuntime.awrap(this.keyManager.setNewRootKey({
                key: result.rootKey,
                keyParams: result.keyParams
              }));

            case 9:
              this.syncService.resetSyncState();
              _context35.next = 12;
              return regeneratorRuntime.awrap(this.storageService.setPersistencePolicy(ephemeral ? _Services__WEBPACK_IMPORTED_MODULE_4__["StoragePersistencePolicies"].Ephemeral : _Services__WEBPACK_IMPORTED_MODULE_4__["StoragePersistencePolicies"].Default));

            case 12:
              if (!mergeLocal) {
                _context35.next = 17;
                break;
              }

              _context35.next = 15;
              return regeneratorRuntime.awrap(this.syncService.markAllItemsAsNeedingSync({
                alternateUuids: true
              }));

            case 15:
              _context35.next = 20;
              break;

            case 17:
              this.modelManager.removeAllItemsFromMemory();
              _context35.next = 20;
              return regeneratorRuntime.awrap(this.clearDatabase());

            case 20:
              _context35.next = 22;
              return regeneratorRuntime.awrap(this.notifyEvent(_Lib__WEBPACK_IMPORTED_MODULE_3__["ApplicationEvents"].SignedIn));

            case 22:
              _context35.next = 24;
              return regeneratorRuntime.awrap(this.syncService.sync({
                mode: _Services__WEBPACK_IMPORTED_MODULE_4__["SyncModes"].DownloadFirst,
                checkIntegrity: true
              }));

            case 24:
              this.protocolService.decryptErroredItems();

            case 25:
              return _context35.abrupt("return", result.response);

            case 26:
            case "end":
              return _context35.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "changePassword",
    value: function changePassword(_ref24) {
      var email, currentPassword, newPassword, rotateItemsKey, currentKeyParams, result, newKeyParams, versionUpgraded;
      return regeneratorRuntime.async(function changePassword$(_context36) {
        while (1) {
          switch (_context36.prev = _context36.next) {
            case 0:
              email = _ref24.email, currentPassword = _ref24.currentPassword, newPassword = _ref24.newPassword, rotateItemsKey = _ref24.rotateItemsKey;
              _context36.next = 3;
              return regeneratorRuntime.awrap(this.keyManager.getRootKeyParams());

            case 3:
              currentKeyParams = _context36.sent;
              this.lockSyncing();
              _context36.next = 7;
              return regeneratorRuntime.awrap(this.sessionManager.changePassword({
                email: email,
                currentPassword: currentPassword,
                currentKeyParams: currentKeyParams,
                newPassword: newPassword
              }));

            case 7:
              result = _context36.sent;
              this.unlockSyncing();

              if (result.response.error) {
                _context36.next = 19;
                break;
              }

              _context36.next = 12;
              return regeneratorRuntime.awrap(this.keyManager.setNewRootKey({
                key: result.rootKey,
                keyParams: result.keyParams
              }));

            case 12:
              newKeyParams = result.keyParams;
              versionUpgraded = newKeyParams.version !== currentKeyParams.version;

              if (!(rotateItemsKey || versionUpgraded)) {
                _context36.next = 17;
                break;
              }

              _context36.next = 17;
              return regeneratorRuntime.awrap(this.itemsKeyManager.createNewDefaultItemsKey());

            case 17:
              _context36.next = 19;
              return regeneratorRuntime.awrap(this.syncService.sync());

            case 19:
              return _context36.abrupt("return", result.response);

            case 20:
            case "end":
              return _context36.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "signOut",
    value: function signOut() {
      return regeneratorRuntime.async(function signOut$(_context37) {
        while (1) {
          switch (_context37.prev = _context37.next) {
            case 0:
              _context37.next = 2;
              return regeneratorRuntime.awrap(this.sessionManager.signOut());

            case 2:
              _context37.next = 4;
              return regeneratorRuntime.awrap(this.keyManager.clearLocalKeyState());

            case 4:
              _context37.next = 6;
              return regeneratorRuntime.awrap(this.storageService.clearAllData());

            case 6:
              _context37.next = 8;
              return regeneratorRuntime.awrap(this.notifyEvent(_Lib__WEBPACK_IMPORTED_MODULE_3__["ApplicationEvents"].SignedOut));

            case 8:
              _context37.next = 10;
              return regeneratorRuntime.awrap(this.restart());

            case 10:
            case "end":
              return _context37.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "validateAccountPassword",
    value: function validateAccountPassword(_ref25) {
      var password;
      return regeneratorRuntime.async(function validateAccountPassword$(_context38) {
        while (1) {
          switch (_context38.prev = _context38.next) {
            case 0:
              password = _ref25.password;
              return _context38.abrupt("return", this.keyManager.validateAccountPassword(password));

            case 2:
            case "end":
              return _context38.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "isStarted",
    value: function isStarted() {
      return this.started;
    }
    /** @public */

  }, {
    key: "hasPasscode",
    value: function hasPasscode() {
      return this.keyManager.hasPasscode();
    }
    /** @public */

  }, {
    key: "isLocked",
    value: function isLocked() {
      return regeneratorRuntime.async(function isLocked$(_context39) {
        while (1) {
          switch (_context39.prev = _context39.next) {
            case 0:
              if (this.started) {
                _context39.next = 2;
                break;
              }

              return _context39.abrupt("return", true);

            case 2:
              return _context39.abrupt("return", this.deviceAuthService.isPasscodeLocked());

            case 3:
            case "end":
              return _context39.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "lock",
    value: function lock() {
      return regeneratorRuntime.async(function lock$(_context40) {
        while (1) {
          switch (_context40.prev = _context40.next) {
            case 0:
              return _context40.abrupt("return", this.restart());

            case 1:
            case "end":
              return _context40.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "setPasscode",
    value: function setPasscode(passcode) {
      var identifier, _ref26, key, keyParams;

      return regeneratorRuntime.async(function setPasscode$(_context41) {
        while (1) {
          switch (_context41.prev = _context41.next) {
            case 0:
              _context41.next = 2;
              return regeneratorRuntime.awrap(this.protocolService.crypto.generateUUID());

            case 2:
              identifier = _context41.sent;
              _context41.next = 5;
              return regeneratorRuntime.awrap(this.protocolService.createRootKey({
                identifier: identifier,
                password: passcode
              }));

            case 5:
              _ref26 = _context41.sent;
              key = _ref26.key;
              keyParams = _ref26.keyParams;
              _context41.next = 10;
              return regeneratorRuntime.awrap(this.keyManager.setNewRootKeyWrapper({
                wrappingKey: key,
                keyParams: keyParams
              }));

            case 10:
              _context41.next = 12;
              return regeneratorRuntime.awrap(this.rewriteItemsKeys());

            case 12:
              _context41.next = 14;
              return regeneratorRuntime.awrap(this.syncService.sync());

            case 14:
            case "end":
              return _context41.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "removePasscode",
    value: function removePasscode() {
      return regeneratorRuntime.async(function removePasscode$(_context42) {
        while (1) {
          switch (_context42.prev = _context42.next) {
            case 0:
              _context42.next = 2;
              return regeneratorRuntime.awrap(this.keyManager.removeRootKeyWrapper());

            case 2:
              _context42.next = 4;
              return regeneratorRuntime.awrap(this.rewriteItemsKeys());

            case 4:
            case "end":
              return _context42.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "changePasscode",
    value: function changePasscode(passcode) {
      return regeneratorRuntime.async(function changePasscode$(_context43) {
        while (1) {
          switch (_context43.prev = _context43.next) {
            case 0:
              _context43.next = 2;
              return regeneratorRuntime.awrap(this.removePasscode());

            case 2:
              return _context43.abrupt("return", this.setPasscode(passcode));

            case 3:
            case "end":
              return _context43.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "setStorageEncryptionPolicy",
    value: function setStorageEncryptionPolicy(encryptionPolicy) {
      return regeneratorRuntime.async(function setStorageEncryptionPolicy$(_context44) {
        while (1) {
          switch (_context44.prev = _context44.next) {
            case 0:
              _context44.next = 2;
              return regeneratorRuntime.awrap(this.storageService.setEncryptionPolicy(encryptionPolicy));

            case 2:
              return _context44.abrupt("return", this.syncService.repersistAllItems());

            case 3:
            case "end":
              return _context44.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "generateUuid",
    value: function generateUuid() {
      return regeneratorRuntime.async(function generateUuid$(_context45) {
        while (1) {
          switch (_context45.prev = _context45.next) {
            case 0:
              return _context45.abrupt("return", this.protocolService.crypto.generateUUID());

            case 1:
            case "end":
              return _context45.stop();
          }
        }
      }, null, this);
    }
    /**
     * @public
     * Dynamically change the device interface, i.e when Desktop wants to override
     * default web interface.
     */

  }, {
    key: "changeDeviceInterface",
    value: function changeDeviceInterface(deviceInterface) {
      return regeneratorRuntime.async(function changeDeviceInterface$(_context46) {
        while (1) {
          switch (_context46.prev = _context46.next) {
            case 0:
              this.deviceInterface = deviceInterface;
              this.keyManager.setDeviceInterface(this.deviceInterface);

            case 2:
            case "end":
              return _context46.stop();
          }
        }
      }, null, this);
    }
    /**
     * @private
     */

    /** @private */

  }, {
    key: "constructServices",
    value: function constructServices() {
      this.createModelManager();
      this.createProtocolService(this.modelManager);
      this.createMigrationService();
      this.createAlertManager();
      this.createHttpManager();
      this.createStorageManager();
      this.createApiService();
      this.createSessionManager();
      this.createSyncManager();
      this.createItemsKeyManager();
      this.createKeyManager();
      this.protocolService.setKeyManager(this.keyManager);
      this.protocolService.setItemsKeyManager(this.itemsKeyManager);
      this.itemsKeyManager.setKeyManager(this.keyManager);
      this.keyManager.setDeviceInterface(this.deviceInterface);
      this.createDeviceAuthService();
      this.createSingletonManager();
      this.createComponentManager();
      this.createPrivilegesManager();
      this.createHistoryManager();
      this.createActionsManager();
    }
    /** @private */

  }, {
    key: "clearServices",
    value: function clearServices() {
      this.migrationService = null;
      this.alertService = null;
      this.httpService = null;
      this.modelManager = null;
      this.protocolService = null;
      this.storageService = null;
      this.apiService = null;
      this.sessionManager = null;
      this.syncService = null;
      this.keyManager = null;
      this.itemsKeyManager = null;
      this.deviceAuthService = null;
      this.singletonManager = null;
      this.componentManager = null;
      this.privilegesService = null;
      this.actionsManager = null;
      this.services = [];
    }
  }, {
    key: "createMigrationService",
    value: function createMigrationService() {
      this.migrationService = new (this.getClass(_Services__WEBPACK_IMPORTED_MODULE_4__["SNMigrationService"]))({
        application: this,
        challengeResponder: this.getMigrationChallengeResponder()
      });
      this.services.push(this.migrationService);
    }
  }, {
    key: "createAlertManager",
    value: function createAlertManager() {
      if (this.shouldSkipClass(_Services__WEBPACK_IMPORTED_MODULE_4__["SNAlertService"])) {
        return;
      }

      this.alertService = new (this.getClass(_Services__WEBPACK_IMPORTED_MODULE_4__["SNAlertService"]))({
        deviceInterface: this.deviceInterface
      });
      this.services.push(this.alertService);
    }
  }, {
    key: "createApiService",
    value: function createApiService() {
      this.apiService = new (this.getClass(_Services__WEBPACK_IMPORTED_MODULE_4__["SNApiService"]))({
        storageService: this.storageService,
        httpService: this.httpService,
        host: this.host
      });
      this.services.push(this.apiService);
    }
  }, {
    key: "createComponentManager",
    value: function createComponentManager() {
      if (this.shouldSkipClass(_Services__WEBPACK_IMPORTED_MODULE_4__["SNComponentManager"])) {
        return;
      }

      this.componentManager = new (this.getClass(_Services__WEBPACK_IMPORTED_MODULE_4__["SNComponentManager"]))({
        modelManager: this.modelManager,
        syncService: this.syncService,
        alertService: this.alertService,
        timeout: this.deviceInterface.timeout,
        environment: this.environment,
        platform: this.platform
      });
      this.services.push(this.componentManager);
    }
  }, {
    key: "createHttpManager",
    value: function createHttpManager() {
      this.httpService = new (this.getClass(_Services__WEBPACK_IMPORTED_MODULE_4__["SNHttpService"]))();
      this.services.push(this.httpService);
    }
  }, {
    key: "createKeyManager",
    value: function createKeyManager() {
      var _this6 = this;

      this.keyManager = new (this.getClass(_Services__WEBPACK_IMPORTED_MODULE_4__["SNKeyManager"]))({
        modelManager: this.modelManager,
        storageService: this.storageService,
        protocolService: this.protocolService,
        itemsKeyManager: this.itemsKeyManager
      });
      this.keyManager.onStatusChange(function _callee3() {
        return regeneratorRuntime.async(function _callee3$(_context47) {
          while (1) {
            switch (_context47.prev = _context47.next) {
              case 0:
                _context47.next = 2;
                return regeneratorRuntime.awrap(_this6.notifyEvent(_Lib__WEBPACK_IMPORTED_MODULE_3__["ApplicationEvents"].KeyStatusChanged));

              case 2:
              case "end":
                return _context47.stop();
            }
          }
        });
      });
      this.services.push(this.keyManager);
    }
  }, {
    key: "createItemsKeyManager",
    value: function createItemsKeyManager() {
      this.itemsKeyManager = new (this.getClass(_Services__WEBPACK_IMPORTED_MODULE_4__["ItemsKeyManager"]))({
        modelManager: this.modelManager,
        syncService: this.syncService,
        protocolService: this.protocolService
      });
      this.services.push(this.itemsKeyManager);
    }
  }, {
    key: "createModelManager",
    value: function createModelManager() {
      this.modelManager = new (this.getClass(_Services__WEBPACK_IMPORTED_MODULE_4__["SNModelManager"]))({
        timeout: this.deviceInterface.timeout
      });
      this.services.push(this.modelManager);
    }
  }, {
    key: "createSingletonManager",
    value: function createSingletonManager() {
      this.singletonManager = new (this.getClass(_Services__WEBPACK_IMPORTED_MODULE_4__["SNSingletonManager"]))({
        modelManager: this.modelManager,
        syncService: this.syncService
      });
      this.services.push(this.singletonManager);
    }
  }, {
    key: "createStorageManager",
    value: function createStorageManager() {
      this.storageService = new (this.getClass(_Services__WEBPACK_IMPORTED_MODULE_4__["SNStorageService"]))({
        protocolService: this.protocolService,
        namespace: this.namespace,
        deviceInterface: this.deviceInterface
      });
      this.services.push(this.storageService);
    }
  }, {
    key: "createProtocolService",
    value: function createProtocolService(modelManager) {
      this.protocolService = new (this.getClass(_Services__WEBPACK_IMPORTED_MODULE_4__["SNProtocolService"]))({
        modelManager: modelManager,
        crypto: this.crypto
      });
      this.services.push(this.protocolService);
    }
  }, {
    key: "createSessionManager",
    value: function createSessionManager() {
      this.sessionManager = new (this.getClass(_Services__WEBPACK_IMPORTED_MODULE_4__["SNSessionManager"]))({
        storageService: this.storageService,
        alertService: this.alertService,
        protocolService: this.protocolService,
        apiService: this.apiService,
        timeout: this.deviceInterface.timeout
      });
      this.services.push(this.sessionManager);
    }
  }, {
    key: "createSyncManager",
    value: function createSyncManager() {
      var _this7 = this;

      this.syncService = new (this.getClass(_Services__WEBPACK_IMPORTED_MODULE_4__["SNSyncManager"]))({
        modelManager: this.modelManager,
        storageService: this.storageService,
        sessionManager: this.sessionManager,
        protocolService: this.protocolService,
        apiService: this.apiService,
        interval: this.deviceInterface.interval
      });
      var uninstall = this.syncService.addEventObserver(function _callee4(eventName) {
        var appEvent;
        return regeneratorRuntime.async(function _callee4$(_context48) {
          while (1) {
            switch (_context48.prev = _context48.next) {
              case 0:
                appEvent = Object(_Lib__WEBPACK_IMPORTED_MODULE_3__["applicationEventForSyncEvent"])(eventName);

                if (!appEvent) {
                  _context48.next = 4;
                  break;
                }

                _context48.next = 4;
                return regeneratorRuntime.awrap(_this7.notifyEvent(appEvent));

              case 4:
              case "end":
                return _context48.stop();
            }
          }
        });
      });
      this.serviceObservers.push(uninstall);
      this.services.push(this.syncService);
    }
  }, {
    key: "createDeviceAuthService",
    value: function createDeviceAuthService() {
      this.deviceAuthService = new (this.getClass(_Services__WEBPACK_IMPORTED_MODULE_4__["DeviceAuthService"]))({
        storageService: this.storageService,
        protocolService: this.protocolService,
        keyManager: this.keyManager
      });
      this.services.push(this.deviceAuthService);
    }
  }, {
    key: "createPrivilegesManager",
    value: function createPrivilegesManager() {
      this.privilegesService = new (this.getClass(_Services__WEBPACK_IMPORTED_MODULE_4__["SNPrivilegesService"]))({
        storageService: this.storageService,
        keyManager: this.keyManager,
        modelManager: this.modelManager,
        syncService: this.syncService,
        sessionManager: this.sessionManager,
        singletonManager: this.singletonManager
      });
      this.services.push(this.privilegesService);
    }
  }, {
    key: "createHistoryManager",
    value: function createHistoryManager() {
      this.historyManager = new (this.getClass(_Services__WEBPACK_IMPORTED_MODULE_4__["SNHistoryManager"]))({
        storageService: this.storageService,
        modelManager: this.modelManager,
        contentTypes: [_Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].Note],
        timeout: this.deviceInterface.timeout
      });
      this.services.push(this.historyManager);
    }
  }, {
    key: "createActionsManager",
    value: function createActionsManager() {
      this.actionsManager = new (this.getClass(_Services__WEBPACK_IMPORTED_MODULE_4__["SNActionsService"]))({
        alertService: this.alertService,
        deviceInterface: this.deviceInterface,
        httpService: this.httpService,
        modelManager: this.modelManager,
        protocolService: this.protocolService,
        syncService: this.syncService
      });
      this.services.push(this.actionsManager);
    }
  }, {
    key: "shouldSkipClass",
    value: function shouldSkipClass(classCandidate) {
      return this.skipClasses && this.skipClasses.includes(classCandidate);
    }
  }, {
    key: "getClass",
    value: function getClass(base) {
      var swapClass = this.swapClasses && this.swapClasses.find(function (candidate) {
        return candidate.swap === base;
      });

      if (swapClass) {
        return swapClass.with;
      } else {
        return base;
      }
    }
  }]);

  return SNApplication;
}();

/***/ }),

/***/ "./lib/challenges.js":
/*!***************************!*\
  !*** ./lib/challenges.js ***!
  \***************************/
/*! exports provided: Challenges */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Challenges", function() { return Challenges; });
var Challenges = {
  LocalPasscode: 1,
  AccountPassword: 2,
  Biometric: 3
};

/***/ }),

/***/ "./lib/device_interface.js":
/*!*********************************!*\
  !*** ./lib/device_interface.js ***!
  \*********************************/
/*! exports provided: DeviceInterface */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeviceInterface", function() { return DeviceInterface; });
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


/**
 * Platforms must override this class to provide platform specific utilities
 * and access to the migration service, such as exposing an interface to read
 * raw values from the database or value storage.
 * This avoids the need for platforms to override migrations directly.
 */

var DeviceInterface =
/*#__PURE__*/
function () {
  /**
    * @param timeout
       A platform-specific function that is fed functions to run
       when other operations have completed. This is similar to
       setImmediate on the web, or setTimeout(fn, 0).
    * @param interval
       A platform-specific function that is fed functions to
       perform repeatedly. Similar to setInterval.
  */
  function DeviceInterface() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        namespace = _ref.namespace,
        timeout = _ref.timeout,
        interval = _ref.interval;

    _classCallCheck(this, DeviceInterface);

    if (!timeout || !interval) {
      throw "'timeout' and 'interval' are required to initialize device interface.";
    }

    this.namespace = namespace;
    this.timeout = timeout || setTimeout.bind(Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["getGlobalScope"])());
    this.interval = interval || setInterval.bind(Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["getGlobalScope"])());
  }

  _createClass(DeviceInterface, [{
    key: "getRawStorageValue",
    value: function getRawStorageValue(key) {
      return regeneratorRuntime.async(function getRawStorageValue$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              throw 'Must override DeviceInterface.getRawStorageValue';

            case 1:
            case "end":
              return _context.stop();
          }
        }
      });
    }
  }, {
    key: "getJsonParsedStorageValue",
    value: function getJsonParsedStorageValue(key) {
      var value;
      return regeneratorRuntime.async(function getJsonParsedStorageValue$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return regeneratorRuntime.awrap(this.getRawStorageValue(key));

            case 2:
              value = _context2.sent;
              return _context2.abrupt("return", value ? JSON.parse(value) : value);

            case 4:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "getAllRawStorageKeyValues",
    value: function getAllRawStorageKeyValues() {
      return regeneratorRuntime.async(function getAllRawStorageKeyValues$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              throw 'Must override DeviceInterface.getAllRawStorageKeyValues';

            case 1:
            case "end":
              return _context3.stop();
          }
        }
      });
    }
  }, {
    key: "setRawStorageValue",
    value: function setRawStorageValue(key, value) {
      return regeneratorRuntime.async(function setRawStorageValue$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              throw 'Must override DeviceInterface.setRawStorageValue';

            case 1:
            case "end":
              return _context4.stop();
          }
        }
      });
    }
  }, {
    key: "removeRawStorageValue",
    value: function removeRawStorageValue(key) {
      return regeneratorRuntime.async(function removeRawStorageValue$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              throw 'Must override DeviceInterface.removeRawStorageValue';

            case 1:
            case "end":
              return _context5.stop();
          }
        }
      });
    }
  }, {
    key: "removeAllRawStorageValues",
    value: function removeAllRawStorageValues() {
      return regeneratorRuntime.async(function removeAllRawStorageValues$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              throw 'Must override DeviceInterface.removeAllRawStorageValues';

            case 1:
            case "end":
              return _context6.stop();
          }
        }
      });
    }
  }, {
    key: "openDatabase",
    value: function openDatabase() {
      return regeneratorRuntime.async(function openDatabase$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              throw 'Must override DeviceInterface.openDatabase';

            case 1:
            case "end":
              return _context7.stop();
          }
        }
      });
    }
  }, {
    key: "getAllRawDatabasePayloads",
    value: function getAllRawDatabasePayloads() {
      return regeneratorRuntime.async(function getAllRawDatabasePayloads$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              throw 'Must override DeviceInterface.getAllRawDatabasePayloads';

            case 1:
            case "end":
              return _context8.stop();
          }
        }
      });
    }
  }, {
    key: "saveRawDatabasePayload",
    value: function saveRawDatabasePayload(payload) {
      return regeneratorRuntime.async(function saveRawDatabasePayload$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              throw 'Must override DeviceInterface.saveRawDatabasePayload';

            case 1:
            case "end":
              return _context9.stop();
          }
        }
      });
    }
  }, {
    key: "saveRawDatabasePayloads",
    value: function saveRawDatabasePayloads(payloads) {
      return regeneratorRuntime.async(function saveRawDatabasePayloads$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              throw 'Must override DeviceInterface.saveRawDatabasePayloads';

            case 1:
            case "end":
              return _context10.stop();
          }
        }
      });
    }
  }, {
    key: "removeRawDatabasePayloadWithId",
    value: function removeRawDatabasePayloadWithId(id) {
      return regeneratorRuntime.async(function removeRawDatabasePayloadWithId$(_context11) {
        while (1) {
          switch (_context11.prev = _context11.next) {
            case 0:
              throw 'Must override DeviceInterface.removeRawDatabasePayloadWithId';

            case 1:
            case "end":
              return _context11.stop();
          }
        }
      });
    }
  }, {
    key: "removeAllRawDatabasePayloads",
    value: function removeAllRawDatabasePayloads() {
      return regeneratorRuntime.async(function removeAllRawDatabasePayloads$(_context12) {
        while (1) {
          switch (_context12.prev = _context12.next) {
            case 0:
              throw 'Must override DeviceInterface.removeAllRawDatabasePayloads';

            case 1:
            case "end":
              return _context12.stop();
          }
        }
      });
    }
  }, {
    key: "getKeychainValue",
    value: function getKeychainValue() {
      return regeneratorRuntime.async(function getKeychainValue$(_context13) {
        while (1) {
          switch (_context13.prev = _context13.next) {
            case 0:
              throw 'Must override DeviceInterface.getKeychainValue';

            case 1:
            case "end":
              return _context13.stop();
          }
        }
      });
    }
  }, {
    key: "setKeychainValue",
    value: function setKeychainValue(value) {
      return regeneratorRuntime.async(function setKeychainValue$(_context14) {
        while (1) {
          switch (_context14.prev = _context14.next) {
            case 0:
              throw 'Must override DeviceInterface.setKeychainValue';

            case 1:
            case "end":
              return _context14.stop();
          }
        }
      });
    }
  }, {
    key: "clearKeychainValue",
    value: function clearKeychainValue() {
      return regeneratorRuntime.async(function clearKeychainValue$(_context15) {
        while (1) {
          switch (_context15.prev = _context15.next) {
            case 0:
              throw 'Must override DeviceInterface.clearKeychainValue';

            case 1:
            case "end":
              return _context15.stop();
          }
        }
      });
    }
  }]);

  return DeviceInterface;
}();

/***/ }),

/***/ "./lib/events.js":
/*!***********************!*\
  !*** ./lib/events.js ***!
  \***********************/
/*! exports provided: SyncEvents, ApplicationEvents, applicationEventForSyncEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationEvents", function() { return ApplicationEvents; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applicationEventForSyncEvent", function() { return applicationEventForSyncEvent; });
/* harmony import */ var _Services_sync_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Services/sync/events */ "./lib/services/sync/events.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SyncEvents", function() { return _Services_sync_events__WEBPACK_IMPORTED_MODULE_0__["SyncEvents"]; });

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var ApplicationEvents = {
  SignedIn: 2,
  SignedOut: 3,
  CompletedSync: 5,
  FailedSync: 6,
  HighLatencySync: 7,
  EnteredOutOfSync: 8,
  ExitedOutOfSync: 9,

  /** 
   * The application has finished it `prepareForLaunch` state and is now ready for unlock 
   * Called when the application has initialized and is ready for launch, but before
   * the application has been unlocked, if applicable. Use this to do pre-launch
   * configuration, but do not attempt to access user data like notes or tags.
   */
  Started: 10,

  /** 
   * The applicaiton is fully unlocked and ready for i/o 
   * Called when the application has been fully decrypted and unlocked. Use this to
   * to begin streaming data like notes and tags.
   */
  Launched: 11,

  /**
   * When the root key or root key wrapper changes. Includes events like account state
   * changes (registering, signing in, changing pw, logging out) and passcode state
   * changes (adding, removing, changing).
   */
  KeyStatusChanged: 12
};
function applicationEventForSyncEvent(syncEvent) {
  var _SyncEvents$FullSyncC;

  return (_SyncEvents$FullSyncC = {}, _defineProperty(_SyncEvents$FullSyncC, _Services_sync_events__WEBPACK_IMPORTED_MODULE_0__["SyncEvents"].FullSyncCompleted, ApplicationEvents.CompletedSync), _defineProperty(_SyncEvents$FullSyncC, _Services_sync_events__WEBPACK_IMPORTED_MODULE_0__["SyncEvents"].SyncError, ApplicationEvents.FailedSync), _defineProperty(_SyncEvents$FullSyncC, _Services_sync_events__WEBPACK_IMPORTED_MODULE_0__["SyncEvents"].SyncTakingTooLong, ApplicationEvents.HighLatencySync), _defineProperty(_SyncEvents$FullSyncC, _Services_sync_events__WEBPACK_IMPORTED_MODULE_0__["SyncEvents"].EnterOutOfSync, ApplicationEvents.EnteredOutOfSync), _defineProperty(_SyncEvents$FullSyncC, _Services_sync_events__WEBPACK_IMPORTED_MODULE_0__["SyncEvents"].ExitOutOfSync, ApplicationEvents.ExitedOutOfSync), _SyncEvents$FullSyncC)[syncEvent];
}

/***/ }),

/***/ "./lib/index.js":
/*!**********************!*\
  !*** ./lib/index.js ***!
  \**********************/
/*! exports provided: DEFAULT_APP_DOMAIN, ApplicationEvents, SyncEvents, applicationEventForSyncEvent, ApplicationStages, Environments, Platforms, isEnvironmentWebOrDesktop, isEnvironmentMobile, Challenges, StorageKeys, namespacedKey, RAW_STORAGE_KEY_LAST_MIGRATION_TIMESTAMP */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_APP_DOMAIN", function() { return DEFAULT_APP_DOMAIN; });
/* harmony import */ var _Lib_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/events */ "./lib/events.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ApplicationEvents", function() { return _Lib_events__WEBPACK_IMPORTED_MODULE_0__["ApplicationEvents"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SyncEvents", function() { return _Lib_events__WEBPACK_IMPORTED_MODULE_0__["SyncEvents"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "applicationEventForSyncEvent", function() { return _Lib_events__WEBPACK_IMPORTED_MODULE_0__["applicationEventForSyncEvent"]; });

/* harmony import */ var _Lib_stages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Lib/stages */ "./lib/stages.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ApplicationStages", function() { return _Lib_stages__WEBPACK_IMPORTED_MODULE_1__["ApplicationStages"]; });

/* harmony import */ var _Lib_platforms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Lib/platforms */ "./lib/platforms.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Environments", function() { return _Lib_platforms__WEBPACK_IMPORTED_MODULE_2__["Environments"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Platforms", function() { return _Lib_platforms__WEBPACK_IMPORTED_MODULE_2__["Platforms"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEnvironmentWebOrDesktop", function() { return _Lib_platforms__WEBPACK_IMPORTED_MODULE_2__["isEnvironmentWebOrDesktop"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEnvironmentMobile", function() { return _Lib_platforms__WEBPACK_IMPORTED_MODULE_2__["isEnvironmentMobile"]; });

/* harmony import */ var _Lib_challenges__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Lib/challenges */ "./lib/challenges.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Challenges", function() { return _Lib_challenges__WEBPACK_IMPORTED_MODULE_3__["Challenges"]; });

/* harmony import */ var _Lib_storage_keys__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Lib/storage_keys */ "./lib/storage_keys.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StorageKeys", function() { return _Lib_storage_keys__WEBPACK_IMPORTED_MODULE_4__["StorageKeys"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "namespacedKey", function() { return _Lib_storage_keys__WEBPACK_IMPORTED_MODULE_4__["namespacedKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RAW_STORAGE_KEY_LAST_MIGRATION_TIMESTAMP", function() { return _Lib_storage_keys__WEBPACK_IMPORTED_MODULE_4__["RAW_STORAGE_KEY_LAST_MIGRATION_TIMESTAMP"]; });

var DEFAULT_APP_DOMAIN = 'org.standardnotes.sn';






/***/ }),

/***/ "./lib/main.js":
/*!*********************!*\
  !*** ./lib/main.js ***!
  \*********************/
/*! exports provided: SNApplication, SNProtocolService, SNProtocolOperator001, SNProtocolOperator002, SNProtocolOperator003, SNProtocolOperator004, DeviceInterface, SFItem, SNItemsKey, SFPredicate, SNNote, SNTag, SNSmartTag, SNActionsExtension, Action, SNTheme, SNEncryptedStorage, SNServerExtension, SNComponent, SNEditor, SNComponentManager, HistorySession, ItemHistory, ItemHistoryEntry, SFPrivileges, SNWebCrypto, SNReactNativeCrypto, SNModelManager, SNHttpService, DeviceAuthService, ChallengeResponse, PureService, SNStorageService, StoragePersistencePolicies, StorageEncryptionPolicies, StorageValueModes, ValueModesKeys, Challenges, SNSyncManager, SyncSources, SyncModes, TIMING_STRATEGY_RESOLVE_ON_NEXT, TIMING_STRATEGY_FORCE_SPAWN_NEW, SNSessionManager, SNMigrationService, SNAlertService, SNHistoryManager, SNPrivilegesService, SNSingletonManager, SNKeyManager, KEY_MODE_ROOT_KEY_NONE, KEY_MODE_ROOT_KEY_ONLY, KEY_MODE_ROOT_KEY_PLUS_WRAPPER, KEY_MODE_WRAPPER_ONLY, SNApiService, findInArray, isNullOrUndefined, deepMerge, extendArray, removeFromIndex, subtractFromArray, arrayByDifference, uniqCombineObjArrays, greaterOfTwoDates, getGlobalScope, Uuid, EncryptionIntents, isLocalStorageIntent, isFileIntent, isDecryptedIntent, intentRequiresEncryption, ContentTypes, ApplicationEvents, Environments, Platforms, isEnvironmentWebOrDesktop, isEnvironmentMobile, platformFromString, SyncEvents, SNPureItemPayload, SNStorageItemPayload, PayloadCollection, CreateMaxPayloadFromAnyObject, CreateSourcedPayloadFromObject, PayloadSources, isPayloadSourceRetrieved, ProtocolVersions, PayloadFormats, StorageKeys, BaseMigration, ProtectedActions, PrivilegeCredentials, PRIVILEGE_SESSION_LENGTH_NONE, PRIVILEGE_SESSION_LENGTH_FIVE_MINUTES, PRIVILEGE_SESSION_LENGTH_ONE_HOUR, PRIVILEGE_SESSION_LENGTH_ONE_WEEK */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Lib_application__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/application */ "./lib/application.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNApplication", function() { return _Lib_application__WEBPACK_IMPORTED_MODULE_0__["SNApplication"]; });

/* harmony import */ var _Services_protocol_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Services/protocol_service */ "./lib/services/protocol_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNProtocolService", function() { return _Services_protocol_service__WEBPACK_IMPORTED_MODULE_1__["SNProtocolService"]; });

/* harmony import */ var _Protocol_operator_001_operator_001__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Protocol/operator/001/operator_001 */ "./lib/protocol/operator/001/operator_001.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNProtocolOperator001", function() { return _Protocol_operator_001_operator_001__WEBPACK_IMPORTED_MODULE_2__["SNProtocolOperator001"]; });

/* harmony import */ var _Protocol_operator_002_operator_002__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Protocol/operator/002/operator_002 */ "./lib/protocol/operator/002/operator_002.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNProtocolOperator002", function() { return _Protocol_operator_002_operator_002__WEBPACK_IMPORTED_MODULE_3__["SNProtocolOperator002"]; });

/* harmony import */ var _Protocol_operator_003_operator_003__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Protocol/operator/003/operator_003 */ "./lib/protocol/operator/003/operator_003.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNProtocolOperator003", function() { return _Protocol_operator_003_operator_003__WEBPACK_IMPORTED_MODULE_4__["SNProtocolOperator003"]; });

/* harmony import */ var _Protocol_operator_004_operator_004__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Protocol/operator/004/operator_004 */ "./lib/protocol/operator/004/operator_004.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNProtocolOperator004", function() { return _Protocol_operator_004_operator_004__WEBPACK_IMPORTED_MODULE_5__["SNProtocolOperator004"]; });

/* harmony import */ var _Lib_device_interface__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @Lib/device_interface */ "./lib/device_interface.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeviceInterface", function() { return _Lib_device_interface__WEBPACK_IMPORTED_MODULE_6__["DeviceInterface"]; });

/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./models */ "./lib/models/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SFItem", function() { return _models__WEBPACK_IMPORTED_MODULE_7__["SFItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNItemsKey", function() { return _models__WEBPACK_IMPORTED_MODULE_7__["SNItemsKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SFPredicate", function() { return _models__WEBPACK_IMPORTED_MODULE_7__["SFPredicate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNNote", function() { return _models__WEBPACK_IMPORTED_MODULE_7__["SNNote"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNTag", function() { return _models__WEBPACK_IMPORTED_MODULE_7__["SNTag"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNSmartTag", function() { return _models__WEBPACK_IMPORTED_MODULE_7__["SNSmartTag"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNActionsExtension", function() { return _models__WEBPACK_IMPORTED_MODULE_7__["SNActionsExtension"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Action", function() { return _models__WEBPACK_IMPORTED_MODULE_7__["Action"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNTheme", function() { return _models__WEBPACK_IMPORTED_MODULE_7__["SNTheme"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNEncryptedStorage", function() { return _models__WEBPACK_IMPORTED_MODULE_7__["SNEncryptedStorage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNServerExtension", function() { return _models__WEBPACK_IMPORTED_MODULE_7__["SNServerExtension"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNComponent", function() { return _models__WEBPACK_IMPORTED_MODULE_7__["SNComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNEditor", function() { return _models__WEBPACK_IMPORTED_MODULE_7__["SNEditor"]; });

/* harmony import */ var _services_component_manager__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./services/component_manager */ "./lib/services/component_manager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNComponentManager", function() { return _services_component_manager__WEBPACK_IMPORTED_MODULE_8__["SNComponentManager"]; });

/* harmony import */ var _Services_history_history_session__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @Services/history/history_session */ "./lib/services/history/history_session.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HistorySession", function() { return _Services_history_history_session__WEBPACK_IMPORTED_MODULE_9__["HistorySession"]; });

/* harmony import */ var _Services_history_item_history__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @Services/history/item_history */ "./lib/services/history/item_history.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemHistory", function() { return _Services_history_item_history__WEBPACK_IMPORTED_MODULE_10__["ItemHistory"]; });

/* harmony import */ var _Services_history_item_history_entry__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @Services/history/item_history_entry */ "./lib/services/history/item_history_entry.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemHistoryEntry", function() { return _Services_history_item_history_entry__WEBPACK_IMPORTED_MODULE_11__["ItemHistoryEntry"]; });

/* harmony import */ var _models_privileges_privileges__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./models/privileges/privileges */ "./lib/models/privileges/privileges.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SFPrivileges", function() { return _models_privileges_privileges__WEBPACK_IMPORTED_MODULE_12__["SFPrivileges"]; });

/* harmony import */ var sncrypto__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! sncrypto */ "../sncrypto/dist/sncrypto.js");
/* harmony import */ var sncrypto__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(sncrypto__WEBPACK_IMPORTED_MODULE_13__);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNWebCrypto", function() { return sncrypto__WEBPACK_IMPORTED_MODULE_13__["SNWebCrypto"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNReactNativeCrypto", function() { return sncrypto__WEBPACK_IMPORTED_MODULE_13__["SNReactNativeCrypto"]; });

/* harmony import */ var _services_model_manager__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./services/model_manager */ "./lib/services/model_manager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNModelManager", function() { return _services_model_manager__WEBPACK_IMPORTED_MODULE_14__["SNModelManager"]; });

/* harmony import */ var _services_http_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./services/http_service */ "./lib/services/http_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNHttpService", function() { return _services_http_service__WEBPACK_IMPORTED_MODULE_15__["SNHttpService"]; });

/* harmony import */ var _services_device_auth_device_auth_service__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./services/device_auth/device_auth_service */ "./lib/services/device_auth/device_auth_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeviceAuthService", function() { return _services_device_auth_device_auth_service__WEBPACK_IMPORTED_MODULE_46__["DeviceAuthService"]; });

/* harmony import */ var _Services_device_auth_response__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @Services/device_auth/response */ "./lib/services/device_auth/response.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChallengeResponse", function() { return _Services_device_auth_response__WEBPACK_IMPORTED_MODULE_17__["ChallengeResponse"]; });

/* harmony import */ var _Services_pure_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @Services/pure_service */ "./lib/services/pure_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PureService", function() { return _Services_pure_service__WEBPACK_IMPORTED_MODULE_18__["PureService"]; });

/* harmony import */ var _services_storage_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./services/storage_service */ "./lib/services/storage_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNStorageService", function() { return _services_storage_service__WEBPACK_IMPORTED_MODULE_19__["SNStorageService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StoragePersistencePolicies", function() { return _services_storage_service__WEBPACK_IMPORTED_MODULE_19__["StoragePersistencePolicies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StorageEncryptionPolicies", function() { return _services_storage_service__WEBPACK_IMPORTED_MODULE_19__["StorageEncryptionPolicies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StorageValueModes", function() { return _services_storage_service__WEBPACK_IMPORTED_MODULE_19__["StorageValueModes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ValueModesKeys", function() { return _services_storage_service__WEBPACK_IMPORTED_MODULE_19__["ValueModesKeys"]; });

/* harmony import */ var _Lib_challenges__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @Lib/challenges */ "./lib/challenges.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Challenges", function() { return _Lib_challenges__WEBPACK_IMPORTED_MODULE_20__["Challenges"]; });

/* harmony import */ var _services_sync_sync_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./services/sync/sync_service */ "./lib/services/sync/sync_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNSyncManager", function() { return _services_sync_sync_service__WEBPACK_IMPORTED_MODULE_21__["SNSyncManager"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SyncSources", function() { return _services_sync_sync_service__WEBPACK_IMPORTED_MODULE_21__["SyncSources"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SyncModes", function() { return _services_sync_sync_service__WEBPACK_IMPORTED_MODULE_21__["SyncModes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TIMING_STRATEGY_RESOLVE_ON_NEXT", function() { return _services_sync_sync_service__WEBPACK_IMPORTED_MODULE_21__["TIMING_STRATEGY_RESOLVE_ON_NEXT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TIMING_STRATEGY_FORCE_SPAWN_NEW", function() { return _services_sync_sync_service__WEBPACK_IMPORTED_MODULE_21__["TIMING_STRATEGY_FORCE_SPAWN_NEW"]; });

/* harmony import */ var _services_api_session_manager__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./services/api/session_manager */ "./lib/services/api/session_manager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNSessionManager", function() { return _services_api_session_manager__WEBPACK_IMPORTED_MODULE_22__["SNSessionManager"]; });

/* harmony import */ var _migration_migration_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./migration/migration_service */ "./lib/migration/migration_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNMigrationService", function() { return _migration_migration_service__WEBPACK_IMPORTED_MODULE_23__["SNMigrationService"]; });

/* harmony import */ var _services_alert_service__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./services/alert_service */ "./lib/services/alert_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNAlertService", function() { return _services_alert_service__WEBPACK_IMPORTED_MODULE_24__["SNAlertService"]; });

/* harmony import */ var _services_history_history_manager__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./services/history/history_manager */ "./lib/services/history/history_manager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNHistoryManager", function() { return _services_history_history_manager__WEBPACK_IMPORTED_MODULE_25__["SNHistoryManager"]; });

/* harmony import */ var _services_privileges_privileges_service__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./services/privileges/privileges_service */ "./lib/services/privileges/privileges_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNPrivilegesService", function() { return _services_privileges_privileges_service__WEBPACK_IMPORTED_MODULE_26__["SNPrivilegesService"]; });

/* harmony import */ var _services_singleton_manager__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./services/singleton_manager */ "./lib/services/singleton_manager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNSingletonManager", function() { return _services_singleton_manager__WEBPACK_IMPORTED_MODULE_27__["SNSingletonManager"]; });

/* harmony import */ var _services_key_manager__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./services/key_manager */ "./lib/services/key_manager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNKeyManager", function() { return _services_key_manager__WEBPACK_IMPORTED_MODULE_28__["SNKeyManager"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "KEY_MODE_ROOT_KEY_NONE", function() { return _services_key_manager__WEBPACK_IMPORTED_MODULE_28__["KEY_MODE_ROOT_KEY_NONE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "KEY_MODE_ROOT_KEY_ONLY", function() { return _services_key_manager__WEBPACK_IMPORTED_MODULE_28__["KEY_MODE_ROOT_KEY_ONLY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "KEY_MODE_ROOT_KEY_PLUS_WRAPPER", function() { return _services_key_manager__WEBPACK_IMPORTED_MODULE_28__["KEY_MODE_ROOT_KEY_PLUS_WRAPPER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "KEY_MODE_WRAPPER_ONLY", function() { return _services_key_manager__WEBPACK_IMPORTED_MODULE_28__["KEY_MODE_WRAPPER_ONLY"]; });

/* harmony import */ var _services_api_api_service__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./services/api/api_service */ "./lib/services/api/api_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNApiService", function() { return _services_api_api_service__WEBPACK_IMPORTED_MODULE_29__["SNApiService"]; });

/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./utils */ "./lib/utils.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findInArray", function() { return _utils__WEBPACK_IMPORTED_MODULE_30__["findInArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNullOrUndefined", function() { return _utils__WEBPACK_IMPORTED_MODULE_30__["isNullOrUndefined"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deepMerge", function() { return _utils__WEBPACK_IMPORTED_MODULE_30__["deepMerge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extendArray", function() { return _utils__WEBPACK_IMPORTED_MODULE_30__["extendArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeFromIndex", function() { return _utils__WEBPACK_IMPORTED_MODULE_30__["removeFromIndex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subtractFromArray", function() { return _utils__WEBPACK_IMPORTED_MODULE_30__["subtractFromArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arrayByDifference", function() { return _utils__WEBPACK_IMPORTED_MODULE_30__["arrayByDifference"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "uniqCombineObjArrays", function() { return _utils__WEBPACK_IMPORTED_MODULE_30__["uniqCombineObjArrays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "greaterOfTwoDates", function() { return _utils__WEBPACK_IMPORTED_MODULE_30__["greaterOfTwoDates"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getGlobalScope", function() { return _utils__WEBPACK_IMPORTED_MODULE_30__["getGlobalScope"]; });

/* harmony import */ var _Lib_uuid__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @Lib/uuid */ "./lib/uuid.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Uuid", function() { return _Lib_uuid__WEBPACK_IMPORTED_MODULE_31__["Uuid"]; });

/* harmony import */ var _Protocol_intents__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @Protocol/intents */ "./lib/protocol/intents.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EncryptionIntents", function() { return _Protocol_intents__WEBPACK_IMPORTED_MODULE_32__["EncryptionIntents"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isLocalStorageIntent", function() { return _Protocol_intents__WEBPACK_IMPORTED_MODULE_32__["isLocalStorageIntent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFileIntent", function() { return _Protocol_intents__WEBPACK_IMPORTED_MODULE_32__["isFileIntent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDecryptedIntent", function() { return _Protocol_intents__WEBPACK_IMPORTED_MODULE_32__["isDecryptedIntent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intentRequiresEncryption", function() { return _Protocol_intents__WEBPACK_IMPORTED_MODULE_32__["intentRequiresEncryption"]; });

/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ContentTypes", function() { return _Models_content_types__WEBPACK_IMPORTED_MODULE_33__["ContentTypes"]; });

/* harmony import */ var _Lib_events__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @Lib/events */ "./lib/events.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ApplicationEvents", function() { return _Lib_events__WEBPACK_IMPORTED_MODULE_34__["ApplicationEvents"]; });

/* harmony import */ var _Lib_platforms__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @Lib/platforms */ "./lib/platforms.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Environments", function() { return _Lib_platforms__WEBPACK_IMPORTED_MODULE_35__["Environments"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Platforms", function() { return _Lib_platforms__WEBPACK_IMPORTED_MODULE_35__["Platforms"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEnvironmentWebOrDesktop", function() { return _Lib_platforms__WEBPACK_IMPORTED_MODULE_35__["isEnvironmentWebOrDesktop"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEnvironmentMobile", function() { return _Lib_platforms__WEBPACK_IMPORTED_MODULE_35__["isEnvironmentMobile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "platformFromString", function() { return _Lib_platforms__WEBPACK_IMPORTED_MODULE_35__["platformFromString"]; });

/* harmony import */ var _Lib_services__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! @Lib/services */ "./lib/services/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SyncEvents", function() { return _Lib_services__WEBPACK_IMPORTED_MODULE_36__["SyncEvents"]; });

/* harmony import */ var _Payloads_pure_item_payload__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @Payloads/pure_item_payload */ "./lib/protocol/payloads/pure_item_payload.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNPureItemPayload", function() { return _Payloads_pure_item_payload__WEBPACK_IMPORTED_MODULE_37__["SNPureItemPayload"]; });

/* harmony import */ var _Payloads_storage_item_payload__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! @Payloads/storage_item_payload */ "./lib/protocol/payloads/storage_item_payload.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNStorageItemPayload", function() { return _Payloads_storage_item_payload__WEBPACK_IMPORTED_MODULE_38__["SNStorageItemPayload"]; });

/* harmony import */ var _Payloads_collection__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! @Payloads/collection */ "./lib/protocol/payloads/collection.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PayloadCollection", function() { return _Payloads_collection__WEBPACK_IMPORTED_MODULE_39__["PayloadCollection"]; });

/* harmony import */ var _Payloads_generator__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! @Payloads/generator */ "./lib/protocol/payloads/generator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateMaxPayloadFromAnyObject", function() { return _Payloads_generator__WEBPACK_IMPORTED_MODULE_40__["CreateMaxPayloadFromAnyObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateSourcedPayloadFromObject", function() { return _Payloads_generator__WEBPACK_IMPORTED_MODULE_40__["CreateSourcedPayloadFromObject"]; });

/* harmony import */ var _Lib_protocol_payloads_sources__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! @Lib/protocol/payloads/sources */ "./lib/protocol/payloads/sources.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PayloadSources", function() { return _Lib_protocol_payloads_sources__WEBPACK_IMPORTED_MODULE_41__["PayloadSources"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPayloadSourceRetrieved", function() { return _Lib_protocol_payloads_sources__WEBPACK_IMPORTED_MODULE_41__["isPayloadSourceRetrieved"]; });

/* harmony import */ var _Lib_protocol_versions__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! @Lib/protocol/versions */ "./lib/protocol/versions.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ProtocolVersions", function() { return _Lib_protocol_versions__WEBPACK_IMPORTED_MODULE_42__["ProtocolVersions"]; });

/* harmony import */ var _Payloads_formats__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! @Payloads/formats */ "./lib/protocol/payloads/formats.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PayloadFormats", function() { return _Payloads_formats__WEBPACK_IMPORTED_MODULE_43__["PayloadFormats"]; });

/* harmony import */ var _Lib_storage_keys__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! @Lib/storage_keys */ "./lib/storage_keys.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StorageKeys", function() { return _Lib_storage_keys__WEBPACK_IMPORTED_MODULE_44__["StorageKeys"]; });

/* harmony import */ var _Lib_migration_migrations_2020_01_01_base__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! @Lib/migration/migrations/2020-01-01-base */ "./lib/migration/migrations/2020-01-01-base.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BaseMigration", function() { return _Lib_migration_migrations_2020_01_01_base__WEBPACK_IMPORTED_MODULE_45__["BaseMigration"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ProtectedActions", function() { return _services_privileges_privileges_service__WEBPACK_IMPORTED_MODULE_26__["ProtectedActions"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PrivilegeCredentials", function() { return _services_privileges_privileges_service__WEBPACK_IMPORTED_MODULE_26__["PrivilegeCredentials"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PRIVILEGE_SESSION_LENGTH_NONE", function() { return _services_privileges_privileges_service__WEBPACK_IMPORTED_MODULE_26__["PRIVILEGE_SESSION_LENGTH_NONE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PRIVILEGE_SESSION_LENGTH_FIVE_MINUTES", function() { return _services_privileges_privileges_service__WEBPACK_IMPORTED_MODULE_26__["PRIVILEGE_SESSION_LENGTH_FIVE_MINUTES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PRIVILEGE_SESSION_LENGTH_ONE_HOUR", function() { return _services_privileges_privileges_service__WEBPACK_IMPORTED_MODULE_26__["PRIVILEGE_SESSION_LENGTH_ONE_HOUR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PRIVILEGE_SESSION_LENGTH_ONE_WEEK", function() { return _services_privileges_privileges_service__WEBPACK_IMPORTED_MODULE_26__["PRIVILEGE_SESSION_LENGTH_ONE_WEEK"]; });






































/** Payloads */









/** Migrations */


/** Privileges */



/***/ }),

/***/ "./lib/migration/migration_service.js":
/*!********************************************!*\
  !*** ./lib/migration/migration_service.js ***!
  \********************************************/
/*! exports provided: SNMigrationService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNMigrationService", function() { return SNMigrationService; });
/* harmony import */ var _Lib_migration_migrations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/migration/migrations */ "./lib/migration/migrations/index.js");
/* harmony import */ var _Lib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Lib */ "./lib/index.js");
/* harmony import */ var _Lib_migration_migrations_2020_01_01_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Lib/migration/migrations/2020-01-01-base */ "./lib/migration/migrations/2020-01-01-base.js");
/* harmony import */ var _Services_pure_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Services/pure_service */ "./lib/services/pure_service.js");
/* harmony import */ var _Lib_storage_keys__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Lib/storage_keys */ "./lib/storage_keys.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }







var SNMigrationService =
/*#__PURE__*/
function (_PureService) {
  _inherits(SNMigrationService, _PureService);

  function SNMigrationService(_ref) {
    var _this;

    var application = _ref.application,
        challengeResponder = _ref.challengeResponder;

    _classCallCheck(this, SNMigrationService);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNMigrationService).call(this));
    _this.application = application;
    _this.challengeResponder = challengeResponder;
    return _this;
  }

  _createClass(SNMigrationService, [{
    key: "initialize",
    value: function initialize() {
      var _this2 = this;

      var lastMigration;
      return regeneratorRuntime.async(function initialize$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return regeneratorRuntime.awrap(this.runBaseMigration());

            case 2:
              _context2.next = 4;
              return regeneratorRuntime.awrap(this.getRequiredMigrations());

            case 4:
              this.activeMigrations = _context2.sent;

              if (this.activeMigrations.length > 0) {
                lastMigration = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_5__["lastElement"])(this.activeMigrations);
                lastMigration.onDone(function _callee() {
                  return regeneratorRuntime.async(function _callee$(_context) {
                    while (1) {
                      switch (_context.prev = _context.next) {
                        case 0:
                          _context.next = 2;
                          return regeneratorRuntime.awrap(_this2.saveLastMigrationTimestamp(lastMigration.constructor.timestamp()));

                        case 2:
                        case "end":
                          return _context.stop();
                      }
                    }
                  });
                });
              }

            case 6:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
    /**
    * @public
    * Application instances will call this function directly when they arrive
    * at a certain migratory state.
    */

  }, {
    key: "handleApplicationStage",
    value: function handleApplicationStage(stage) {
      return regeneratorRuntime.async(function handleApplicationStage$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return regeneratorRuntime.awrap(_get(_getPrototypeOf(SNMigrationService.prototype), "handleApplicationStage", this).call(this, stage));

            case 2:
              if (stage === _Lib__WEBPACK_IMPORTED_MODULE_1__["ApplicationStages"].ReadyForLaunch_05) {
                this.addLoginObserver();
                this.addSyncObserver();
              }

              _context3.next = 5;
              return regeneratorRuntime.awrap(this.handleStage(stage));

            case 5:
            case "end":
              return _context3.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "runBaseMigration",
    value: function runBaseMigration() {
      var baseMigration;
      return regeneratorRuntime.async(function runBaseMigration$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              baseMigration = new _Lib_migration_migrations_2020_01_01_base__WEBPACK_IMPORTED_MODULE_2__["BaseMigration"]({
                application: this.application
              });
              _context4.next = 3;
              return regeneratorRuntime.awrap(baseMigration.handleStage(_Lib__WEBPACK_IMPORTED_MODULE_1__["ApplicationStages"].PreparingForLaunch_0));

            case 3:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "getRequiredMigrations",
    value: function getRequiredMigrations() {
      var lastMigrationTimestamp, activeMigrations, migrationClasses, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, migrationClass, migrationTimestamp;

      return regeneratorRuntime.async(function getRequiredMigrations$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return regeneratorRuntime.awrap(this.getLastMigrationTimestamp());

            case 2:
              lastMigrationTimestamp = _context5.sent;
              activeMigrations = [];
              migrationClasses = Object.keys(_Lib_migration_migrations__WEBPACK_IMPORTED_MODULE_0__).map(function (key) {
                return _Lib_migration_migrations__WEBPACK_IMPORTED_MODULE_0__[key];
              }).sort(function (a, b) {
                var aTimestamp = a.timestamp();
                var bTimestamp = b.timestamp();

                if (aTimestamp < bTimestamp) {
                  return -1;
                } else if (aTimestamp > bTimestamp) {
                  return 1;
                } else {
                  return 0;
                }
              });
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context5.prev = 8;

              for (_iterator = migrationClasses[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                migrationClass = _step.value;
                migrationTimestamp = migrationClass.timestamp();

                if (migrationTimestamp > lastMigrationTimestamp) {
                  // eslint-disable-next-line new-cap
                  activeMigrations.push(new migrationClass({
                    application: this.application,
                    challengeResponder: this.challengeResponder
                  }));
                }
              }

              _context5.next = 16;
              break;

            case 12:
              _context5.prev = 12;
              _context5.t0 = _context5["catch"](8);
              _didIteratorError = true;
              _iteratorError = _context5.t0;

            case 16:
              _context5.prev = 16;
              _context5.prev = 17;

              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }

            case 19:
              _context5.prev = 19;

              if (!_didIteratorError) {
                _context5.next = 22;
                break;
              }

              throw _iteratorError;

            case 22:
              return _context5.finish(19);

            case 23:
              return _context5.finish(16);

            case 24:
              return _context5.abrupt("return", activeMigrations);

            case 25:
            case "end":
              return _context5.stop();
          }
        }
      }, null, this, [[8, 12, 16, 24], [17,, 19, 23]]);
    }
  }, {
    key: "getTimeStampKey",
    value: function getTimeStampKey() {
      return Object(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_4__["namespacedKey"])(this.application.namespace, _Lib_storage_keys__WEBPACK_IMPORTED_MODULE_4__["RAW_STORAGE_KEY_LAST_MIGRATION_TIMESTAMP"]);
    }
  }, {
    key: "getLastMigrationTimestamp",
    value: function getLastMigrationTimestamp() {
      var timestamp;
      return regeneratorRuntime.async(function getLastMigrationTimestamp$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return regeneratorRuntime.awrap(this.application.deviceInterface.getRawStorageValue(this.getTimeStampKey()));

            case 2:
              timestamp = _context6.sent;

              if (!Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_5__["isNullOrUndefined"])(timestamp)) {
                _context6.next = 5;
                break;
              }

              throw 'Timestamp should not be null. Be sure to run base migration first.';

            case 5:
              return _context6.abrupt("return", JSON.parse(timestamp));

            case 6:
            case "end":
              return _context6.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "saveLastMigrationTimestamp",
    value: function saveLastMigrationTimestamp(timestamp) {
      return regeneratorRuntime.async(function saveLastMigrationTimestamp$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              _context7.next = 2;
              return regeneratorRuntime.awrap(this.application.deviceInterface.setRawStorageValue(this.getTimeStampKey(), JSON.stringify(timestamp)));

            case 2:
            case "end":
              return _context7.stop();
          }
        }
      }, null, this);
    }
    /**
     * @private
     */

  }, {
    key: "addLoginObserver",
    value: function addLoginObserver() {
      var _this3 = this;

      this.application.addEventObserver(function _callee2(event, data) {
        return regeneratorRuntime.async(function _callee2$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                if (!(event === _Lib__WEBPACK_IMPORTED_MODULE_1__["ApplicationEvents"].SignedIn)) {
                  _context8.next = 3;
                  break;
                }

                _context8.next = 3;
                return regeneratorRuntime.awrap(_this3.handleStage(_Lib__WEBPACK_IMPORTED_MODULE_1__["ApplicationStages"].SignedIn_30));

              case 3:
              case "end":
                return _context8.stop();
            }
          }
        });
      });
    }
  }, {
    key: "addSyncObserver",
    value: function addSyncObserver() {
      var _this4 = this;

      this.application.syncService.addEventObserver(function _callee3(event, data) {
        return regeneratorRuntime.async(function _callee3$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                if (!(event === _Lib__WEBPACK_IMPORTED_MODULE_1__["SyncEvents"].FullSyncCompleted)) {
                  _context9.next = 3;
                  break;
                }

                _context9.next = 3;
                return regeneratorRuntime.awrap(_this4.handleStage(_Lib__WEBPACK_IMPORTED_MODULE_1__["ApplicationStages"].FullSyncCompleted_13));

              case 3:
              case "end":
                return _context9.stop();
            }
          }
        });
      });
    }
  }, {
    key: "handleStage",
    value: function handleStage(stage) {
      var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, migration;

      return regeneratorRuntime.async(function handleStage$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              _iteratorNormalCompletion2 = true;
              _didIteratorError2 = false;
              _iteratorError2 = undefined;
              _context10.prev = 3;
              _iterator2 = this.activeMigrations[Symbol.iterator]();

            case 5:
              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
                _context10.next = 12;
                break;
              }

              migration = _step2.value;
              _context10.next = 9;
              return regeneratorRuntime.awrap(migration.handleStage(stage));

            case 9:
              _iteratorNormalCompletion2 = true;
              _context10.next = 5;
              break;

            case 12:
              _context10.next = 18;
              break;

            case 14:
              _context10.prev = 14;
              _context10.t0 = _context10["catch"](3);
              _didIteratorError2 = true;
              _iteratorError2 = _context10.t0;

            case 18:
              _context10.prev = 18;
              _context10.prev = 19;

              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }

            case 21:
              _context10.prev = 21;

              if (!_didIteratorError2) {
                _context10.next = 24;
                break;
              }

              throw _iteratorError2;

            case 24:
              return _context10.finish(21);

            case 25:
              return _context10.finish(18);

            case 26:
            case "end":
              return _context10.stop();
          }
        }
      }, null, this, [[3, 14, 18, 26], [19,, 21, 25]]);
    }
  }]);

  return SNMigrationService;
}(_Services_pure_service__WEBPACK_IMPORTED_MODULE_3__["PureService"]);

/***/ }),

/***/ "./lib/migration/migrations/2020-01-01-base.js":
/*!*****************************************************!*\
  !*** ./lib/migration/migrations/2020-01-01-base.js ***!
  \*****************************************************/
/*! exports provided: BaseMigration */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseMigration", function() { return BaseMigration; });
/* harmony import */ var _Lib_migration_migrations_migration__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/migration/migrations/migration */ "./lib/migration/migrations/migration.js");
/* harmony import */ var _Lib_storage_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Lib/storage_keys */ "./lib/storage_keys.js");
/* harmony import */ var _Lib_stages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Lib/stages */ "./lib/stages.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }





var BaseMigration =
/*#__PURE__*/
function (_Migration) {
  _inherits(BaseMigration, _Migration);

  function BaseMigration() {
    _classCallCheck(this, BaseMigration);

    return _possibleConstructorReturn(this, _getPrototypeOf(BaseMigration).apply(this, arguments));
  }

  _createClass(BaseMigration, [{
    key: "registerStageHandlers",

    /** @protected */
    value: function registerStageHandlers() {
      var _this = this;

      this.registerStageHandler(_Lib_stages__WEBPACK_IMPORTED_MODULE_2__["ApplicationStages"].PreparingForLaunch_0, function _callee() {
        return regeneratorRuntime.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return regeneratorRuntime.awrap(_this.migrateMigrationTimestampAllPlatforms());

              case 2:
                _this.markDone();

              case 3:
              case "end":
                return _context.stop();
            }
          }
        });
      });
    }
    /**
    * @private
     * Establish last_migration_date.
     * We need to determine if this is a new application download,
     * or if we're coming from an older, non-current client.
      * If new application download, we expect last_migration_date
     * to be null. However, last_migration_date can also be null if you
     * haven't yet migration to using this system.
      * So in addition to this date being null, we check if deviceInterface
     * has pre-existing storage values for old migration system.
     * If so, this means this is a legacy client making its first jump to
     * this new migration system.
     */

  }, {
    key: "migrateMigrationTimestampAllPlatforms",
    value: function migrateMigrationTimestampAllPlatforms() {
      var possibleLegacyKeys, hasLegacyValue, _i, _possibleLegacyKeys, legacyKey, value, newKey, lastDate, hasNewStructure, newLastMigrationDate, _newLastMigrationDate;

      return regeneratorRuntime.async(function migrateMigrationTimestampAllPlatforms$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              /** If any of these keys exist in raw storage, we are coming from a previous application version */
              possibleLegacyKeys = ['migrations', 'ephemeral', 'user', 'cachedThemes', 'syncToken'];
              hasLegacyValue = false;
              _i = 0, _possibleLegacyKeys = possibleLegacyKeys;

            case 3:
              if (!(_i < _possibleLegacyKeys.length)) {
                _context2.next = 14;
                break;
              }

              legacyKey = _possibleLegacyKeys[_i];
              _context2.next = 7;
              return regeneratorRuntime.awrap(this.application.deviceInterface.getRawStorageValue(legacyKey));

            case 7:
              value = _context2.sent;

              if (!value) {
                _context2.next = 11;
                break;
              }

              hasLegacyValue = true;
              return _context2.abrupt("break", 14);

            case 11:
              _i++;
              _context2.next = 3;
              break;

            case 14:
              newKey = Object(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_1__["namespacedKey"])(this.application.namespace, _Lib_storage_keys__WEBPACK_IMPORTED_MODULE_1__["RAW_STORAGE_KEY_LAST_MIGRATION_TIMESTAMP"]);
              _context2.next = 17;
              return regeneratorRuntime.awrap(this.application.deviceInterface.getRawStorageValue(newKey));

            case 17:
              lastDate = _context2.sent;
              hasNewStructure = !Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(lastDate);

              if (!(!hasNewStructure && hasLegacyValue)) {
                _context2.next = 25;
                break;
              }

              /**
               * Old client updating for the first time. We need to run all migrations.
               * Set last migration date as epoch.
               */
              newLastMigrationDate = new Date(0).getTime();
              _context2.next = 23;
              return regeneratorRuntime.awrap(this.application.deviceInterface.setRawStorageValue(newKey, newLastMigrationDate));

            case 23:
              _context2.next = 32;
              break;

            case 25:
              if (!(!hasNewStructure && !hasLegacyValue)) {
                _context2.next = 31;
                break;
              }

              /** New application, dont run any migrations. Set last migration date as now. */
              _newLastMigrationDate = new Date().getTime();
              _context2.next = 29;
              return regeneratorRuntime.awrap(this.application.deviceInterface.setRawStorageValue(newKey, _newLastMigrationDate));

            case 29:
              _context2.next = 32;
              break;

            case 31:
              if (hasNewStructure) {
                /** Application which has already performed base migration. Keep date as is. */
              }

            case 32:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }], [{
    key: "timestamp",

    /** @public */
    value: function timestamp() {
      return new Date('2020-01-01').getTime();
    }
  }]);

  return BaseMigration;
}(_Lib_migration_migrations_migration__WEBPACK_IMPORTED_MODULE_0__["Migration"]);

/***/ }),

/***/ "./lib/migration/migrations/2020-01-15.js":
/*!************************************************!*\
  !*** ./lib/migration/migrations/2020-01-15.js ***!
  \************************************************/
/*! exports provided: Migration20200115 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Migration20200115", function() { return Migration20200115; });
/* harmony import */ var _Lib_migration_migrations_migration__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/migration/migrations/migration */ "./lib/migration/migrations/migration.js");
/* harmony import */ var _Lib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Lib */ "./lib/index.js");
/* harmony import */ var _Payloads__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads */ "./lib/protocol/payloads/index.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Protocol__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Protocol */ "./lib/protocol/index.js");
/* harmony import */ var _Models__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Models */ "./lib/models/index.js");
/* harmony import */ var _Services__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @Services */ "./lib/services/index.js");
/* harmony import */ var _Lib_uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @Lib/uuid */ "./lib/uuid.js");
/* harmony import */ var _Services_storage_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @Services/storage_service */ "./lib/services/storage_service.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }










var LEGACY_WEB_PASSCODE_PARAMS_KEY = 'offlineParams';
var LEGACY_MOBILE_PASSCODE_PARAMS_KEY = 'pc_params';
var LEGACY_ALL_ACCOUNT_KEY_PARAMS_KEY = 'auth_params';
var LEGACY_WEB_ENCRYPTED_STORAGE_KEY = 'encryptedStorage';
var LEGACY_MOBILE_WRAPPED_ROOT_KEY_KEY = 'encrypted_account_keys';
var Migration20200115 =
/*#__PURE__*/
function (_Migration) {
  _inherits(Migration20200115, _Migration);

  function Migration20200115() {
    _classCallCheck(this, Migration20200115);

    return _possibleConstructorReturn(this, _getPrototypeOf(Migration20200115).apply(this, arguments));
  }

  _createClass(Migration20200115, [{
    key: "registerStageHandlers",

    /** @protected */
    value: function registerStageHandlers() {
      var _this = this;

      this.registerStageHandler(_Lib__WEBPACK_IMPORTED_MODULE_1__["ApplicationStages"].PreparingForLaunch_0, function _callee() {
        return regeneratorRuntime.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!Object(_Lib__WEBPACK_IMPORTED_MODULE_1__["isEnvironmentWebOrDesktop"])(_this.application.environment)) {
                  _context.next = 4;
                  break;
                }

                return _context.abrupt("return", _this.migrateStorageStructureForWebDesktop());

              case 4:
                if (!Object(_Lib__WEBPACK_IMPORTED_MODULE_1__["isEnvironmentMobile"])(_this.application.environment)) {
                  _context.next = 6;
                  break;
                }

                return _context.abrupt("return", _this.migrateStorageStructureForMobile());

              case 6:
              case "end":
                return _context.stop();
            }
          }
        });
      });
      this.registerStageHandler(_Lib__WEBPACK_IMPORTED_MODULE_1__["ApplicationStages"].StorageDecrypted_09, function _callee2() {
        return regeneratorRuntime.async(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return regeneratorRuntime.awrap(_this.migrateArbitraryRawStorageToManagedStorageAllPlatforms());

              case 2:
              case "end":
                return _context2.stop();
            }
          }
        });
      });
      this.registerStageHandler(_Lib__WEBPACK_IMPORTED_MODULE_1__["ApplicationStages"].LoadingDatabase_11, function _callee3() {
        return regeneratorRuntime.async(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return regeneratorRuntime.awrap(_this.createDefaultItemsKeyForAllPlatforms());

              case 2:
                _this.markDone();

              case 3:
              case "end":
                return _context3.stop();
            }
          }
        });
      });
    }
    /**
     * @private
     * @web
     * Migrates legacy storage strucutre into new managed format.
     * If encrypted storage exists, we need to first decrypt it with the passcode.
     * Then extract the account key from it. Then, encrypt storage with the
     * account key. Then encrypt the account key with the passcode and store it
     * within the new storage format.
     
     * Generate note: We do not use the keychain if passcode is available.
     */

  }, {
    key: "migrateStorageStructureForWebDesktop",
    value: function migrateStorageStructureForWebDesktop() {
      var _newStorageRawStructu;

      var deviceInterface, newStorageRawStructure, rawAccountKeyParams, encryptedStorage, encryptedStoragePayload, passcodeResult, passcodeKey, decryptedStoragePayload, passcodeParams, storageValueStore, keyToEncryptStorageWith, hasAccountKeys, _ref, accountKey, wrappedKey, ak, version, _accountKey;

      return regeneratorRuntime.async(function migrateStorageStructureForWebDesktop$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              deviceInterface = this.application.deviceInterface;
              newStorageRawStructure = (_newStorageRawStructu = {}, _defineProperty(_newStorageRawStructu, _Services_storage_service__WEBPACK_IMPORTED_MODULE_8__["ValueModesKeys"].Wrapped, null), _defineProperty(_newStorageRawStructu, _Services_storage_service__WEBPACK_IMPORTED_MODULE_8__["ValueModesKeys"].Unwrapped, {}), _defineProperty(_newStorageRawStructu, _Services_storage_service__WEBPACK_IMPORTED_MODULE_8__["ValueModesKeys"].Nonwrapped, {}), _newStorageRawStructu);
              _context4.next = 4;
              return regeneratorRuntime.awrap(deviceInterface.getJsonParsedStorageValue(LEGACY_ALL_ACCOUNT_KEY_PARAMS_KEY));

            case 4:
              rawAccountKeyParams = _context4.sent;

              /** Could be null if no account, or if account and storage is encrypted */
              if (rawAccountKeyParams) {
                newStorageRawStructure.nonwrapped[_Lib__WEBPACK_IMPORTED_MODULE_1__["StorageKeys"].RootKeyParams] = rawAccountKeyParams;
              }

              _context4.next = 8;
              return regeneratorRuntime.awrap(deviceInterface.getJsonParsedStorageValue(LEGACY_WEB_ENCRYPTED_STORAGE_KEY));

            case 8:
              encryptedStorage = _context4.sent;

              if (!encryptedStorage) {
                _context4.next = 35;
                break;
              }

              encryptedStoragePayload = Object(_Payloads__WEBPACK_IMPORTED_MODULE_2__["CreateMaxPayloadFromAnyObject"])({
                object: encryptedStorage
              });
              _context4.next = 13;
              return regeneratorRuntime.awrap(this.webDesktopHelperGetPasscodeKeyAndDecryptEncryptedStorage(encryptedStoragePayload));

            case 13:
              passcodeResult = _context4.sent;
              passcodeKey = passcodeResult.key;
              decryptedStoragePayload = passcodeResult.decryptedStoragePayload;
              passcodeParams = passcodeResult.keyParams;
              newStorageRawStructure.nonwrapped[_Lib__WEBPACK_IMPORTED_MODULE_1__["StorageKeys"].RootKeyWrapperKeyParams] = passcodeParams.getPortableValue();
              storageValueStore = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_3__["Copy"])(decryptedStoragePayload.content.storage);
              /** Store previously encrypted auth_params into new nonwrapped key */

              newStorageRawStructure.nonwrapped[_Lib__WEBPACK_IMPORTED_MODULE_1__["StorageKeys"].RootKeyParams] = storageValueStore[LEGACY_ALL_ACCOUNT_KEY_PARAMS_KEY];
              keyToEncryptStorageWith = passcodeKey;
              /** Extract account key (mk, pw, ak) if it exists */

              hasAccountKeys = !Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(storageValueStore.mk);

              if (!hasAccountKeys) {
                _context4.next = 30;
                break;
              }

              _context4.next = 25;
              return regeneratorRuntime.awrap(this.webDesktopHelperExtractAndWrapAccountKeysFromValueStore(passcodeKey, storageValueStore));

            case 25:
              _ref = _context4.sent;
              accountKey = _ref.accountKey;
              wrappedKey = _ref.wrappedKey;
              keyToEncryptStorageWith = accountKey;
              newStorageRawStructure.nonwrapped[_Lib__WEBPACK_IMPORTED_MODULE_1__["StorageKeys"].WrappedRootKey] = wrappedKey;

            case 30:
              _context4.next = 32;
              return regeneratorRuntime.awrap(this.webDesktopHelperEncryptStorage(keyToEncryptStorageWith, decryptedStoragePayload, storageValueStore));

            case 32:
              newStorageRawStructure.wrapped = _context4.sent;
              _context4.next = 57;
              break;

            case 35:
              _context4.next = 37;
              return regeneratorRuntime.awrap(this.application.deviceInterface.getRawStorageValue('ak'));

            case 37:
              ak = _context4.sent;
              version = !Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(ak) ? _Protocol__WEBPACK_IMPORTED_MODULE_4__["ProtocolVersions"].V003 : _Protocol__WEBPACK_IMPORTED_MODULE_4__["ProtocolVersions"].V002;
              _context4.t0 = regeneratorRuntime;
              _context4.t1 = _Protocol__WEBPACK_IMPORTED_MODULE_4__["SNRootKey"];
              _context4.next = 43;
              return regeneratorRuntime.awrap(this.application.deviceInterface.getRawStorageValue('mk'));

            case 43:
              _context4.t2 = _context4.sent;
              _context4.next = 46;
              return regeneratorRuntime.awrap(this.application.deviceInterface.getRawStorageValue('pw'));

            case 46:
              _context4.t3 = _context4.sent;
              _context4.t4 = ak;
              _context4.t5 = version;
              _context4.t6 = {
                masterKey: _context4.t2,
                serverPassword: _context4.t3,
                dataAuthenticationKey: _context4.t4,
                version: _context4.t5
              };
              _context4.t7 = {
                content: _context4.t6
              };
              _context4.t8 = _context4.t1.Create.call(_context4.t1, _context4.t7);
              _context4.next = 54;
              return _context4.t0.awrap.call(_context4.t0, _context4.t8);

            case 54:
              _accountKey = _context4.sent;
              _context4.next = 57;
              return regeneratorRuntime.awrap(this.application.deviceInterface.setKeychainValue(_accountKey.getPersistableValue()));

            case 57:
              _context4.next = 59;
              return regeneratorRuntime.awrap(this.allPlatformHelperSetStorageStructure(newStorageRawStructure));

            case 59:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this);
    }
    /**
     * @helper
     * @allplatform
     */

  }, {
    key: "allPlatformHelperSetStorageStructure",
    value: function allPlatformHelperSetStorageStructure(rawStructure) {
      var newStructure;
      return regeneratorRuntime.async(function allPlatformHelperSetStorageStructure$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              newStructure = _Services__WEBPACK_IMPORTED_MODULE_6__["SNStorageService"].defaultValuesObject(rawStructure);
              newStructure[_Services_storage_service__WEBPACK_IMPORTED_MODULE_8__["ValueModesKeys"].Unwrapped] = null;
              _context5.next = 4;
              return regeneratorRuntime.awrap(this.application.deviceInterface.setRawStorageValue(Object(_Lib__WEBPACK_IMPORTED_MODULE_1__["namespacedKey"])(this.application.namespace, _Lib__WEBPACK_IMPORTED_MODULE_1__["StorageKeys"].StorageObject), JSON.stringify(newStructure)));

            case 4:
            case "end":
              return _context5.stop();
          }
        }
      }, null, this);
    }
    /**
     * @helper
     * @webdesktop
     */

  }, {
    key: "webDesktopHelperGetPasscodeKeyAndDecryptEncryptedStorage",
    value: function webDesktopHelperGetPasscodeKeyAndDecryptEncryptedStorage(encryptedPayload) {
      var rawPasscodeParams, passcodeParams, decryptedStoragePayload, passcodeKey, response, passcode;
      return regeneratorRuntime.async(function webDesktopHelperGetPasscodeKeyAndDecryptEncryptedStorage$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return regeneratorRuntime.awrap(this.application.deviceInterface.getJsonParsedStorageValue(LEGACY_WEB_PASSCODE_PARAMS_KEY));

            case 2:
              rawPasscodeParams = _context6.sent;
              passcodeParams = this.application.protocolService.createKeyParams(rawPasscodeParams);
              /** Decrypt it with the passcode */

              decryptedStoragePayload = {
                errorDecrypting: true
              };

            case 5:
              if (!decryptedStoragePayload.errorDecrypting) {
                _context6.next = 18;
                break;
              }

              _context6.next = 8;
              return regeneratorRuntime.awrap(this.requestChallengeResponse(_Lib__WEBPACK_IMPORTED_MODULE_1__["Challenges"].LocalPasscode));

            case 8:
              response = _context6.sent;
              passcode = response.value;
              _context6.next = 12;
              return regeneratorRuntime.awrap(this.application.protocolService.computeRootKey({
                password: passcode,
                keyParams: passcodeParams
              }));

            case 12:
              passcodeKey = _context6.sent;
              _context6.next = 15;
              return regeneratorRuntime.awrap(this.application.protocolService.payloadByDecryptingPayload({
                payload: encryptedPayload,
                key: passcodeKey
              }));

            case 15:
              decryptedStoragePayload = _context6.sent;
              _context6.next = 5;
              break;

            case 18:
              return _context6.abrupt("return", {
                decryptedStoragePayload: decryptedStoragePayload,
                key: passcodeKey,
                keyParams: passcodeParams
              });

            case 19:
            case "end":
              return _context6.stop();
          }
        }
      }, null, this);
    }
    /**
     * @helper
     * @webdesktop
     */

  }, {
    key: "webDesktopHelperExtractAndWrapAccountKeysFromValueStore",
    value: function webDesktopHelperExtractAndWrapAccountKeysFromValueStore(passcodeKey, storageValueStore) {
      var version, accountKey, accountKeyPayload, encryptedAccountKey;
      return regeneratorRuntime.async(function webDesktopHelperExtractAndWrapAccountKeysFromValueStore$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              version = storageValueStore.ak ? _Protocol__WEBPACK_IMPORTED_MODULE_4__["ProtocolVersions"].V003 : _Protocol__WEBPACK_IMPORTED_MODULE_4__["ProtocolVersions"].V002;
              _context7.next = 3;
              return regeneratorRuntime.awrap(_Protocol__WEBPACK_IMPORTED_MODULE_4__["SNRootKey"].Create({
                content: {
                  masterKey: storageValueStore.mk,
                  serverPassword: storageValueStore.pw,
                  dataAuthenticationKey: storageValueStore.ak,
                  version: version
                }
              }));

            case 3:
              accountKey = _context7.sent;
              delete storageValueStore.mk;
              delete storageValueStore.pw;
              delete storageValueStore.ak;
              accountKeyPayload = Object(_Payloads__WEBPACK_IMPORTED_MODULE_2__["CreateMaxPayloadFromAnyObject"])({
                object: accountKey
              });

              if (!passcodeKey) {
                _context7.next = 12;
                break;
              }

              _context7.next = 11;
              return regeneratorRuntime.awrap(this.application.protocolService.payloadByEncryptingPayload({
                payload: accountKeyPayload,
                key: passcodeKey,
                intent: _Protocol__WEBPACK_IMPORTED_MODULE_4__["EncryptionIntents"].LocalStorageEncrypted
              }));

            case 11:
              encryptedAccountKey = _context7.sent;

            case 12:
              return _context7.abrupt("return", {
                accountKey: accountKey,
                wrappedKey: encryptedAccountKey
              });

            case 13:
            case "end":
              return _context7.stop();
          }
        }
      }, null, this);
    }
    /**
     * @helper
     * @webdesktop
     * Encrypt storage with account key
     */

  }, {
    key: "webDesktopHelperEncryptStorage",
    value: function webDesktopHelperEncryptStorage(key, decryptedStoragePayload, storageValueStore) {
      var wrapped;
      return regeneratorRuntime.async(function webDesktopHelperEncryptStorage$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              _context8.next = 2;
              return regeneratorRuntime.awrap(this.application.protocolService.payloadByEncryptingPayload({
                key: key,
                intent: _Protocol__WEBPACK_IMPORTED_MODULE_4__["EncryptionIntents"].LocalStoragePreferEncrypted,
                payload: Object(_Payloads__WEBPACK_IMPORTED_MODULE_2__["CopyPayload"])({
                  payload: decryptedStoragePayload,
                  override: {
                    content_type: _Models__WEBPACK_IMPORTED_MODULE_5__["ContentTypes"].EncryptedStorage,
                    content: storageValueStore
                  }
                })
              }));

            case 2:
              wrapped = _context8.sent;
              return _context8.abrupt("return", wrapped);

            case 4:
            case "end":
              return _context8.stop();
          }
        }
      }, null, this);
    }
    /**
     * @private
     * @mobile
     * On mobile legacy structure is mostly similar to new structure,
     * in that the account key is encrypted with the passcode. But mobile did
     * not have encrypted storage, so we simply need to transfer all existing
     * storage values into new managed structure.
       * If no account but passcode only, the only thing we stored on mobile
      * previously was keys.offline.pw and keys.offline.timing in the keychain
      * that we compared against for valid decryption.
      * In the new version, we know a passcode is correct if it can decrypt storage.
      * As part of the migration, we’ll need to request the raw passcode from user,
      * compare it against the keychain offline.pw value, and if correct,
      * migrate storage to new structure, and encrypt with passcode key.
      * 
      * If account only, take the value in the keychain, and rename the values
      * (i.e mk > masterKey).
     */

  }, {
    key: "migrateStorageStructureForMobile",
    value: function migrateStorageStructureForMobile() {
      var _nonwrapped,
          _this2 = this;

      var wrappedAccountKey, rawAccountKeyParams, rawPasscodeParams, rawStructure, keychainValue, passcodeParams, getPasscodeKey, timing, passcodeKey, unwrappedAccountKey, accountKeyContent, defaultVersion, newAccountKey, newWrappedAccountKey, _passcodeKey, payload, wrapped, hasAccount, _defaultVersion, accountKey;

      return regeneratorRuntime.async(function migrateStorageStructureForMobile$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              _context10.next = 2;
              return regeneratorRuntime.awrap(this.application.deviceInterface.getJsonParsedStorageValue(LEGACY_MOBILE_WRAPPED_ROOT_KEY_KEY));

            case 2:
              wrappedAccountKey = _context10.sent;
              _context10.next = 5;
              return regeneratorRuntime.awrap(this.application.deviceInterface.getJsonParsedStorageValue(LEGACY_ALL_ACCOUNT_KEY_PARAMS_KEY));

            case 5:
              rawAccountKeyParams = _context10.sent;
              _context10.next = 8;
              return regeneratorRuntime.awrap(this.application.deviceInterface.getJsonParsedStorageValue(LEGACY_MOBILE_PASSCODE_PARAMS_KEY));

            case 8:
              rawPasscodeParams = _context10.sent;
              rawStructure = {
                nonwrapped: (_nonwrapped = {}, _defineProperty(_nonwrapped, _Lib__WEBPACK_IMPORTED_MODULE_1__["StorageKeys"].WrappedRootKey, wrappedAccountKey), _defineProperty(_nonwrapped, _Lib__WEBPACK_IMPORTED_MODULE_1__["StorageKeys"].RootKeyWrapperKeyParams, rawPasscodeParams), _defineProperty(_nonwrapped, _Lib__WEBPACK_IMPORTED_MODULE_1__["StorageKeys"].RootKeyParams, rawAccountKeyParams), _nonwrapped),
                unwrapped: {}
              };
              _context10.next = 12;
              return regeneratorRuntime.awrap(this.application.deviceInterface.getKeychainValue());

            case 12:
              keychainValue = _context10.sent;

              if (!rawPasscodeParams) {
                _context10.next = 53;
                break;
              }

              passcodeParams = this.application.protocolService.createKeyParams(rawPasscodeParams);

              getPasscodeKey = function getPasscodeKey() {
                var keychainValue, pwHash, passcodeKey, response, passcode;
                return regeneratorRuntime.async(function getPasscodeKey$(_context9) {
                  while (1) {
                    switch (_context9.prev = _context9.next) {
                      case 0:
                        _context9.next = 2;
                        return regeneratorRuntime.awrap(_this2.application.deviceInterface.getKeychainValue());

                      case 2:
                        keychainValue = _context9.sent;

                        /** Validate current passcode by comparing against keychain offline.pw value */
                        pwHash = keychainValue.offline.pw;
                        passcodeKey = {
                          serverPassword: null
                        };

                      case 5:
                        if (!(passcodeKey.serverPassword !== pwHash)) {
                          _context9.next = 15;
                          break;
                        }

                        _context9.next = 8;
                        return regeneratorRuntime.awrap(_this2.requestChallengeResponse(_Lib__WEBPACK_IMPORTED_MODULE_1__["Challenges"].LocalPasscode));

                      case 8:
                        response = _context9.sent;
                        passcode = response.value;
                        _context9.next = 12;
                        return regeneratorRuntime.awrap(_this2.application.protocolService.computeRootKey({
                          password: passcode,
                          keyParams: passcodeParams
                        }));

                      case 12:
                        passcodeKey = _context9.sent;
                        _context9.next = 5;
                        break;

                      case 15:
                        return _context9.abrupt("return", passcodeKey);

                      case 16:
                      case "end":
                        return _context9.stop();
                    }
                  }
                });
              };

              timing = keychainValue.offline.timing;
              rawStructure.unwrapped[_Lib__WEBPACK_IMPORTED_MODULE_1__["StorageKeys"].MobilePasscodeTiming] = timing;

              if (!wrappedAccountKey) {
                _context10.next = 34;
                break;
              }

              _context10.next = 21;
              return regeneratorRuntime.awrap(getPasscodeKey());

            case 21:
              passcodeKey = _context10.sent;
              _context10.next = 24;
              return regeneratorRuntime.awrap(this.application.protocolService.payloadByDecryptingPayload({
                payload: Object(_Payloads__WEBPACK_IMPORTED_MODULE_2__["CreateMaxPayloadFromAnyObject"])({
                  object: wrappedAccountKey
                }),
                key: passcodeKey
              }));

            case 24:
              unwrappedAccountKey = _context10.sent;
              accountKeyContent = unwrappedAccountKey.content.accountKeys;
              defaultVersion = !Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(accountKeyContent.ak) ? _Protocol__WEBPACK_IMPORTED_MODULE_4__["ProtocolVersions"].V003 : _Protocol__WEBPACK_IMPORTED_MODULE_4__["ProtocolVersions"].V002;
              newAccountKey = Object(_Payloads__WEBPACK_IMPORTED_MODULE_2__["CopyPayload"])({
                payload: unwrappedAccountKey,
                override: {
                  content: {
                    masterKey: accountKeyContent.mk,
                    serverPassword: accountKeyContent.pw,
                    dataAuthenticationKey: accountKeyContent.ak,
                    version: accountKeyContent.version || defaultVersion,
                    accountKeys: null
                  }
                }
              });
              _context10.next = 30;
              return regeneratorRuntime.awrap(this.application.protocolService.payloadByEncryptingPayload({
                payload: newAccountKey,
                key: passcodeKey,
                intent: _Protocol__WEBPACK_IMPORTED_MODULE_4__["EncryptionIntents"].LocalStoragePreferEncrypted
              }));

            case 30:
              newWrappedAccountKey = _context10.sent;
              rawStructure.nonwrapped[_Lib__WEBPACK_IMPORTED_MODULE_1__["StorageKeys"].WrappedRootKey] = newWrappedAccountKey;
              _context10.next = 51;
              break;

            case 34:
              if (wrappedAccountKey) {
                _context10.next = 51;
                break;
              }

              _context10.next = 37;
              return regeneratorRuntime.awrap(getPasscodeKey());

            case 37:
              _passcodeKey = _context10.sent;
              _context10.t0 = _Payloads__WEBPACK_IMPORTED_MODULE_2__["CreateMaxPayloadFromAnyObject"];
              _context10.next = 41;
              return regeneratorRuntime.awrap(_Lib_uuid__WEBPACK_IMPORTED_MODULE_7__["Uuid"].GenerateUuid());

            case 41:
              _context10.t1 = _context10.sent;
              _context10.t2 = rawStructure.unwrapped;
              _context10.t3 = _Models__WEBPACK_IMPORTED_MODULE_5__["ContentTypes"].EncryptedStorage;
              _context10.t4 = {
                uuid: _context10.t1,
                content: _context10.t2,
                content_type: _context10.t3
              };
              _context10.t5 = {
                object: _context10.t4
              };
              payload = (0, _context10.t0)(_context10.t5);
              _context10.next = 49;
              return regeneratorRuntime.awrap(this.application.protocolService.payloadByEncryptingPayload({
                payload: payload,
                key: _passcodeKey,
                intent: _Protocol__WEBPACK_IMPORTED_MODULE_4__["EncryptionIntents"].LocalStoragePreferEncrypted
              }));

            case 49:
              wrapped = _context10.sent;
              rawStructure.wrapped = wrapped;

            case 51:
              _context10.next = 61;
              break;

            case 53:
              /** No passcode, potentially account. Migrate keychain property keys. */
              hasAccount = keychainValue && keychainValue.mk;

              if (!hasAccount) {
                _context10.next = 61;
                break;
              }

              _defaultVersion = !Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(keychainValue.ak) ? _Protocol__WEBPACK_IMPORTED_MODULE_4__["ProtocolVersions"].V003 : _Protocol__WEBPACK_IMPORTED_MODULE_4__["ProtocolVersions"].V002;
              _context10.next = 58;
              return regeneratorRuntime.awrap(_Protocol__WEBPACK_IMPORTED_MODULE_4__["SNRootKey"].Create({
                content: {
                  masterKey: keychainValue.mk,
                  serverPassword: keychainValue.pw,
                  dataAuthenticationKey: keychainValue.ak,
                  version: keychainValue.version || _defaultVersion
                }
              }));

            case 58:
              accountKey = _context10.sent;
              _context10.next = 61;
              return regeneratorRuntime.awrap(this.application.deviceInterface.setKeychainValue(accountKey.getPersistableValue()));

            case 61:
              _context10.next = 63;
              return regeneratorRuntime.awrap(this.allPlatformHelperSetStorageStructure(rawStructure));

            case 63:
            case "end":
              return _context10.stop();
          }
        }
      }, null, this);
    }
    /**
     * @private
     * @allplatform
     * Migrate all previously independently stored storage keys into new
     * managed approach. These keys are ones that do not need to be renamed.
     */

  }, {
    key: "migrateArbitraryRawStorageToManagedStorageAllPlatforms",
    value: function migrateArbitraryRawStorageToManagedStorageAllPlatforms() {
      var allKeyValues, keysToExclude, tryJsonParse, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, keyValuePair, key, value, newValue;

      return regeneratorRuntime.async(function migrateArbitraryRawStorageToManagedStorageAllPlatforms$(_context11) {
        while (1) {
          switch (_context11.prev = _context11.next) {
            case 0:
              _context11.next = 2;
              return regeneratorRuntime.awrap(this.application.deviceInterface.getAllRawStorageKeyValues());

            case 2:
              allKeyValues = _context11.sent;
              keysToExclude = [Object(_Lib__WEBPACK_IMPORTED_MODULE_1__["namespacedKey"])(this.application.namespace, _Lib__WEBPACK_IMPORTED_MODULE_1__["StorageKeys"].StorageObject), LEGACY_WEB_ENCRYPTED_STORAGE_KEY, LEGACY_WEB_PASSCODE_PARAMS_KEY, LEGACY_MOBILE_PASSCODE_PARAMS_KEY];

              tryJsonParse = function tryJsonParse(value) {
                try {
                  return JSON.parse(value);
                } catch (e) {
                  return value;
                }
              };

              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context11.prev = 8;
              _iterator = allKeyValues[Symbol.iterator]();

            case 10:
              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                _context11.next = 23;
                break;
              }

              keyValuePair = _step.value;
              key = keyValuePair.key;
              value = keyValuePair.value;

              if (!keysToExclude.includes(key)) {
                _context11.next = 16;
                break;
              }

              return _context11.abrupt("continue", 20);

            case 16:
              if (Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(value)) {
                _context11.next = 20;
                break;
              }

              /**
              * Raw values should always have been json stringified.
              * New values should always be objects/parsed.
              */
              newValue = tryJsonParse(value);
              _context11.next = 20;
              return regeneratorRuntime.awrap(this.application.storageService.setValue(key, newValue));

            case 20:
              _iteratorNormalCompletion = true;
              _context11.next = 10;
              break;

            case 23:
              _context11.next = 29;
              break;

            case 25:
              _context11.prev = 25;
              _context11.t0 = _context11["catch"](8);
              _didIteratorError = true;
              _iteratorError = _context11.t0;

            case 29:
              _context11.prev = 29;
              _context11.prev = 30;

              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }

            case 32:
              _context11.prev = 32;

              if (!_didIteratorError) {
                _context11.next = 35;
                break;
              }

              throw _iteratorError;

            case 35:
              return _context11.finish(32);

            case 36:
              return _context11.finish(29);

            case 37:
            case "end":
              return _context11.stop();
          }
        }
      }, null, this, [[8, 25, 29, 37], [30,, 32, 36]]);
    }
    /**
     * @private
     * @allplatform
     * Create new default SNItemsKey from root key.
     * Otherwise, when data is loaded, we won't be able to decrypt it
     * without existence of an item key. This will mean that if this migration
     * is run on two different platforms for the same user, they will create
     * two new items keys. Which one they use to decrypt past items and encrypt
     * future items doesn't really matter.
     */

  }, {
    key: "createDefaultItemsKeyForAllPlatforms",
    value: function createDefaultItemsKeyForAllPlatforms() {
      var rootKey, rootKeyParams, itemsKey;
      return regeneratorRuntime.async(function createDefaultItemsKeyForAllPlatforms$(_context12) {
        while (1) {
          switch (_context12.prev = _context12.next) {
            case 0:
              _context12.next = 2;
              return regeneratorRuntime.awrap(this.application.keyManager.getRootKey());

            case 2:
              rootKey = _context12.sent;

              if (!rootKey) {
                _context12.next = 14;
                break;
              }

              _context12.next = 6;
              return regeneratorRuntime.awrap(this.application.keyManager.getRootKeyParams());

            case 6:
              rootKeyParams = _context12.sent;
              itemsKey = _Models__WEBPACK_IMPORTED_MODULE_5__["SNItemsKey"].FromRaw({
                itemsKey: rootKey.masterKey,
                dataAuthenticationKey: rootKey.dataAuthenticationKey,
                version: rootKeyParams.version
              });
              _context12.next = 10;
              return regeneratorRuntime.awrap(itemsKey.initUUID());

            case 10:
              _context12.next = 12;
              return regeneratorRuntime.awrap(this.application.modelManager.mapItem({
                item: itemsKey
              }));

            case 12:
              _context12.next = 14;
              return regeneratorRuntime.awrap(this.application.modelManager.setItemDirty(itemsKey));

            case 14:
            case "end":
              return _context12.stop();
          }
        }
      }, null, this);
    }
  }], [{
    key: "timestamp",
    value: function timestamp() {
      return new Date('2020-01-15').getTime();
    }
  }]);

  return Migration20200115;
}(_Lib_migration_migrations_migration__WEBPACK_IMPORTED_MODULE_0__["Migration"]);

/***/ }),

/***/ "./lib/migration/migrations/index.js":
/*!*******************************************!*\
  !*** ./lib/migration/migrations/index.js ***!
  \*******************************************/
/*! exports provided: Migration20200115 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _2020_01_15__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./2020-01-15 */ "./lib/migration/migrations/2020-01-15.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Migration20200115", function() { return _2020_01_15__WEBPACK_IMPORTED_MODULE_0__["Migration20200115"]; });



/***/ }),

/***/ "./lib/migration/migrations/migration.js":
/*!***********************************************!*\
  !*** ./lib/migration/migrations/migration.js ***!
  \***********************************************/
/*! exports provided: Migration */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Migration", function() { return Migration; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Migration =
/*#__PURE__*/
function () {
  function Migration(_ref) {
    var application = _ref.application,
        challengeResponder = _ref.challengeResponder;

    _classCallCheck(this, Migration);

    this.application = application;
    this.challengeResponder = challengeResponder;
    this.stageHandlers = {};
    this.registerStageHandlers();
  }
  /** @public */


  _createClass(Migration, [{
    key: "registerStageHandlers",

    /** @protected */
    value: function registerStageHandlers() {
      throw 'Must override Migration.registerStageHandlers';
    }
    /** @protected */

  }, {
    key: "registerStageHandler",
    value: function registerStageHandler(stage, handler) {
      this.stageHandlers[stage] = handler;
    }
    /** @protected */

  }, {
    key: "markDone",
    value: function markDone() {
      this.done = true;
      this.onDoneHandler && this.onDoneHandler();
      this.onDoneHandler = null;
    }
  }, {
    key: "onDone",
    value: function onDone(callback) {
      this.onDoneHandler = callback;
    }
    /** @public */

  }, {
    key: "handleStage",
    value: function handleStage(stage) {
      var handler;
      return regeneratorRuntime.async(function handleStage$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              handler = this.stageHandlers[stage];

              if (!handler) {
                _context.next = 4;
                break;
              }

              _context.next = 4;
              return regeneratorRuntime.awrap(handler());

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
    /** @protected */

  }, {
    key: "requestChallengeResponse",
    value: function requestChallengeResponse(challenge) {
      return regeneratorRuntime.async(function requestChallengeResponse$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              return _context2.abrupt("return", this.challengeResponder(challenge));

            case 1:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }], [{
    key: "timestamp",
    value: function timestamp() {
      throw 'Must override Migration.timestamp';
    }
  }]);

  return Migration;
}();

/***/ }),

/***/ "./lib/models/app/action.js":
/*!**********************************!*\
  !*** ./lib/models/app/action.js ***!
  \**********************************/
/*! exports provided: Action */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Action", function() { return Action; });
/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/merge */ "./node_modules/lodash/merge.js");
/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_merge__WEBPACK_IMPORTED_MODULE_0__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }


var Action = function Action(json) {
  _classCallCheck(this, Action);

  lodash_merge__WEBPACK_IMPORTED_MODULE_0___default()(this, json);
  this.running = false;
  this.error = false;

  if (this.lastExecuted) {
    this.lastExecuted = new Date(this.lastExecuted);
  }
};

/***/ }),

/***/ "./lib/models/app/component.js":
/*!*************************************!*\
  !*** ./lib/models/app/component.js ***!
  \*************************************/
/*! exports provided: SNComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNComponent", function() { return SNComponent; });
/* harmony import */ var _Models_core_item__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Models/core/item */ "./lib/models/core/item.js");
/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
/* harmony import */ var _Payloads__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads */ "./lib/protocol/payloads/index.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }




var COMPONENT_AREA_EDITOR = 'editor-editor';
var COMPONENT_AREA_THEMES = 'themes';
var SNComponent =
/*#__PURE__*/
function (_SFItem) {
  _inherits(SNComponent, _SFItem);

  function SNComponent(payload) {
    var _this;

    _classCallCheck(this, SNComponent);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNComponent).call(this, payload));

    if (!_this.componentData) {
      _this.componentData = {};
    }

    if (!_this.disassociatedItemIds) {
      _this.disassociatedItemIds = [];
    }

    if (!_this.associatedItemIds) {
      _this.associatedItemIds = [];
    }

    return _this;
  }

  _createClass(SNComponent, [{
    key: "mapContentToLocalProperties",
    value: function mapContentToLocalProperties(content) {
      _get(_getPrototypeOf(SNComponent.prototype), "mapContentToLocalProperties", this).call(this, content);
      /**
      * @legacy
      * We don't want to set the url directly, as we'd like to phase it out.
      * If the content.url exists, we'll transfer it to legacy_url. We'll only
      * need to set this if content.hosted_url is blank, otherwise,
      * hosted_url is the url replacement.
      */


      if (!content.hosted_url) {
        this.legacy_url = content.url;
      }

      this.local_url = content.local_url;
      this.hosted_url = content.hosted_url || content.url;
      this.offlineOnly = content.offlineOnly;
      this.name = content.name;
      this.autoupdateDisabled = content.autoupdateDisabled;
      this.package_info = content.package_info;
      this.area = content.area;
      this.active = content.active;
      this.permissions = content.permissions;

      if (!this.permissions) {
        this.permissions = [];
      }

      if (content.valid_until) {
        this.valid_until = new Date(content.valid_until);
      }
      /** Custom data that a component can store in itself */


      this.componentData = content.componentData || {};
      /** Items that have requested a component to be disabled in its context */

      this.disassociatedItemIds = content.disassociatedItemIds || [];
      /** Items that have requested a component to be enabled in its context */

      this.associatedItemIds = content.associatedItemIds || [];
    }
  }, {
    key: "handleDeletedContent",
    value: function handleDeletedContent() {
      _get(_getPrototypeOf(SNComponent.prototype), "handleDeletedContent", this).call(this);

      this.active = false;
    }
  }, {
    key: "structureParams",
    value: function structureParams() {
      var params = {
        legacy_url: this.legacy_url,
        hosted_url: this.hosted_url,
        local_url: this.local_url,
        valid_until: this.valid_until,
        offlineOnly: this.offlineOnly,
        name: this.name,
        area: this.area,
        package_info: this.package_info,
        permissions: this.permissions,
        active: this.active,
        autoupdateDisabled: this.autoupdateDisabled,
        componentData: this.componentData,
        disassociatedItemIds: this.disassociatedItemIds,
        associatedItemIds: this.associatedItemIds
      };

      var superParams = _get(_getPrototypeOf(SNComponent.prototype), "structureParams", this).call(this);

      Object.assign(superParams, params);
      return superParams;
    } // eslint-disable-next-line camelcase

  }, {
    key: "strategyWhenConflictingWithItem",

    /** Do not duplicate components under most circumstances. Always keep original */
    value: function strategyWhenConflictingWithItem(_ref) {
      var item = _ref.item;

      if (this.errorDecrypting) {
        return _get(_getPrototypeOf(SNComponent.prototype), "strategyWhenConflictingWithItem", this).call(this, {
          item: item
        });
      }

      return _Payloads__WEBPACK_IMPORTED_MODULE_2__["ConflictStrategies"].KeepLeft;
    }
  }, {
    key: "isEditor",
    value: function isEditor() {
      return this.area === COMPONENT_AREA_EDITOR;
    }
  }, {
    key: "isTheme",
    value: function isTheme() {
      return this.content_type === _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].Theme || this.area === COMPONENT_AREA_THEMES;
    }
  }, {
    key: "isDefaultEditor",
    value: function isDefaultEditor() {
      return this.getAppDataItem('defaultEditor') === true;
    }
  }, {
    key: "setLastSize",
    value: function setLastSize(size) {
      this.setAppDataItem('lastSize', size);
    }
  }, {
    key: "getLastSize",
    value: function getLastSize() {
      return this.getAppDataItem('lastSize');
    }
  }, {
    key: "acceptsThemes",
    value: function acceptsThemes() {
      if (this.content.package_info) {
        return this.content.package_info.acceptsThemes === true;
      }

      return true;
    }
    /**
     * The key used to look up data that this component may have saved to an item.
     * This data will be stored on the item using this key.
     */

  }, {
    key: "getClientDataKey",
    value: function getClientDataKey() {
      if (this.legacy_url) {
        return this.legacy_url;
      } else {
        return this.uuid;
      }
    }
  }, {
    key: "hasValidHostedUrl",
    value: function hasValidHostedUrl() {
      return this.hosted_url || this.legacy_url;
    }
  }, {
    key: "contentKeysToIgnoreWhenCheckingEquality",
    value: function contentKeysToIgnoreWhenCheckingEquality() {
      return ['active', 'disassociatedItemIds', 'associatedItemIds'].concat(_get(_getPrototypeOf(SNComponent.prototype), "contentKeysToIgnoreWhenCheckingEquality", this).call(this));
    }
    /**
     * An associative component depends on being explicitly activated for a
     * given item, compared to a dissaciative component, which is enabled by
     * default in areas unrelated to a certain item.
     */

  }, {
    key: "isAssociative",
    value: function isAssociative() {
      return SNComponent.associativeAreas().includes(this.area);
    }
  }, {
    key: "associateWithItem",
    value: function associateWithItem(item) {
      this.associatedItemIds.push(item.uuid);
    }
  }, {
    key: "isExplicitlyEnabledForItem",
    value: function isExplicitlyEnabledForItem(item) {
      return this.associatedItemIds.indexOf(item.uuid) !== -1;
    }
  }, {
    key: "isExplicitlyDisabledForItem",
    value: function isExplicitlyDisabledForItem(item) {
      return this.disassociatedItemIds.indexOf(item.uuid) !== -1;
    }
  }, {
    key: "content_type",
    get: function get() {
      return _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].Component;
    }
  }], [{
    key: "associativeAreas",
    value: function associativeAreas() {
      return [COMPONENT_AREA_EDITOR];
    }
  }]);

  return SNComponent;
}(_Models_core_item__WEBPACK_IMPORTED_MODULE_0__["SFItem"]);

/***/ }),

/***/ "./lib/models/app/editor.js":
/*!**********************************!*\
  !*** ./lib/models/app/editor.js ***!
  \**********************************/
/*! exports provided: SNEditor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNEditor", function() { return SNEditor; });
/* harmony import */ var lodash_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/map */ "./node_modules/lodash/map.js");
/* harmony import */ var lodash_map__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_map__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/find */ "./node_modules/lodash/find.js");
/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_find__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_pull__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/pull */ "./node_modules/lodash/pull.js");
/* harmony import */ var lodash_pull__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_pull__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash_remove__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/remove */ "./node_modules/lodash/remove.js");
/* harmony import */ var lodash_remove__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_remove__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _Models_core_item__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Models/core/item */ "./lib/models/core/item.js");
/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }







/**
 * @legacy
 * Editor objects are depracated in favor of SNComponent objects
 */

var SNEditor =
/*#__PURE__*/
function (_SFItem) {
  _inherits(SNEditor, _SFItem);

  function SNEditor(payload) {
    var _this;

    _classCallCheck(this, SNEditor);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNEditor).call(this, payload));

    if (!_this.notes) {
      _this.notes = [];
    }

    if (!_this.data) {
      _this.data = {};
    }

    return _this;
  }

  _createClass(SNEditor, [{
    key: "mapContentToLocalProperties",
    value: function mapContentToLocalProperties(content) {
      _get(_getPrototypeOf(SNEditor.prototype), "mapContentToLocalProperties", this).call(this, content);

      this.url = content.url;
      this.name = content.name;
      this.data = content.data || {};
      this.default = content.default;
      this.systemEditor = content.systemEditor;
    }
  }, {
    key: "structureParams",
    value: function structureParams() {
      var params = {
        url: this.url,
        name: this.name,
        data: this.data,
        default: this.default,
        systemEditor: this.systemEditor
      };

      var superParams = _get(_getPrototypeOf(SNEditor.prototype), "structureParams", this).call(this);

      Object.assign(superParams, params);
      return superParams;
    }
  }, {
    key: "referenceParams",
    value: function referenceParams() {
      var references = lodash_map__WEBPACK_IMPORTED_MODULE_0___default()(this.notes, function (note) {
        return {
          uuid: note.uuid,
          content_type: note.content_type
        };
      });
      return references;
    }
  }, {
    key: "addItemAsRelationship",
    value: function addItemAsRelationship(item) {
      if (item.content_type === _Models_content_types__WEBPACK_IMPORTED_MODULE_5__["ContentTypes"].Note) {
        if (!lodash_find__WEBPACK_IMPORTED_MODULE_1___default()(this.notes, item)) {
          this.notes.push(item);
        }
      }

      _get(_getPrototypeOf(SNEditor.prototype), "addItemAsRelationship", this).call(this, item);
    }
  }, {
    key: "removeItemAsRelationship",
    value: function removeItemAsRelationship(item) {
      if (item.content_type === _Models_content_types__WEBPACK_IMPORTED_MODULE_5__["ContentTypes"].Note) {
        lodash_pull__WEBPACK_IMPORTED_MODULE_2___default()(this.notes, item);
      }

      _get(_getPrototypeOf(SNEditor.prototype), "removeItemAsRelationship", this).call(this, item);
    }
  }, {
    key: "removeAndDirtyAllRelationships",
    value: function removeAndDirtyAllRelationships() {
      _get(_getPrototypeOf(SNEditor.prototype), "removeAndDirtyAllRelationships", this).call(this);

      this.notes = [];
    }
  }, {
    key: "removeReferencesNotPresentIn",
    value: function removeReferencesNotPresentIn(references) {
      var _this2 = this;

      _get(_getPrototypeOf(SNEditor.prototype), "removeReferencesNotPresentIn", this).call(this, references);

      var uuids = references.map(function (ref) {
        return ref.uuid;
      });
      this.notes.forEach(function (note) {
        if (!uuids.includes(note.uuid)) {
          lodash_remove__WEBPACK_IMPORTED_MODULE_3___default()(_this2.notes, {
            uuid: note.uuid
          });
        }
      });
    } // eslint-disable-next-line camelcase

  }, {
    key: "setData",
    value: function setData(key, value) {
      var dataHasChanged = JSON.stringify(this.data[key]) !== JSON.stringify(value);

      if (dataHasChanged) {
        this.data[key] = value;
        return true;
      }

      return false;
    }
  }, {
    key: "dataForKey",
    value: function dataForKey(key) {
      return this.data[key] || {};
    }
  }, {
    key: "content_type",
    get: function get() {
      return _Models_content_types__WEBPACK_IMPORTED_MODULE_5__["ContentTypes"].Editor;
    }
  }]);

  return SNEditor;
}(_Models_core_item__WEBPACK_IMPORTED_MODULE_4__["SFItem"]);

/***/ }),

/***/ "./lib/models/app/extension.js":
/*!*************************************!*\
  !*** ./lib/models/app/extension.js ***!
  \*************************************/
/*! exports provided: SNActionsExtension */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNActionsExtension", function() { return SNActionsExtension; });
/* harmony import */ var lodash_omit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/omit */ "./node_modules/lodash/omit.js");
/* harmony import */ var lodash_omit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_omit__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Models_core_item__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Models/core/item */ "./lib/models/core/item.js");
/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
/* harmony import */ var _action__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./action */ "./lib/models/app/action.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }





var SNActionsExtension =
/*#__PURE__*/
function (_SFItem) {
  _inherits(SNActionsExtension, _SFItem);

  function SNActionsExtension(json) {
    var _this;

    _classCallCheck(this, SNActionsExtension);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNActionsExtension).call(this, json));

    if (json.actions) {
      _this.actions = json.actions.map(function (action) {
        return new _action__WEBPACK_IMPORTED_MODULE_3__["Action"](action);
      });
    }

    if (!_this.actions) {
      _this.actions = [];
    }

    return _this;
  }

  _createClass(SNActionsExtension, [{
    key: "actionsWithContextForItem",
    value: function actionsWithContextForItem(item) {
      return this.actions.filter(function (action) {
        return action.context === item.content_type || action.context === 'Item';
      });
    }
  }, {
    key: "mapContentToLocalProperties",
    value: function mapContentToLocalProperties(content) {
      _get(_getPrototypeOf(SNActionsExtension.prototype), "mapContentToLocalProperties", this).call(this, content);

      this.description = content.description;
      this.url = content.url;
      this.name = content.name;
      this.package_info = content.package_info;
      this.supported_types = content.supported_types;

      if (content.actions) {
        this.actions = content.actions.map(function (action) {
          return new _action__WEBPACK_IMPORTED_MODULE_3__["Action"](action);
        });
      }
    } // eslint-disable-next-line camelcase

  }, {
    key: "structureParams",
    value: function structureParams() {
      var params = {
        name: this.name,
        url: this.url,
        package_info: this.package_info,
        description: this.description,
        actions: this.actions.map(function (a) {
          return lodash_omit__WEBPACK_IMPORTED_MODULE_0___default()(a, ['subrows', 'subactions']);
        }),
        supported_types: this.supported_types
      };

      var superParams = _get(_getPrototypeOf(SNActionsExtension.prototype), "structureParams", this).call(this);

      Object.assign(superParams, params);
      return superParams;
    }
  }, {
    key: "content_type",
    get: function get() {
      return _Models_content_types__WEBPACK_IMPORTED_MODULE_2__["ContentTypes"].ActionsExtension;
    }
  }]);

  return SNActionsExtension;
}(_Models_core_item__WEBPACK_IMPORTED_MODULE_1__["SFItem"]);

/***/ }),

/***/ "./lib/models/app/items_key.js":
/*!*************************************!*\
  !*** ./lib/models/app/items_key.js ***!
  \*************************************/
/*! exports provided: SNItemsKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNItemsKey", function() { return SNItemsKey; });
/* harmony import */ var _Models_core_item__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Models/core/item */ "./lib/models/core/item.js");
/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
/* harmony import */ var _Payloads__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads */ "./lib/protocol/payloads/index.js");
/* harmony import */ var _Protocol__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Protocol */ "./lib/protocol/index.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }





var SNItemsKey =
/*#__PURE__*/
function (_SFItem) {
  _inherits(SNItemsKey, _SFItem);

  function SNItemsKey() {
    _classCallCheck(this, SNItemsKey);

    return _possibleConstructorReturn(this, _getPrototypeOf(SNItemsKey).apply(this, arguments));
  }

  _createClass(SNItemsKey, [{
    key: "strategyWhenConflictingWithItem",

    /** Do not duplicate items keys. Always keep original */
    value: function strategyWhenConflictingWithItem(_ref) {
      var item = _ref.item;

      if (this.errorDecrypting) {
        return _get(_getPrototypeOf(SNItemsKey.prototype), "strategyWhenConflictingWithItem", this).call(this, {
          item: item
        });
      }

      return _Payloads__WEBPACK_IMPORTED_MODULE_2__["ConflictStrategies"].KeepLeft;
    }
  }, {
    key: "content_type",
    // eslint-disable-next-line camelcase
    get: function get() {
      return _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].ItemsKey;
    }
  }, {
    key: "version",
    get: function get() {
      return this.content.version;
    }
  }, {
    key: "isItemsKey",
    get: function get() {
      return true;
    }
  }, {
    key: "isDefault",
    get: function get() {
      return this.content.isDefault;
    }
  }, {
    key: "itemsKey",
    get: function get() {
      return this.content.itemsKey;
    }
  }, {
    key: "dataAuthenticationKey",
    get: function get() {
      if (this.version === _Protocol__WEBPACK_IMPORTED_MODULE_3__["ProtocolVersions"].V004) {
        throw 'Attempting to access legacy data authentication key.';
      }

      return this.content.dataAuthenticationKey;
    }
  }], [{
    key: "FromRaw",

    /**
     * Because this is a traditional SFItem, the constructor expects an object
     * with a .content property. FromRaw allows you to send in an unwrapped
     * raw key hash instead.
     */
    value: function FromRaw(key) {
      var payload = Object(_Payloads__WEBPACK_IMPORTED_MODULE_2__["CreateMaxPayloadFromAnyObject"])({
        object: {
          content: key
        }
      });
      return new SNItemsKey(payload);
    }
  }]);

  return SNItemsKey;
}(_Models_core_item__WEBPACK_IMPORTED_MODULE_0__["SFItem"]);

/***/ }),

/***/ "./lib/models/app/note.js":
/*!********************************!*\
  !*** ./lib/models/app/note.js ***!
  \********************************/
/*! exports provided: SNNote */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNNote", function() { return SNNote; });
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Models_core_item__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Models/core/item */ "./lib/models/core/item.js");
/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
/* harmony import */ var _Models_app_tag__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Models/app/tag */ "./lib/models/app/tag.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }





var SNNote =
/*#__PURE__*/
function (_SFItem) {
  _inherits(SNNote, _SFItem);

  function SNNote(payload) {
    var _this;

    _classCallCheck(this, SNNote);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNNote).call(this, payload));

    if (!_this.text) {
      /**
      * Some external editors can't handle a null value for text.
      * Notes created on mobile with no text have a null value for it,
      * so we'll just set a default here.
      */
      _this.text = '';
    }

    if (!_this.tags) {
      _this.tags = [];
    }

    return _this;
  } // eslint-disable-next-line camelcase


  _createClass(SNNote, [{
    key: "mapContentToLocalProperties",
    value: function mapContentToLocalProperties(content) {
      _get(_getPrototypeOf(SNNote.prototype), "mapContentToLocalProperties", this).call(this, content);

      this.title = content.title;
      this.text = content.text;
    }
  }, {
    key: "structureParams",
    value: function structureParams() {
      var params = {
        title: this.title,
        text: this.text
      };

      var superParams = _get(_getPrototypeOf(SNNote.prototype), "structureParams", this).call(this);

      Object.assign(superParams, params);
      return superParams;
    }
  }, {
    key: "addItemAsRelationship",
    value: function addItemAsRelationship(item) {
      /**
       * @legacy
       * In v2, note/tag relationships were bidirectional, however in some cases there
       * may be broken links such that a note has references to a tag and not vice versa.
       * Now, only tags contain references to notes. For old notes that may have references to tags,
       * we want to transfer them over to the tag.
       */
      if (item.content_type === _Models_content_types__WEBPACK_IMPORTED_MODULE_2__["ContentTypes"].Tag) {
        item.addItemAsRelationship(this);
      }

      _get(_getPrototypeOf(SNNote.prototype), "addItemAsRelationship", this).call(this, item);
    }
  }, {
    key: "setIsBeingReferencedBy",
    value: function setIsBeingReferencedBy(item) {
      if (item.content_type === _Models_content_types__WEBPACK_IMPORTED_MODULE_2__["ContentTypes"].Tag) {
        if (!Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["findInArray"])(this.tags, 'uuid', item.uuid)) {
          this.tags.push(item);
        }
      }

      _get(_getPrototypeOf(SNNote.prototype), "setIsBeingReferencedBy", this).call(this, item);

      this.clearSavedTagsString();
    }
  }, {
    key: "setIsNoLongerReferencedBy",
    value: function setIsNoLongerReferencedBy(item) {
      _get(_getPrototypeOf(SNNote.prototype), "setIsNoLongerReferencedBy", this).call(this, item);

      if (item.content_type === _Models_content_types__WEBPACK_IMPORTED_MODULE_2__["ContentTypes"].Tag) {
        Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["removeFromArray"])(this.tags, item);
      }
      /**
       * @legacy Two-way note-tag relationships need to be handled explicitly.
       */


      if (item.content_type === _Models_content_types__WEBPACK_IMPORTED_MODULE_2__["ContentTypes"].Tag && this.hasRelationshipWithItem(item)) {
        this.removeReferenceWithUuid(item.uuid);
        /** @todo Items shouldn't mark themselves dirty. */

        /** @legacy this.setDirty(true); */
      }

      this.clearSavedTagsString();
    }
  }, {
    key: "tagDidCompleteMapping",
    value: function tagDidCompleteMapping(tag) {
      this.clearSavedTagsString();
    }
  }, {
    key: "safeText",
    value: function safeText() {
      return this.text || '';
    }
  }, {
    key: "safeTitle",
    value: function safeTitle() {
      return this.title || '';
    }
  }, {
    key: "clearSavedTagsString",
    value: function clearSavedTagsString() {
      this.savedTagsString = null;
    }
  }, {
    key: "tagsString",
    value: function tagsString() {
      this.savedTagsString = _Models_app_tag__WEBPACK_IMPORTED_MODULE_3__["SNTag"].arrayToDisplayString(this.tags);
      return this.savedTagsString;
    }
  }, {
    key: "content_type",
    get: function get() {
      return _Models_content_types__WEBPACK_IMPORTED_MODULE_2__["ContentTypes"].Note;
    }
  }], [{
    key: "filterDummyNotes",
    value: function filterDummyNotes(notes) {
      return notes.filter(function (note) {
        return !note.dummy;
      });
    }
  }]);

  return SNNote;
}(_Models_core_item__WEBPACK_IMPORTED_MODULE_1__["SFItem"]);

/***/ }),

/***/ "./lib/models/app/smartTag.js":
/*!************************************!*\
  !*** ./lib/models/app/smartTag.js ***!
  \************************************/
/*! exports provided: SNSmartTag */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNSmartTag", function() { return SNSmartTag; });
/* harmony import */ var _Models_app_tag__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Models/app/tag */ "./lib/models/app/tag.js");
/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
/* harmony import */ var _Models_core_predicate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Models/core/predicate */ "./lib/models/core/predicate.js");
/* harmony import */ var _Payloads_generator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads/generator */ "./lib/protocol/payloads/generator.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }





var SYSTEM_TAG_ALL_NOTES = "all-notes";
var SYSTEM_TAG_ARCHIVED_NOTES = "archived-notes";
var SYSTEM_TAG_TRASHED_NOTES = "trashed-notes";
var SNSmartTag =
/*#__PURE__*/
function (_SNTag) {
  _inherits(SNSmartTag, _SNTag);

  function SNSmartTag(payload) {
    var _this;

    _classCallCheck(this, SNSmartTag);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNSmartTag).call(this, payload));
    _this.content_type = _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].SmartTag;
    return _this;
  }

  _createClass(SNSmartTag, null, [{
    key: "systemSmartTags",
    value: function systemSmartTags() {
      var allNotes = Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_3__["CreateMaxPayloadFromAnyObject"])({
        object: {
          uuid: SYSTEM_TAG_ALL_NOTES,
          dummy: true,
          content: {
            title: "All notes",
            isSystemTag: true,
            isAllTag: true,
            predicate: new _Models_core_predicate__WEBPACK_IMPORTED_MODULE_2__["SFPredicate"].FromArray(['content_type', '=', _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].Note])
          }
        }
      });
      var archived = Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_3__["CreateMaxPayloadFromAnyObject"])({
        object: {
          uuid: SYSTEM_TAG_ARCHIVED_NOTES,
          dummy: true,
          content: {
            title: "Archived",
            isSystemTag: true,
            isArchiveTag: true,
            predicate: new _Models_core_predicate__WEBPACK_IMPORTED_MODULE_2__["SFPredicate"].FromArray(['archived', '=', true])
          }
        }
      });
      var trash = Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_3__["CreateMaxPayloadFromAnyObject"])({
        object: {
          uuid: SYSTEM_TAG_TRASHED_NOTES,
          dummy: true,
          content: {
            title: "Trash",
            isSystemTag: true,
            isTrashTag: true,
            predicate: new _Models_core_predicate__WEBPACK_IMPORTED_MODULE_2__["SFPredicate"].FromArray(['content.trashed', '=', true])
          }
        }
      });
      return [new SNSmartTag(allNotes), new SNSmartTag(archived), new SNSmartTag(trash)];
    }
  }]);

  return SNSmartTag;
}(_Models_app_tag__WEBPACK_IMPORTED_MODULE_0__["SNTag"]);

/***/ }),

/***/ "./lib/models/app/tag.js":
/*!*******************************!*\
  !*** ./lib/models/app/tag.js ***!
  \*******************************/
/*! exports provided: SNTag */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNTag", function() { return SNTag; });
/* harmony import */ var lodash_remove__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/remove */ "./node_modules/lodash/remove.js");
/* harmony import */ var lodash_remove__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_remove__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Models_core_item__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Models/core/item */ "./lib/models/core/item.js");
/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }





var SNTag =
/*#__PURE__*/
function (_SFItem) {
  _inherits(SNTag, _SFItem);

  function SNTag(payload) {
    var _this;

    _classCallCheck(this, SNTag);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNTag).call(this, payload));

    if (!_this.content_type) {
      _this.content_type = _Models_content_types__WEBPACK_IMPORTED_MODULE_3__["ContentTypes"].Tag;
    }

    if (!_this.notes) {
      _this.notes = [];
    }

    return _this;
  }

  _createClass(SNTag, [{
    key: "mapContentToLocalProperties",
    value: function mapContentToLocalProperties(content) {
      _get(_getPrototypeOf(SNTag.prototype), "mapContentToLocalProperties", this).call(this, content);

      this.title = content.title;
    }
  }, {
    key: "structureParams",
    value: function structureParams() {
      var params = {
        title: this.title
      };

      var superParams = _get(_getPrototypeOf(SNTag.prototype), "structureParams", this).call(this);

      Object.assign(superParams, params);
      return superParams;
    }
  }, {
    key: "addItemAsRelationship",
    value: function addItemAsRelationship(item) {
      if (item.content_type === _Models_content_types__WEBPACK_IMPORTED_MODULE_3__["ContentTypes"].Note) {
        if (!Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_1__["findInArray"])(this.notes, 'uuid', item.uuid)) {
          this.notes.push(item);
        }
      }

      _get(_getPrototypeOf(SNTag.prototype), "addItemAsRelationship", this).call(this, item);
    }
  }, {
    key: "removeItemAsRelationship",
    value: function removeItemAsRelationship(item) {
      if (item.content_type === _Models_content_types__WEBPACK_IMPORTED_MODULE_3__["ContentTypes"].Note) {
        lodash_remove__WEBPACK_IMPORTED_MODULE_0___default()(this.notes, {
          uuid: item.uuid
        });
      }

      _get(_getPrototypeOf(SNTag.prototype), "removeItemAsRelationship", this).call(this, item);
    }
  }, {
    key: "updateLocalRelationships",
    value: function updateLocalRelationships() {
      var _this2 = this;

      var references = this.content.references;
      var uuids = references.map(function (ref) {
        return ref.uuid;
      });
      this.notes.slice().forEach(function (note) {
        if (!uuids.includes(note.uuid)) {
          lodash_remove__WEBPACK_IMPORTED_MODULE_0___default()(_this2.notes, {
            uuid: note.uuid
          });
          note.setIsNoLongerReferencedBy(_this2);
        }
      });
    }
  }, {
    key: "isBeingRemovedLocally",
    value: function isBeingRemovedLocally() {
      var _this3 = this;

      this.notes.forEach(function (note) {
        note.setIsNoLongerReferencedBy(_this3);
      });
      this.notes.length = 0;

      _get(_getPrototypeOf(SNTag.prototype), "isBeingRemovedLocally", this).call(this);
    }
  }, {
    key: "didCompleteMapping",
    value: function didCompleteMapping(source) {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.notes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var note = _step.value;
          note.tagDidCompleteMapping(this);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
  }, {
    key: "isSmartTag",
    value: function isSmartTag() {
      return this.content_type === _Models_content_types__WEBPACK_IMPORTED_MODULE_3__["ContentTypes"].SmartTag;
    }
  }], [{
    key: "arrayToDisplayString",
    value: function arrayToDisplayString(tags) {
      return tags.sort(function (a, b) {
        return a.title > b.title;
      }).map(function (tag, i) {
        return '#' + tag.title;
      }).join(' ');
    }
  }]);

  return SNTag;
}(_Models_core_item__WEBPACK_IMPORTED_MODULE_2__["SFItem"]);

/***/ }),

/***/ "./lib/models/app/theme.js":
/*!*********************************!*\
  !*** ./lib/models/app/theme.js ***!
  \*********************************/
/*! exports provided: SNTheme */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNTheme", function() { return SNTheme; });
/* harmony import */ var _Payloads__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Payloads */ "./lib/protocol/payloads/index.js");
/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
/* harmony import */ var _Models_app_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Models/app/component */ "./lib/models/app/component.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }




var SNTheme =
/*#__PURE__*/
function (_SNComponent) {
  _inherits(SNTheme, _SNComponent);

  function SNTheme(payload) {
    var _this;

    _classCallCheck(this, SNTheme);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNTheme).call(this, payload));
    _this.area = 'themes';
    return _this;
  }

  _createClass(SNTheme, [{
    key: "isLayerable",
    value: function isLayerable() {
      return this.package_info && this.package_info.layerable;
    } // eslint-disable-next-line camelcase

  }, {
    key: "strategyWhenConflictingWithItem",

    /** Do not duplicate under most circumstances. Always keep original */
    value: function strategyWhenConflictingWithItem(_ref) {
      var item = _ref.item;

      if (this.errorDecrypting) {
        return _get(_getPrototypeOf(SNTheme.prototype), "strategyWhenConflictingWithItem", this).call(this, {
          item: item
        });
      }

      return _Payloads__WEBPACK_IMPORTED_MODULE_0__["ConflictStrategies"].KeepLeft;
    }
  }, {
    key: "setMobileRules",
    value: function setMobileRules(rules) {
      this.setAppDataItem('mobileRules', rules);
    }
  }, {
    key: "getMobileRules",
    value: function getMobileRules() {
      return this.getAppDataItem('mobileRules') || {
        constants: {},
        rules: {}
      };
    }
    /** Same as getMobileRules but without default value. */

  }, {
    key: "hasMobileRules",
    value: function hasMobileRules() {
      return this.getAppDataItem('mobileRules');
    }
  }, {
    key: "setNotAvailOnMobile",
    value: function setNotAvailOnMobile(na) {
      this.setAppDataItem('notAvailableOnMobile', na);
    }
  }, {
    key: "getNotAvailOnMobile",
    value: function getNotAvailOnMobile() {
      return this.getAppDataItem('notAvailableOnMobile');
    }
    /**
     * We must not use .active because if you set that to true, it will also
     * activate that theme on desktop/web
     */

  }, {
    key: "setMobileActive",
    value: function setMobileActive(active) {
      this.setAppDataItem('mobileActive', active);
    }
  }, {
    key: "isMobileActive",
    value: function isMobileActive() {
      return this.getAppDataItem('mobileActive');
    }
  }, {
    key: "content_type",
    get: function get() {
      return _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].Theme;
    }
  }]);

  return SNTheme;
}(_Models_app_component__WEBPACK_IMPORTED_MODULE_2__["SNComponent"]);

/***/ }),

/***/ "./lib/models/app/userPrefs.js":
/*!*************************************!*\
  !*** ./lib/models/app/userPrefs.js ***!
  \*************************************/
/*! exports provided: SNUserPrefs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNUserPrefs", function() { return SNUserPrefs; });
/* harmony import */ var _Models_core_item__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Models/core/item */ "./lib/models/core/item.js");
/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
/* harmony import */ var _Models_core_predicate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Models/core/predicate */ "./lib/models/core/predicate.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }




var SNUserPrefs =
/*#__PURE__*/
function (_SFItem) {
  _inherits(SNUserPrefs, _SFItem);

  function SNUserPrefs() {
    _classCallCheck(this, SNUserPrefs);

    return _possibleConstructorReturn(this, _getPrototypeOf(SNUserPrefs).apply(this, arguments));
  }

  _createClass(SNUserPrefs, [{
    key: "isSingleton",
    get: function get() {
      return true;
    }
  }, {
    key: "singletonPredicate",
    get: function get() {
      return new _Models_core_predicate__WEBPACK_IMPORTED_MODULE_2__["SFPredicate"]('content_type', '=', this.content_type);
    }
  }], [{
    key: "contentType",
    value: function contentType() {
      return _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].UserPrefs;
    }
  }]);

  return SNUserPrefs;
}(_Models_core_item__WEBPACK_IMPORTED_MODULE_0__["SFItem"]);

/***/ }),

/***/ "./lib/models/content_types.js":
/*!*************************************!*\
  !*** ./lib/models/content_types.js ***!
  \*************************************/
/*! exports provided: ContentTypes, displayStringForContentType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ContentTypes", function() { return ContentTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "displayStringForContentType", function() { return displayStringForContentType; });
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var ContentTypes = {
  Item: 'SF|Item',
  RootKey: 'SN|RootKey|NoSync',
  ItemsKey: 'SN|ItemsKey',
  EncryptedStorage: 'SN|EncryptedStorage',
  Note: 'Note',
  Tag: 'Tag',
  SmartTag: 'SN|SmartTag',
  Component: 'SN|Component',
  Editor: 'SN|Editor',
  ActionsExtension: 'Extension',
  UserPrefs: 'SN|UserPreferences',
  Privileges: 'SN|Privileges',
  HistorySession: 'SN|HistorySession',
  Theme: 'SN|Theme',
  Mfa: 'SF|MFA',
  ServerExtension: 'SF|Extension',
  FilesafeCredentials: 'SN|FileSafe|Credentials',
  FilesafeFileMetadata: 'SN|FileSafe|FileMetadata',
  FilesafeIntegration: 'SN|FileSafe|Integration',
  ExtensionRepo: 'SN|ExtensionRepo'
};
function displayStringForContentType(contentType) {
  var _ContentTypes$Note$Co;

  return (_ContentTypes$Note$Co = {}, _defineProperty(_ContentTypes$Note$Co, ContentTypes.Note, "note"), _defineProperty(_ContentTypes$Note$Co, ContentTypes.Tag, "tag"), _defineProperty(_ContentTypes$Note$Co, ContentTypes.SmartTag, "smart tag"), _defineProperty(_ContentTypes$Note$Co, ContentTypes.ActionsExtension, "action-based extension"), _defineProperty(_ContentTypes$Note$Co, ContentTypes.Component, "component"), _defineProperty(_ContentTypes$Note$Co, ContentTypes.Editor, "editor"), _defineProperty(_ContentTypes$Note$Co, ContentTypes.Theme, "theme"), _defineProperty(_ContentTypes$Note$Co, ContentTypes.ServerExtension, "server extension"), _defineProperty(_ContentTypes$Note$Co, ContentTypes.Mfa, "two-factor authentication setting"), _defineProperty(_ContentTypes$Note$Co, ContentTypes.FilesafeCredentials, "FileSafe credential"), _defineProperty(_ContentTypes$Note$Co, ContentTypes.FilesafeFileMetadata, "FileSafe file"), _defineProperty(_ContentTypes$Note$Co, ContentTypes.FilesafeIntegration, "FileSafe integration"), _ContentTypes$Note$Co)[contentType];
}

/***/ }),

/***/ "./lib/models/core/functions.js":
/*!**************************************!*\
  !*** ./lib/models/core/functions.js ***!
  \**************************************/
/*! exports provided: ItemContentsEqual, ItemContentsDiffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ItemContentsEqual", function() { return ItemContentsEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ItemContentsDiffer", function() { return ItemContentsDiffer; });
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Lib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Lib */ "./lib/index.js");


function ItemContentsEqual(_ref) {
  var leftContent = _ref.leftContent,
      rightContent = _ref.rightContent,
      keysToIgnore = _ref.keysToIgnore,
      appDataKeysToIgnore = _ref.appDataKeysToIgnore;
  // Create copies of objects before running omit as not to modify source values directly.
  leftContent = JSON.parse(JSON.stringify(leftContent));

  if (leftContent.appData) {
    var domainData = leftContent.appData[_Lib__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_APP_DOMAIN"]];
    Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["omitInPlace"])(domainData, appDataKeysToIgnore);
    /**
     * We don't want to disqualify comparison if one object contains an empty domain object
     * and the other doesn't contain a domain object. This can happen if you create an item
     * without setting dirty, which means it won't be initialized with a client_updated_at
     */

    if (domainData) {
      if (Object.keys(domainData).length === 0) {
        delete leftContent.appData;
      }
    } else {
      delete leftContent.appData;
    }
  }

  leftContent = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["omitInPlace"])(leftContent, keysToIgnore);
  rightContent = JSON.parse(JSON.stringify(rightContent));

  if (rightContent.appData) {
    var _domainData = rightContent.appData[_Lib__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_APP_DOMAIN"]];
    Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["omitInPlace"])(_domainData, appDataKeysToIgnore);

    if (_domainData) {
      if (Object.keys(_domainData).length === 0) {
        delete rightContent.appData;
      }
    } else {
      delete rightContent.appData;
    }
  }

  rightContent = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["omitInPlace"])(rightContent, keysToIgnore);
  return JSON.stringify(leftContent) === JSON.stringify(rightContent);
}
function ItemContentsDiffer(item1, item2, excludeContentKeys) {
  if (!excludeContentKeys) {
    excludeContentKeys = [];
  }

  return !ItemContentsEqual({
    leftContent: item1.content,
    rightContent: item2.content,
    keysToIgnore: item1.contentKeysToIgnoreWhenCheckingEquality().concat(excludeContentKeys),
    appDataKeysToIgnore: item1.appDatacontentKeysToIgnoreWhenCheckingEquality()
  });
}

/***/ }),

/***/ "./lib/models/core/item.js":
/*!*********************************!*\
  !*** ./lib/models/core/item.js ***!
  \*********************************/
/*! exports provided: SingletonStrategies, SFItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SingletonStrategies", function() { return SingletonStrategies; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SFItem", function() { return SFItem; });
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Models_core_predicate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Models/core/predicate */ "./lib/models/core/predicate.js");
/* harmony import */ var _Models_core_functions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Models/core/functions */ "./lib/models/core/functions.js");
/* harmony import */ var _Payloads__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads */ "./lib/protocol/payloads/index.js");
/* harmony import */ var _Lib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Lib */ "./lib/index.js");
/* harmony import */ var _Lib_uuid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Lib/uuid */ "./lib/uuid.js");
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }







var SingletonStrategies = {
  KeepEarliest: 1
};
var SFItem =
/*#__PURE__*/
function () {
  function SFItem(payload) {
    _classCallCheck(this, SFItem);

    this.content = {
      references: [],
      appData: _defineProperty({}, _Lib__WEBPACK_IMPORTED_MODULE_4__["DEFAULT_APP_DOMAIN"], {})
    };
    this.resetLocalReferencePointers();

    if (payload) {
      if (!payload.isPayload) {
        throw "Attempting to construct SFItem from non-payload object ".concat(payload, ".");
      }

      this.updateFromPayload(payload);
    }

    if (!this.uuid) {
      if (_Lib_uuid__WEBPACK_IMPORTED_MODULE_5__["Uuid"].canGenSync()) {
        this.uuid = _Lib_uuid__WEBPACK_IMPORTED_MODULE_5__["Uuid"].GenerateUuidSynchronously();
      }
    }
  }

  _createClass(SFItem, [{
    key: "payloadRepresentation",
    value: function payloadRepresentation() {
      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          override = _ref.override;

      return Object(_Payloads__WEBPACK_IMPORTED_MODULE_3__["CreateMaxPayloadFromAnyObject"])({
        object: this,
        override: override
      });
    }
    /**
     * If creating from external payload, it may not include values for .references and .appData
     * Here we want to initialize these values with default values.
     */

  }, {
    key: "populateDefaultContentValues",
    value: function populateDefaultContentValues() {
      if (this.errorDecrypting || this.deleted) {
        return;
      }

      if (!this.content.references) {
        this.content.references = [];
      }

      if (!this.content.appData) {
        this.content.appData = _defineProperty({}, _Lib__WEBPACK_IMPORTED_MODULE_4__["DEFAULT_APP_DOMAIN"], {});
      }
    }
    /**
     * Consumers who create items without a syncronous UUID generation function
     * must manually call this function when creating an item. The consumer must
     * have previously called Uuid.SetGenerators.
     */

  }, {
    key: "initUUID",
    value: function initUUID() {
      return regeneratorRuntime.async(function initUUID$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (this.uuid) {
                _context.next = 4;
                break;
              }

              _context.next = 3;
              return regeneratorRuntime.awrap(SFItem.GenerateUuid());

            case 3:
              this.uuid = _context.sent;

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "updateFromPayload",
    value: function updateFromPayload(payload) {
      if (!payload) {
        return;
      }

      var fieldsToCopy = [_Payloads__WEBPACK_IMPORTED_MODULE_3__["PayloadFields"].Content];
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = payload.fields()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var field = _step.value;

          if (Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["hasGetter"])(this, field)) {
            continue;
          }

          var value = payload[field];

          if (fieldsToCopy.includes(field)) {
            var copy = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["Copy"])(value || null);
            this[field] = copy;
          } else {
            this[field] = value;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      if (this.content) {
        this.mapContentToLocalProperties(this.content);
      } else if (payload.deleted === true) {
        this.handleDeletedContent();
      }

      if (this.dirtiedDate && typeof this.dirtiedDate === 'string') {
        this.dirtiedDate = new Date(this.dirtiedDate);
      }

      if (this.lastSyncBegan && typeof this.lastSyncBegan === 'string') {
        this.lastSyncBegan = new Date(this.lastSyncBegan);
      }

      if (this.lastSyncEnd && typeof this.lastSyncEnd === 'string') {
        this.lastSyncEnd = new Date(this.lastSyncEnd);
      }

      if (this.created_at) {
        this.created_at = new Date(this.created_at);
      } else {
        this.created_at = new Date();
      }

      if (this.updated_at) {
        this.updated_at = new Date(this.updated_at);
      } else {
        this.updated_at = new Date(0);
      } // Epoch

      /** Allows the getter to be re-invoked */


      this._client_updated_at = null;
      this.populateDefaultContentValues();
    }
  }, {
    key: "mapContentToLocalProperties",
    value: function mapContentToLocalProperties(content) {}
    /** Optional override */

    /**
     * Merges any fields we get from `this.structureParams` into our .content object.
     * Subclasses can override `structureParams`, and add their own custom content
     * and properties to the object returned from `structureParams`.
     * These are properties that this superclass will not be aware of,
     * like `title` or `text`. When we call `collapseContent`, we want to update
     * our own inherit 'content' field with the values returned from structureParams,
     * so that our content field is up to date. Each subclass will call
     * `super.structureParams` and merge it with its own custom result object.
     * Since our own `structureParams` gets a real-time copy of our content,
     * it should be safe to merge the aggregate value back into our own content field.
     */

  }, {
    key: "collapseContent",
    value: function collapseContent() {
      var contentCopy = this.structureParams();
      Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["deepMerge"])(this.content, contentCopy);
      return contentCopy;
    }
  }, {
    key: "structureParams",
    value: function structureParams() {
      return this.getContentCopy();
    }
    /** Allows consumers to check if object is an SFItem subclass and not a generic JS object */

  }, {
    key: "handleDeletedContent",

    /* Allows the item to handle the case where the item is deleted and the content is null */
    value: function handleDeletedContent() {
      /** Subclasses can override */
    }
  }, {
    key: "setDirty",
    value: function setDirty(_ref2) {
      var dirty = _ref2.dirty,
          updateClientDate = _ref2.updateClientDate,
          authorized = _ref2.authorized;

      if (!authorized) {
        throw 'Do not call setDirty directly. Use modelManager.setItemDirty';
      }

      this.dirty = dirty;
      this.dirtiedDate = new Date();

      if (dirty && updateClientDate) {
        // Set the client modified date to now if marking the item as dirty
        this.client_updated_at = new Date();
      } else if (!this.hasRawClientUpdatedAtValue()) {
        // if we don't have an explcit raw value, we initialize client_updated_at.
        this.client_updated_at = new Date(this.updated_at);
      }

      this.collapseContent();
    }
    /**
     * Loops through all memory-based referenced items and checks to see
     * if they're in our content.references. If not, we remove them from
     * our memory state.
     */

  }, {
    key: "updateLocalRelationships",
    value: function updateLocalRelationships() {
      var references = this.content.references;
      var uuids = references.map(function (ref) {
        return ref.uuid;
      });
      var existingUuids = Object.keys(this._referencedItems);

      for (var _i = 0, _existingUuids = existingUuids; _i < _existingUuids.length; _i++) {
        var uuid = _existingUuids[_i];
        var ref = this._referencedItems[uuid];

        if (!uuids.includes(ref.uuid)) {
          delete this._referencedItems[uuid];
          ref.setIsNoLongerReferencedBy(this);
        }
      }
    }
  }, {
    key: "addItemAsRelationship",
    value: function addItemAsRelationship(item) {
      item.setIsBeingReferencedBy(this);

      if (!this._referencedItems[item.uuid]) {
        this._referencedItems[item.uuid] = item;
      }

      if (this.hasRelationshipWithItem(item)) {
        return;
      }

      var references = this.content.references || [];
      references.push({
        uuid: item.uuid,
        content_type: item.content_type
      });
      this.content.references = references;
    }
  }, {
    key: "removeItemAsRelationship",
    value: function removeItemAsRelationship(item) {
      item.setIsNoLongerReferencedBy(this);
      this.removeReferenceWithUuid(item.uuid);
      delete this._referencedItems[item.uuid];
    }
    /**
     * When another object has a relationship with us, we push that object
     * into memory here. We use this so that when `this` is deleted, we're able
     * to update the references of those other objects.
     */

  }, {
    key: "setIsBeingReferencedBy",
    value: function setIsBeingReferencedBy(item) {
      if (!this._referencingItems[item.uuid]) {
        this._referencingItems[item.uuid] = item;
      }
    }
  }, {
    key: "setIsNoLongerReferencedBy",
    value: function setIsNoLongerReferencedBy(item) {
      delete this._referencingItems[item.uuid];
    }
  }, {
    key: "removeReferenceWithUuid",
    value: function removeReferenceWithUuid(uuid) {
      var references = this.content.references || [];
      references = references.filter(function (r) {
        return r.uuid !== uuid;
      });
      this.content.references = references;
      delete this._referencedItems[uuid];
    }
  }, {
    key: "hasRelationshipWithItem",
    value: function hasRelationshipWithItem(item) {
      var target = this.content.references.find(function (r) {
        return r.uuid === item.uuid;
      });
      return !Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(target);
    }
  }, {
    key: "isBeingRemovedLocally",
    value: function isBeingRemovedLocally() {
      for (var _i2 = 0, _Object$keys = Object.keys(this._referencedItems); _i2 < _Object$keys.length; _i2++) {
        var uuid = _Object$keys[_i2];
        var item = this._referencedItems[uuid];
        item.setIsNoLongerReferencedBy(this);
      }
    }
    /** The number of items this item currently references */

  }, {
    key: "resetLocalReferencePointers",
    value: function resetLocalReferencePointers() {
      this._referencingItems = {};
      this._referencedItems = {};
    }
  }, {
    key: "didCompleteMapping",
    value: function didCompleteMapping(source) {}
    /** Optional override */

    /*
    App Data
    */

  }, {
    key: "setDomainDataItem",
    value: function setDomainDataItem(key, value, domain) {
      if (!domain) {
        console.error('DEFAULT_APP_DOMAIN needs to be set.');
        return;
      }

      if (this.errorDecrypting) {
        return;
      }

      if (!this.content.appData) {
        this.content.appData = {};
      }

      var data = this.content.appData[domain];

      if (!data) {
        data = {};
      }

      data[key] = value;
      this.content.appData[domain] = data;
    }
  }, {
    key: "getDomainDataItem",
    value: function getDomainDataItem(key, domain) {
      if (!domain) {
        console.error('DEFAULT_APP_DOMAIN needs to be set.');
        return;
      }

      if (this.errorDecrypting) {
        return;
      }

      if (!this.content.appData) {
        this.content.appData = {};
      }

      var data = this.content.appData[domain];

      if (data) {
        return data[key];
      } else {
        return null;
      }
    }
  }, {
    key: "setAppDataItem",
    value: function setAppDataItem(key, value) {
      this.setDomainDataItem(key, value, _Lib__WEBPACK_IMPORTED_MODULE_4__["DEFAULT_APP_DOMAIN"]);
    }
  }, {
    key: "getAppDataItem",
    value: function getAppDataItem(key) {
      return this.getDomainDataItem(key, _Lib__WEBPACK_IMPORTED_MODULE_4__["DEFAULT_APP_DOMAIN"]);
    }
  }, {
    key: "hasRawClientUpdatedAtValue",
    value: function hasRawClientUpdatedAtValue() {
      return this.getAppDataItem('client_updated_at') != null;
    } // eslint-disable-next-line camelcase

  }, {
    key: "contentKeysToIgnoreWhenCheckingEquality",

    /*
      During sync conflicts, when determing whether to create a duplicate for an item, we can omit keys that have no
      meaningful weight and can be ignored. For example, if one component has active = true and another component has active = false,
      it would be silly to duplicate them, so instead we ignore this.
     */
    value: function contentKeysToIgnoreWhenCheckingEquality() {
      return ['conflict_of'];
    } // Same as above, but keys inside appData[Item.AppDomain]

  }, {
    key: "appDatacontentKeysToIgnoreWhenCheckingEquality",
    value: function appDatacontentKeysToIgnoreWhenCheckingEquality() {
      return ['client_updated_at'];
    }
  }, {
    key: "getContentCopy",
    value: function getContentCopy() {
      var contentCopy = JSON.parse(JSON.stringify(this.content));
      return contentCopy;
    }
    /** Whether the item has never been synced to a server */

  }, {
    key: "strategyWhenConflictingWithItem",

    /**
     * Subclasses can override this method and provide their own opinion on whether
     * they want to be duplicated. For example, if this.content.x = 12 and
     * item.content.x = 13, this function can be overriden to always return
     * ConflictStrategies.KeepLeft to say 'don't create a duplicate at all, the
     * change is not important.'
     *
     * In the default implementation, we create a duplicate if content differs.
     * However, if they only differ by references, we KEEP_LEFT_MERGE_REFS.
     */
    value: function strategyWhenConflictingWithItem(_ref3) {
      var item = _ref3.item;

      if (this.errorDecrypting) {
        return _Payloads__WEBPACK_IMPORTED_MODULE_3__["ConflictStrategies"].KeepLeftDuplicateRight;
      }

      if (this.isSingleton) {
        return _Payloads__WEBPACK_IMPORTED_MODULE_3__["ConflictStrategies"].KeepLeft;
      }
      /**
        * The number of seconds in between changes to constitue a
        * subjective measure of what we think is active editing of an item
        */
      // const IS_ACTIVELY_EDITING_THRESHOLD = 10;
      // function ItemIsBeingActivelyEdited(item) {
      //   const isEpoch = item.client_updated_at.getTime() === 0;
      //   if (!item.client_updated_at) {
      //     return false;
      //   }
      //   return (new Date() - item.client_updated_at) / 1000 < IS_ACTIVELY_EDITING_THRESHOLD;
      // }


      if (this.deleted || item.deleted) {
        return _Payloads__WEBPACK_IMPORTED_MODULE_3__["ConflictStrategies"].KeepRight;
      }

      var contentDiffers = Object(_Models_core_functions__WEBPACK_IMPORTED_MODULE_2__["ItemContentsDiffer"])(this, item);

      if (!contentDiffers) {
        return _Payloads__WEBPACK_IMPORTED_MODULE_3__["ConflictStrategies"].KeepRight;
      }

      var differsExclRefs = Object(_Models_core_functions__WEBPACK_IMPORTED_MODULE_2__["ItemContentsDiffer"])(this, item, ['references']);

      if (differsExclRefs) {
        return _Payloads__WEBPACK_IMPORTED_MODULE_3__["ConflictStrategies"].KeepLeftDuplicateRight;
      } else {
        /** Is only references change */
        return _Payloads__WEBPACK_IMPORTED_MODULE_3__["ConflictStrategies"].KeepLeftMergeRefs;
      }
    }
  }, {
    key: "isItemContentEqualWith",
    value: function isItemContentEqualWith(otherItem) {
      return Object(_Models_core_functions__WEBPACK_IMPORTED_MODULE_2__["ItemContentsEqual"])({
        leftContent: this.content,
        rightContent: otherItem.content,
        keysToIgnore: this.contentKeysToIgnoreWhenCheckingEquality(),
        appDataKeysToIgnore: this.appDatacontentKeysToIgnoreWhenCheckingEquality()
      });
    }
  }, {
    key: "satisfiesPredicate",
    value: function satisfiesPredicate(predicate) {
      return _Models_core_predicate__WEBPACK_IMPORTED_MODULE_1__["SFPredicate"].ItemSatisfiesPredicate(this, predicate);
    }
    /*
    Dates
    */

  }, {
    key: "createdAtString",
    value: function createdAtString() {
      return this.dateToLocalizedString(this.created_at);
    }
  }, {
    key: "updatedAtString",
    value: function updatedAtString() {
      return this.dateToLocalizedString(this.client_updated_at);
    }
  }, {
    key: "updatedAtTimestamp",
    value: function updatedAtTimestamp() {
      return this.updated_at.getTime();
    }
  }, {
    key: "dateToLocalizedString",
    value: function dateToLocalizedString(date) {
      if (typeof Intl !== 'undefined' && Intl.DateTimeFormat) {
        if (!SFItem.sharedDateFormatter) {
          var locale = navigator.languages && navigator.languages.length ? navigator.languages[0] : navigator.language;
          SFItem.sharedDateFormatter = new Intl.DateTimeFormat(locale, {
            year: 'numeric',
            month: 'short',
            day: '2-digit',
            weekday: 'long',
            hour: '2-digit',
            minute: '2-digit'
          });
        }

        return SFItem.sharedDateFormatter.format(date);
      } else {
        // IE < 11, Safari <= 9.0.
        // In English, this generates the string most similar to
        // the toLocaleDateString() result above.
        return date.toDateString() + ' ' + date.toLocaleTimeString();
      }
    }
  }, {
    key: "isItem",
    get: function get() {
      return true;
    }
  }, {
    key: "referencedItemsCount",
    get: function get() {
      return Object.keys(this._referencedItems).length;
    }
    /** The number of items that currently reference this item */

  }, {
    key: "referencingItemsCount",
    get: function get() {
      return Object.keys(this._referencingItems).length;
    }
  }, {
    key: "allReferencingItems",
    get: function get() {
      var _this = this;

      return Object.keys(this._referencingItems).map(function (uuid) {
        return _this._referencingItems[uuid];
      });
    }
  }, {
    key: "pinned",
    get: function get() {
      return this.getAppDataItem('pinned');
    }
  }, {
    key: "archived",
    get: function get() {
      return this.getAppDataItem('archived');
    }
  }, {
    key: "locked",
    get: function get() {
      return this.getAppDataItem('locked');
    }
  }, {
    key: "client_updated_at",
    get: function get() {
      if (!this._client_updated_at) {
        var saved = this.getAppDataItem('client_updated_at');

        if (saved) {
          this._client_updated_at = new Date(saved);
        } else {
          this._client_updated_at = new Date(this.updated_at);
        }
      }

      return this._client_updated_at;
    } // eslint-disable-next-line camelcase
    ,
    set: function set(date) {
      this._client_updated_at = date;
      this.setAppDataItem('client_updated_at', date);
    }
  }, {
    key: "neverSynced",
    get: function get() {
      return !this.updated_at || this.updated_at.getTime() === 0;
    }
    /**
     * Subclasses can override this getter to return true if they want only
     * one of this item to exist, depending on custom criteria.
     */

  }, {
    key: "isSingleton",
    get: function get() {
      return false;
    }
    /** The predicate by which singleton items should be unique */

  }, {
    key: "singletonPredicate",
    get: function get() {
      throw 'Must override SFItem.singletonPredicate';
    }
  }, {
    key: "singletonStrategy",
    get: function get() {
      return SingletonStrategies.KeepEarliest;
    }
  }]);

  return SFItem;
}();

/***/ }),

/***/ "./lib/models/core/predicate.js":
/*!**************************************!*\
  !*** ./lib/models/core/predicate.js ***!
  \**************************************/
/*! exports provided: SFPredicate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SFPredicate", function() { return SFPredicate; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var SFPredicate =
/*#__PURE__*/
function () {
  function SFPredicate(keypath, operator, value) {
    _classCallCheck(this, SFPredicate);

    this.keypath = keypath;
    this.operator = operator;
    this.value = value;

    if (SFPredicate.IsRecursiveOperator(this.operator)) {
      this.value = this.value.map(function (element) {
        if (Array.isArray(element)) {
          return SFPredicate.FromArray(element);
        } else {
          return element;
        }
      });
    }
  }

  _createClass(SFPredicate, null, [{
    key: "CompoundPredicate",
    value: function CompoundPredicate(predicates) {
      return new SFPredicate('ignored', 'and', predicates);
    }
  }, {
    key: "FromArray",
    value: function FromArray(array) {
      return new SFPredicate(array[0], array[1], array[2]);
    }
  }, {
    key: "ObjectSatisfiesPredicate",
    value: function ObjectSatisfiesPredicate(object, predicate) {
      // Predicates may not always be created using the official constructor
      // so if it's still an array here, convert to object
      if (Array.isArray(predicate)) {
        predicate = this.FromArray(predicate);
      }

      if (SFPredicate.IsRecursiveOperator(predicate.operator)) {
        if (predicate.operator === 'and') {
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = undefined;

          try {
            for (var _iterator = predicate.value[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var subPredicate = _step.value;

              if (!this.ObjectSatisfiesPredicate(object, subPredicate)) {
                return false;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }

          return true;
        }

        if (predicate.operator === 'or') {
          var _iteratorNormalCompletion2 = true;
          var _didIteratorError2 = false;
          var _iteratorError2 = undefined;

          try {
            for (var _iterator2 = predicate.value[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
              var _subPredicate = _step2.value;

              if (this.ObjectSatisfiesPredicate(object, _subPredicate)) {
                return true;
              }
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }

          return false;
        }
      }

      var predicateValue = predicate.value;

      if (typeof predicateValue === 'string' && predicateValue.includes('.ago')) {
        predicateValue = this.DateFromString(predicateValue);
      }

      var valueAtKeyPath = predicate.keypath.split('.').reduce(function (previous, current) {
        return previous && previous[current];
      }, object);
      var falseyValues = [false, '', null, undefined, NaN]; // If the value at keyPath is undefined, either because the property is nonexistent or the value is null.

      if (valueAtKeyPath === undefined) {
        if (predicate.operator === '!=') {
          return !falseyValues.includes(predicate.value);
        } else {
          return falseyValues.includes(predicate.value);
        }
      }

      if (predicate.operator === '=') {
        // Use array comparison
        if (Array.isArray(valueAtKeyPath)) {
          return JSON.stringify(valueAtKeyPath) === JSON.stringify(predicateValue);
        } else {
          return valueAtKeyPath === predicateValue;
        }
      } else if (predicate.operator === '!=') {
        // Use array comparison
        if (Array.isArray(valueAtKeyPath)) {
          return JSON.stringify(valueAtKeyPath) !== JSON.stringify(predicateValue);
        } else {
          return valueAtKeyPath !== predicateValue;
        }
      } else if (predicate.operator === '<') {
        return valueAtKeyPath < predicateValue;
      } else if (predicate.operator === '>') {
        return valueAtKeyPath > predicateValue;
      } else if (predicate.operator === '<=') {
        return valueAtKeyPath <= predicateValue;
      } else if (predicate.operator === '>=') {
        return valueAtKeyPath >= predicateValue;
      } else if (predicate.operator === 'startsWith') {
        return valueAtKeyPath.startsWith(predicateValue);
      } else if (predicate.operator === 'in') {
        return predicateValue.indexOf(valueAtKeyPath) !== -1;
      } else if (predicate.operator === 'includes') {
        return this.resolveIncludesPredicate(valueAtKeyPath, predicateValue);
      } else if (predicate.operator === 'matches') {
        var regex = new RegExp(predicateValue);
        return regex.test(valueAtKeyPath);
      }

      return false;
    }
  }, {
    key: "resolveIncludesPredicate",
    value: function resolveIncludesPredicate(valueAtKeyPath, predicateValue) {
      // includes can be a string  or a predicate (in array form)
      if (typeof predicateValue === 'string') {
        // if string, simply check if the valueAtKeyPath includes the predicate value
        return valueAtKeyPath.includes(predicateValue);
      } else {
        // is a predicate array or predicate object
        var innerPredicate;

        if (Array.isArray(predicateValue)) {
          innerPredicate = SFPredicate.FromArray(predicateValue);
        } else {
          innerPredicate = predicateValue;
        }

        var _iteratorNormalCompletion3 = true;
        var _didIteratorError3 = false;
        var _iteratorError3 = undefined;

        try {
          for (var _iterator3 = valueAtKeyPath[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
            var obj = _step3.value;

            if (this.ObjectSatisfiesPredicate(obj, innerPredicate)) {
              return true;
            }
          }
        } catch (err) {
          _didIteratorError3 = true;
          _iteratorError3 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
              _iterator3.return();
            }
          } finally {
            if (_didIteratorError3) {
              throw _iteratorError3;
            }
          }
        }

        return false;
      }
    }
  }, {
    key: "ItemSatisfiesPredicate",
    value: function ItemSatisfiesPredicate(item, predicate) {
      if (Array.isArray(predicate)) {
        predicate = SFPredicate.FromArray(predicate);
      }

      return this.ObjectSatisfiesPredicate(item, predicate);
    }
  }, {
    key: "ItemSatisfiesPredicates",
    value: function ItemSatisfiesPredicates(item, predicates) {
      var _iteratorNormalCompletion4 = true;
      var _didIteratorError4 = false;
      var _iteratorError4 = undefined;

      try {
        for (var _iterator4 = predicates[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
          var predicate = _step4.value;

          if (!this.ItemSatisfiesPredicate(item, predicate)) {
            return false;
          }
        }
      } catch (err) {
        _didIteratorError4 = true;
        _iteratorError4 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {
            _iterator4.return();
          }
        } finally {
          if (_didIteratorError4) {
            throw _iteratorError4;
          }
        }
      }

      return true;
    }
  }, {
    key: "DateFromString",
    value: function DateFromString(string) {
      // x.days.ago, x.hours.ago
      var comps = string.split('.');
      var unit = comps[1];
      var date = new Date();
      var offset = parseInt(comps[0]);

      if (unit === 'days') {
        date.setDate(date.getDate() - offset);
      } else if (unit === 'hours') {
        date.setHours(date.getHours() - offset);
      }

      return date;
    }
  }, {
    key: "IsRecursiveOperator",
    value: function IsRecursiveOperator(operator) {
      return ['and', 'or'].includes(operator);
    }
  }]);

  return SFPredicate;
}();

/***/ }),

/***/ "./lib/models/generator.js":
/*!*********************************!*\
  !*** ./lib/models/generator.js ***!
  \*********************************/
/*! exports provided: CreateItemFromPayload */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateItemFromPayload", function() { return CreateItemFromPayload; });
/* harmony import */ var _Models__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Models */ "./lib/models/index.js");
/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
var _ContentTypeClassMapp;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var ContentTypeClassMapping = (_ContentTypeClassMapp = {}, _defineProperty(_ContentTypeClassMapp, _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].Note, _Models__WEBPACK_IMPORTED_MODULE_0__["SNNote"]), _defineProperty(_ContentTypeClassMapp, _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].Tag, _Models__WEBPACK_IMPORTED_MODULE_0__["SNTag"]), _defineProperty(_ContentTypeClassMapp, _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].ItemsKey, _Models__WEBPACK_IMPORTED_MODULE_0__["SNItemsKey"]), _defineProperty(_ContentTypeClassMapp, _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].SmartTag, _Models__WEBPACK_IMPORTED_MODULE_0__["SNSmartTag"]), _defineProperty(_ContentTypeClassMapp, _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].ActionsExtension, _Models__WEBPACK_IMPORTED_MODULE_0__["SNActionsExtension"]), _defineProperty(_ContentTypeClassMapp, _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].Editor, _Models__WEBPACK_IMPORTED_MODULE_0__["SNEditor"]), _defineProperty(_ContentTypeClassMapp, _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].Theme, _Models__WEBPACK_IMPORTED_MODULE_0__["SNTheme"]), _defineProperty(_ContentTypeClassMapp, _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].Component, _Models__WEBPACK_IMPORTED_MODULE_0__["SNComponent"]), _defineProperty(_ContentTypeClassMapp, _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].ServerExtension, _Models__WEBPACK_IMPORTED_MODULE_0__["SNServerExtension"]), _defineProperty(_ContentTypeClassMapp, _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].Privileges, _Models__WEBPACK_IMPORTED_MODULE_0__["SFPrivileges"]), _defineProperty(_ContentTypeClassMapp, _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].UserPrefs, _Models__WEBPACK_IMPORTED_MODULE_0__["SNUserPrefs"]), _ContentTypeClassMapp);
function CreateItemFromPayload(payload) {
  if (!payload.isPayload) {
    throw 'Attempting to create item from non-payload object.';
  }

  var itemClass = ContentTypeClassMapping[payload.content_type] || _Models__WEBPACK_IMPORTED_MODULE_0__["SFItem"]; // eslint-disable-next-line new-cap

  return new itemClass(payload);
}

/***/ }),

/***/ "./lib/models/index.js":
/*!*****************************!*\
  !*** ./lib/models/index.js ***!
  \*****************************/
/*! exports provided: SFItem, SingletonStrategies, SNItemsKey, SFPredicate, SNComponent, SNEditor, SNActionsExtension, Action, SNNote, SNTag, SNUserPrefs, SFPrivileges, SNServerExtension, SNSmartTag, SNTheme, SNEncryptedStorage, ContentTypes, displayStringForContentType, CreateItemFromPayload */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Models_core_item__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Models/core/item */ "./lib/models/core/item.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SFItem", function() { return _Models_core_item__WEBPACK_IMPORTED_MODULE_0__["SFItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SingletonStrategies", function() { return _Models_core_item__WEBPACK_IMPORTED_MODULE_0__["SingletonStrategies"]; });

/* harmony import */ var _Models_app_items_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Models/app/items_key */ "./lib/models/app/items_key.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNItemsKey", function() { return _Models_app_items_key__WEBPACK_IMPORTED_MODULE_1__["SNItemsKey"]; });

/* harmony import */ var _Models_core_predicate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Models/core/predicate */ "./lib/models/core/predicate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SFPredicate", function() { return _Models_core_predicate__WEBPACK_IMPORTED_MODULE_2__["SFPredicate"]; });

/* harmony import */ var _Models_app_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Models/app/component */ "./lib/models/app/component.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNComponent", function() { return _Models_app_component__WEBPACK_IMPORTED_MODULE_3__["SNComponent"]; });

/* harmony import */ var _Models_app_editor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Models/app/editor */ "./lib/models/app/editor.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNEditor", function() { return _Models_app_editor__WEBPACK_IMPORTED_MODULE_4__["SNEditor"]; });

/* harmony import */ var _Models_app_extension__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Models/app/extension */ "./lib/models/app/extension.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNActionsExtension", function() { return _Models_app_extension__WEBPACK_IMPORTED_MODULE_5__["SNActionsExtension"]; });

/* harmony import */ var _Models_app_action__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @Models/app/action */ "./lib/models/app/action.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Action", function() { return _Models_app_action__WEBPACK_IMPORTED_MODULE_6__["Action"]; });

/* harmony import */ var _Models_app_note__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @Models/app/note */ "./lib/models/app/note.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNNote", function() { return _Models_app_note__WEBPACK_IMPORTED_MODULE_7__["SNNote"]; });

/* harmony import */ var _Models_app_tag__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @Models/app/tag */ "./lib/models/app/tag.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNTag", function() { return _Models_app_tag__WEBPACK_IMPORTED_MODULE_8__["SNTag"]; });

/* harmony import */ var _Models_app_userPrefs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @Models/app/userPrefs */ "./lib/models/app/userPrefs.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNUserPrefs", function() { return _Models_app_userPrefs__WEBPACK_IMPORTED_MODULE_9__["SNUserPrefs"]; });

/* harmony import */ var _Models_privileges_privileges__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @Models/privileges/privileges */ "./lib/models/privileges/privileges.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SFPrivileges", function() { return _Models_privileges_privileges__WEBPACK_IMPORTED_MODULE_10__["SFPrivileges"]; });

/* harmony import */ var _Models_server_serverExtension__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @Models/server/serverExtension */ "./lib/models/server/serverExtension.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNServerExtension", function() { return _Models_server_serverExtension__WEBPACK_IMPORTED_MODULE_11__["SNServerExtension"]; });

/* harmony import */ var _Models_app_smartTag__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @Models/app/smartTag */ "./lib/models/app/smartTag.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNSmartTag", function() { return _Models_app_smartTag__WEBPACK_IMPORTED_MODULE_12__["SNSmartTag"]; });

/* harmony import */ var _Models_app_theme__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @Models/app/theme */ "./lib/models/app/theme.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNTheme", function() { return _Models_app_theme__WEBPACK_IMPORTED_MODULE_13__["SNTheme"]; });

/* harmony import */ var _Models_local_encryptedStorage__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @Models/local/encryptedStorage */ "./lib/models/local/encryptedStorage.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNEncryptedStorage", function() { return _Models_local_encryptedStorage__WEBPACK_IMPORTED_MODULE_14__["SNEncryptedStorage"]; });

/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ContentTypes", function() { return _Models_content_types__WEBPACK_IMPORTED_MODULE_15__["ContentTypes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "displayStringForContentType", function() { return _Models_content_types__WEBPACK_IMPORTED_MODULE_15__["displayStringForContentType"]; });

/* harmony import */ var _Models_generator__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @Models/generator */ "./lib/models/generator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateItemFromPayload", function() { return _Models_generator__WEBPACK_IMPORTED_MODULE_16__["CreateItemFromPayload"]; });



















/***/ }),

/***/ "./lib/models/local/encryptedStorage.js":
/*!**********************************************!*\
  !*** ./lib/models/local/encryptedStorage.js ***!
  \**********************************************/
/*! exports provided: SNEncryptedStorage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNEncryptedStorage", function() { return SNEncryptedStorage; });
/* harmony import */ var _Models_core_item__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Models/core/item */ "./lib/models/core/item.js");
/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var SNEncryptedStorage =
/*#__PURE__*/
function (_SFItem) {
  _inherits(SNEncryptedStorage, _SFItem);

  function SNEncryptedStorage() {
    _classCallCheck(this, SNEncryptedStorage);

    return _possibleConstructorReturn(this, _getPrototypeOf(SNEncryptedStorage).apply(this, arguments));
  }

  _createClass(SNEncryptedStorage, [{
    key: "mapContentToLocalProperties",
    value: function mapContentToLocalProperties(content) {
      _get(_getPrototypeOf(SNEncryptedStorage.prototype), "mapContentToLocalProperties", this).call(this, content);

      this.storage = content.storage;
    } // eslint-disable-next-line camelcase

  }, {
    key: "content_type",
    get: function get() {
      return _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].EncryptedStorage;
    }
  }]);

  return SNEncryptedStorage;
}(_Models_core_item__WEBPACK_IMPORTED_MODULE_0__["SFItem"]);

/***/ }),

/***/ "./lib/models/privileges/privileges.js":
/*!*********************************************!*\
  !*** ./lib/models/privileges/privileges.js ***!
  \*********************************************/
/*! exports provided: SFPrivileges */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SFPrivileges", function() { return SFPrivileges; });
/* harmony import */ var lodash_pull__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/pull */ "./node_modules/lodash/pull.js");
/* harmony import */ var lodash_pull__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_pull__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Models_core_item__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Models/core/item */ "./lib/models/core/item.js");
/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
/* harmony import */ var _Models_core_predicate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Models/core/predicate */ "./lib/models/core/predicate.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }





var SFPrivileges =
/*#__PURE__*/
function (_SFItem) {
  _inherits(SFPrivileges, _SFItem);

  _createClass(SFPrivileges, null, [{
    key: "contentType",
    value: function contentType() {
      return _Models_content_types__WEBPACK_IMPORTED_MODULE_2__["ContentTypes"].Privileges;
    }
  }]);

  function SFPrivileges(payload) {
    var _this;

    _classCallCheck(this, SFPrivileges);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SFPrivileges).call(this, payload));

    if (!_this.errorDecrypting && !_this.content.desktopPrivileges) {
      _this.content.desktopPrivileges = {};
    }

    return _this;
  }

  _createClass(SFPrivileges, [{
    key: "setCredentialsForAction",
    value: function setCredentialsForAction(action, credentials) {
      this.content.desktopPrivileges[action] = credentials;
    }
  }, {
    key: "getCredentialsForAction",
    value: function getCredentialsForAction(action) {
      return this.content.desktopPrivileges[action] || [];
    }
  }, {
    key: "toggleCredentialForAction",
    value: function toggleCredentialForAction(action, credential) {
      if (this.isCredentialRequiredForAction(action, credential)) {
        this.removeCredentialForAction(action, credential);
      } else {
        this.addCredentialForAction(action, credential);
      }
    }
  }, {
    key: "removeCredentialForAction",
    value: function removeCredentialForAction(action, credential) {
      lodash_pull__WEBPACK_IMPORTED_MODULE_0___default()(this.content.desktopPrivileges[action], credential);
    }
  }, {
    key: "addCredentialForAction",
    value: function addCredentialForAction(action, credential) {
      var credentials = this.getCredentialsForAction(action);
      credentials.push(credential);
      this.setCredentialsForAction(action, credentials);
    }
  }, {
    key: "isCredentialRequiredForAction",
    value: function isCredentialRequiredForAction(action, credential) {
      var credentialsRequired = this.getCredentialsForAction(action);
      return credentialsRequired.includes(credential);
    }
  }, {
    key: "isSingleton",
    get: function get() {
      return true;
    }
  }, {
    key: "singletonPredicate",
    get: function get() {
      return new _Models_core_predicate__WEBPACK_IMPORTED_MODULE_3__["SFPredicate"]('content_type', '=', this.content_type);
    }
  }]);

  return SFPrivileges;
}(_Models_core_item__WEBPACK_IMPORTED_MODULE_1__["SFItem"]);

/***/ }),

/***/ "./lib/models/server/serverExtension.js":
/*!**********************************************!*\
  !*** ./lib/models/server/serverExtension.js ***!
  \**********************************************/
/*! exports provided: SNServerExtension */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNServerExtension", function() { return SNServerExtension; });
/* harmony import */ var _Models_core_item__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Models/core/item */ "./lib/models/core/item.js");
/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var SNServerExtension =
/*#__PURE__*/
function (_SFItem) {
  _inherits(SNServerExtension, _SFItem);

  function SNServerExtension() {
    _classCallCheck(this, SNServerExtension);

    return _possibleConstructorReturn(this, _getPrototypeOf(SNServerExtension).apply(this, arguments));
  }

  _createClass(SNServerExtension, [{
    key: "mapContentToLocalProperties",
    value: function mapContentToLocalProperties(content) {
      _get(_getPrototypeOf(SNServerExtension.prototype), "mapContentToLocalProperties", this).call(this, content);

      this.url = content.url;
    } // eslint-disable-next-line camelcase

  }, {
    key: "content_type",
    get: function get() {
      return _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].ServerExtension;
    }
  }]);

  return SNServerExtension;
}(_Models_core_item__WEBPACK_IMPORTED_MODULE_0__["SFItem"]);

/***/ }),

/***/ "./lib/platforms.js":
/*!**************************!*\
  !*** ./lib/platforms.js ***!
  \**************************/
/*! exports provided: Environments, Platforms, platformFromString, isEnvironmentWebOrDesktop, isEnvironmentMobile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Environments", function() { return Environments; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Platforms", function() { return Platforms; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "platformFromString", function() { return platformFromString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEnvironmentWebOrDesktop", function() { return isEnvironmentWebOrDesktop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEnvironmentMobile", function() { return isEnvironmentMobile; });
var Environments = {
  Web: 1,
  Desktop: 2,
  Mobile: 3
};
var Platforms = {
  Ios: 1,
  Android: 2,
  MacWeb: 3,
  MacDesktop: 4,
  WindowsWeb: 5,
  WindowsDesktop: 6,
  LinuxWeb: 7,
  LinuxDesktop: 8
};
function platformFromString(string) {
  var map = {
    'mac-web': Platforms.MacWeb,
    'mac-desktop': Platforms.MacDesktop,
    'linux-web': Platforms.LinuxWeb,
    'linux-desktop': Platforms.LinuxDesktop,
    'windows-web': Platforms.WindowsWeb,
    'windows-desktop': Platforms.WindowsDesktop
  };
  return map[string];
}
function isEnvironmentWebOrDesktop(environment) {
  return environment === Environments.Web || environment === Environments.Desktop;
}
function isEnvironmentMobile(environment) {
  return environment === Environments.Mobile;
}

/***/ }),

/***/ "./lib/protocol/index.js":
/*!*******************************!*\
  !*** ./lib/protocol/index.js ***!
  \*******************************/
/*! exports provided: ProtocolVersions, EncryptionIntents, isDecryptedIntent, intentRequiresEncryption, SNRootKey, CreateKeyParams, SNProtocolOperator001, SNProtocolOperator002, SNProtocolOperator003, SNProtocolOperator004 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Protocol_versions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Protocol/versions */ "./lib/protocol/versions.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ProtocolVersions", function() { return _Protocol_versions__WEBPACK_IMPORTED_MODULE_0__["ProtocolVersions"]; });

/* harmony import */ var _Protocol_intents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Protocol/intents */ "./lib/protocol/intents.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EncryptionIntents", function() { return _Protocol_intents__WEBPACK_IMPORTED_MODULE_1__["EncryptionIntents"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDecryptedIntent", function() { return _Protocol_intents__WEBPACK_IMPORTED_MODULE_1__["isDecryptedIntent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intentRequiresEncryption", function() { return _Protocol_intents__WEBPACK_IMPORTED_MODULE_1__["intentRequiresEncryption"]; });

/* harmony import */ var _Protocol_root_key__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Protocol/root_key */ "./lib/protocol/root_key.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNRootKey", function() { return _Protocol_root_key__WEBPACK_IMPORTED_MODULE_2__["SNRootKey"]; });

/* harmony import */ var _Protocol_key_params__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Protocol/key_params */ "./lib/protocol/key_params.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateKeyParams", function() { return _Protocol_key_params__WEBPACK_IMPORTED_MODULE_3__["CreateKeyParams"]; });

/* harmony import */ var _Protocol_operator_001_operator_001__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Protocol/operator/001/operator_001 */ "./lib/protocol/operator/001/operator_001.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNProtocolOperator001", function() { return _Protocol_operator_001_operator_001__WEBPACK_IMPORTED_MODULE_4__["SNProtocolOperator001"]; });

/* harmony import */ var _Protocol_operator_002_operator_002__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Protocol/operator/002/operator_002 */ "./lib/protocol/operator/002/operator_002.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNProtocolOperator002", function() { return _Protocol_operator_002_operator_002__WEBPACK_IMPORTED_MODULE_5__["SNProtocolOperator002"]; });

/* harmony import */ var _Protocol_operator_003_operator_003__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @Protocol/operator/003/operator_003 */ "./lib/protocol/operator/003/operator_003.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNProtocolOperator003", function() { return _Protocol_operator_003_operator_003__WEBPACK_IMPORTED_MODULE_6__["SNProtocolOperator003"]; });

/* harmony import */ var _Protocol_operator_004_operator_004__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @Protocol/operator/004/operator_004 */ "./lib/protocol/operator/004/operator_004.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNProtocolOperator004", function() { return _Protocol_operator_004_operator_004__WEBPACK_IMPORTED_MODULE_7__["SNProtocolOperator004"]; });










/***/ }),

/***/ "./lib/protocol/intents.js":
/*!*********************************!*\
  !*** ./lib/protocol/intents.js ***!
  \*********************************/
/*! exports provided: EncryptionIntents, isLocalStorageIntent, isFileIntent, isDecryptedIntent, intentRequiresEncryption */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EncryptionIntents", function() { return EncryptionIntents; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLocalStorageIntent", function() { return isLocalStorageIntent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFileIntent", function() { return isFileIntent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDecryptedIntent", function() { return isDecryptedIntent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intentRequiresEncryption", function() { return intentRequiresEncryption; });
var EncryptionIntents = {
  Sync: 0,

  /** Permissible only for server extensions */
  SyncDecrypted: 1,
  LocalStorageEncrypted: 2,
  LocalStorageDecrypted: 3,

  /** Store encrypted if possible, but decrypted if not */
  LocalStoragePreferEncrypted: 4,
  FileEncrypted: 5,
  FileDecrypted: 6,
  FilePreferEncrypted: 7
};
function isLocalStorageIntent(intent) {
  return intent === EncryptionIntents.LocalStorageEncrypted || intent === EncryptionIntents.LocalStorageDecrypted || intent === EncryptionIntents.LocalStoragePreferEncrypted;
}
function isFileIntent(intent) {
  return intent === EncryptionIntents.FileEncrypted || intent === EncryptionIntents.FileDecrypted || intent === EncryptionIntents.FilePreferEncrypted;
}
function isDecryptedIntent(intent) {
  return intent === EncryptionIntents.SyncDecrypted || intent === EncryptionIntents.LocalStorageDecrypted || intent === EncryptionIntents.FileDecrypted;
}
/**
 * @returns {boolean}  True if the intent requires encryption.
 */

function intentRequiresEncryption(intent) {
  return intent === EncryptionIntents.Sync || intent === EncryptionIntents.LocalStorageEncrypted || intent === EncryptionIntents.FileEncrypted;
}

/***/ }),

/***/ "./lib/protocol/key_params.js":
/*!************************************!*\
  !*** ./lib/protocol/key_params.js ***!
  \************************************/
/*! exports provided: CreateKeyParams, SNRootKeyParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateKeyParams", function() { return CreateKeyParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNRootKeyParams", function() { return SNRootKeyParams; });
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


function CreateKeyParams(keyParams) {
  return new SNRootKeyParams(keyParams);
}
var SNRootKeyParams =
/*#__PURE__*/
function () {
  function SNRootKeyParams(content) {
    _classCallCheck(this, SNRootKeyParams);

    if (!Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["isObject"])(content) || content.isKeyParamsObject) {
      throw 'Attempting to construct root key params with non-object';
    }

    this.content = content;
  }
  /**
   * For consumers to determine whether the object they are
   * working with is a proper RootKeyParams object.
   */


  _createClass(SNRootKeyParams, [{
    key: "getPortableValue",

    /** 
     * @public 
     * When saving in a file or communicating with server, 
     * use the original values.
     */
    value: function getPortableValue() {
      return this.content;
    }
  }, {
    key: "isKeyParamsObject",
    get: function get() {
      return true;
    }
  }, {
    key: "kdfIterations",
    get: function get() {
      return this.content.pw_cost;
    }
  }, {
    key: "seed",
    get: function get() {
      return this.content.pw_nonce;
    }
  }, {
    key: "identifier",
    get: function get() {
      return this.content.identifier || this.content.email;
    }
  }, {
    key: "salt",
    get: function get() {
      return this.content.pw_salt;
    }
  }, {
    key: "version",
    get: function get() {
      return this.content.version;
    }
  }]);

  return SNRootKeyParams;
}();

/***/ }),

/***/ "./lib/protocol/operator/001/operator_001.js":
/*!***************************************************!*\
  !*** ./lib/protocol/operator/001/operator_001.js ***!
  \***************************************************/
/*! exports provided: SNProtocolOperator001 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNProtocolOperator001", function() { return SNProtocolOperator001; });
/* harmony import */ var _Protocol_operator_operator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Protocol/operator/operator */ "./lib/protocol/operator/operator.js");
/* harmony import */ var _Protocol_key_params__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Protocol/key_params */ "./lib/protocol/key_params.js");
/* harmony import */ var _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads/fields */ "./lib/protocol/payloads/fields.js");
/* harmony import */ var _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads/formats */ "./lib/protocol/payloads/formats.js");
/* harmony import */ var _Payloads_generator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Payloads/generator */ "./lib/protocol/payloads/generator.js");
/* harmony import */ var _Protocol_versions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Protocol/versions */ "./lib/protocol/versions.js");
/* harmony import */ var _Protocol_root_key__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @Protocol/root_key */ "./lib/protocol/root_key.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }







 // eslint-disable-next-line no-unused-vars

var ENCRYPTION_ALGORITHM = 'AES-CBC';
var ENCRYPTION_KEY_LENGTH = 256;
var PBKDF2_OUTPUT_KEY_LENGTH = 512;
var PBKDF2_ITERATIONS = 3000;
var SALT_SEED_LENGTH = 128;
var NO_IV = '00000000000000000000000000000000';
var SNProtocolOperator001 =
/*#__PURE__*/
function (_SNProtocolOperator) {
  _inherits(SNProtocolOperator001, _SNProtocolOperator);

  function SNProtocolOperator001() {
    _classCallCheck(this, SNProtocolOperator001);

    return _possibleConstructorReturn(this, _getPrototypeOf(SNProtocolOperator001).apply(this, arguments));
  }

  _createClass(SNProtocolOperator001, [{
    key: "generateNewItemsKeyContent",

    /** @override */
    value: function generateNewItemsKeyContent() {
      var keyLength, itemsKey, version;
      return regeneratorRuntime.async(function generateNewItemsKeyContent$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              keyLength = this.constructor.encryptionKeyLength();
              _context.next = 3;
              return regeneratorRuntime.awrap(this.crypto.generateRandomKey(keyLength));

            case 3:
              itemsKey = _context.sent;
              version = this.constructor.versionString();
              return _context.abrupt("return", {
                itemsKey: itemsKey,
                version: version
              });

            case 6:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "createRootKey",
    value: function createRootKey(_ref) {
      var identifier, password, pwCost, pwNonce, pwSalt, key, keyParams;
      return regeneratorRuntime.async(function createRootKey$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              identifier = _ref.identifier, password = _ref.password;
              pwCost = this.constructor.pwCost();
              _context2.next = 4;
              return regeneratorRuntime.awrap(this.crypto.generateRandomKey(SALT_SEED_LENGTH));

            case 4:
              pwNonce = _context2.sent;
              _context2.next = 7;
              return regeneratorRuntime.awrap(this.crypto.unsafe_sha1(identifier + 'SN' + pwNonce));

            case 7:
              pwSalt = _context2.sent;
              _context2.next = 10;
              return regeneratorRuntime.awrap(this.deriveKey({
                password: password,
                pwSalt: pwSalt,
                pwCost: pwCost
              }));

            case 10:
              key = _context2.sent;
              keyParams = Object(_Protocol_key_params__WEBPACK_IMPORTED_MODULE_1__["CreateKeyParams"])({
                email: identifier,
                pw_cost: pwCost,
                pw_nonce: pwNonce,
                pw_salt: pwSalt,
                version: _Protocol_versions__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V001
              });
              return _context2.abrupt("return", {
                key: key,
                keyParams: keyParams
              });

            case 13:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "computeRootKey",
    value: function computeRootKey(_ref2) {
      var password, keyParams, key;
      return regeneratorRuntime.async(function computeRootKey$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              password = _ref2.password, keyParams = _ref2.keyParams;

              if (keyParams.isKeyParamsObject) {
                _context3.next = 3;
                break;
              }

              throw 'Attempting to compute root key with non params object.';

            case 3:
              _context3.next = 5;
              return regeneratorRuntime.awrap(this.deriveKey({
                password: password,
                pwSalt: keyParams.salt,
                pwCost: keyParams.kdfIterations
              }));

            case 5:
              key = _context3.sent;
              return _context3.abrupt("return", key);

            case 7:
            case "end":
              return _context3.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "decryptString",
    value: function decryptString(ciphertext, key) {
      return regeneratorRuntime.async(function decryptString$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              return _context4.abrupt("return", this.crypto.aes256CbcDecrypt(ciphertext, key, NO_IV));

            case 1:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "encryptString",
    value: function encryptString(text, key) {
      return regeneratorRuntime.async(function encryptString$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              return _context5.abrupt("return", this.crypto.aes256CbcEncrypt(text, key, NO_IV));

            case 1:
            case "end":
              return _context5.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "generateEncryptionParameters",
    value: function generateEncryptionParameters(_ref3) {
      var _CreateEncryptionPara;

      var payload, key, format, itemKey, encItemKey, ek, ak, contentCiphertext, ciphertext, authHash;
      return regeneratorRuntime.async(function generateEncryptionParameters$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              payload = _ref3.payload, key = _ref3.key, format = _ref3.format;

              if (!(format === _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBareObject || format === _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBase64String)) {
                _context6.next = 3;
                break;
              }

              return _context6.abrupt("return", _get(_getPrototypeOf(SNProtocolOperator001.prototype), "generateEncryptionParameters", this).call(this, {
                payload: payload,
                key: key,
                format: format
              }));

            case 3:
              if (!(format !== _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].EncryptedString)) {
                _context6.next = 5;
                break;
              }

              throw "Unsupport format for generateEncryptionParameters ".concat(format);

            case 5:
              if (!(!key || !key.itemsKey)) {
                _context6.next = 7;
                break;
              }

              throw 'Attempting to generateEncryptionParameters with no itemsKey.';

            case 7:
              _context6.next = 9;
              return regeneratorRuntime.awrap(this.crypto.generateRandomKey(ENCRYPTION_KEY_LENGTH * 2));

            case 9:
              itemKey = _context6.sent;
              _context6.next = 12;
              return regeneratorRuntime.awrap(this.encryptString(itemKey, key.itemsKey));

            case 12:
              encItemKey = _context6.sent;
              _context6.next = 15;
              return regeneratorRuntime.awrap(this.firstHalfOfKey(itemKey));

            case 15:
              ek = _context6.sent;
              _context6.next = 18;
              return regeneratorRuntime.awrap(this.secondHalfOfKey(itemKey));

            case 18:
              ak = _context6.sent;
              _context6.next = 21;
              return regeneratorRuntime.awrap(this.encryptString(JSON.stringify(payload.content), ek));

            case 21:
              contentCiphertext = _context6.sent;
              ciphertext = key.version + contentCiphertext;
              _context6.next = 25;
              return regeneratorRuntime.awrap(this.crypto.hmac256(ciphertext, ak));

            case 25:
              authHash = _context6.sent;
              return _context6.abrupt("return", Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_4__["CreateEncryptionParameters"])((_CreateEncryptionPara = {}, _defineProperty(_CreateEncryptionPara, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ItemsKeyId, key.isItemsKey ? key.uuid : null), _defineProperty(_CreateEncryptionPara, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].Content, ciphertext), _defineProperty(_CreateEncryptionPara, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].EncItemKey, encItemKey), _defineProperty(_CreateEncryptionPara, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].Legacy003AuthHash, authHash), _CreateEncryptionPara)));

            case 27:
            case "end":
              return _context6.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "generateDecryptedParameters",
    value: function generateDecryptedParameters(_ref4) {
      var encryptedParameters, key, format, encryptedItemKey, itemKeyComponents, _override, itemKey, _override2, ek, itemParams, _override3, content, _override4, _override5;

      return regeneratorRuntime.async(function generateDecryptedParameters$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              encryptedParameters = _ref4.encryptedParameters, key = _ref4.key;
              format = encryptedParameters.getContentFormat();

              if (!(format === _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBareObject || format === _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBase64String)) {
                _context7.next = 4;
                break;
              }

              return _context7.abrupt("return", _get(_getPrototypeOf(SNProtocolOperator001.prototype), "generateDecryptedParameters", this).call(this, {
                encryptedParameters: encryptedParameters,
                key: key
              }));

            case 4:
              if (encryptedParameters.enc_item_key) {
                _context7.next = 7;
                break;
              }

              console.error("Missing item encryption key, skipping decryption.");
              return _context7.abrupt("return", encryptedParameters);

            case 7:
              /** Decrypt encrypted key */
              encryptedItemKey = encryptedParameters.enc_item_key;
              encryptedItemKey = _Protocol_versions__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V001 + encryptedItemKey;
              itemKeyComponents = this.encryptionComponentsFromString(encryptedItemKey, key.itemsKey); // return if uuid in auth hash does not match item uuid. Signs of tampering.

              if (!(itemKeyComponents.uuid && itemKeyComponents.uuid !== encryptedParameters.uuid)) {
                _context7.next = 13;
                break;
              }

              console.error("Item key params UUID does not match item UUID");
              return _context7.abrupt("return", Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_4__["CopyEncryptionParameters"])({
                encryptionParameters: encryptedParameters,
                override: (_override = {}, _defineProperty(_override, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecrypting, true), _defineProperty(_override, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecryptingChanged, !encryptedParameters.errorDecrypting), _override)
              }));

            case 13:
              _context7.next = 15;
              return regeneratorRuntime.awrap(this.decryptString(itemKeyComponents.contentCiphertext, itemKeyComponents.encryptionKey));

            case 15:
              itemKey = _context7.sent;

              if (itemKey) {
                _context7.next = 19;
                break;
              }

              console.error("Error decrypting parameters", encryptedParameters);
              return _context7.abrupt("return", Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_4__["CopyEncryptionParameters"])({
                encryptionParameters: encryptedParameters,
                override: (_override2 = {}, _defineProperty(_override2, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecrypting, true), _defineProperty(_override2, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecryptingChanged, !encryptedParameters.errorDecrypting), _override2)
              }));

            case 19:
              _context7.next = 21;
              return regeneratorRuntime.awrap(this.firstHalfOfKey(itemKey));

            case 21:
              ek = _context7.sent;
              itemParams = this.encryptionComponentsFromString(encryptedParameters.content, ek); // return if uuid in auth hash does not match item uuid. Signs of tampering.

              if (!(itemParams.uuid && itemParams.uuid !== encryptedParameters.uuid)) {
                _context7.next = 25;
                break;
              }

              return _context7.abrupt("return", Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_4__["CopyEncryptionParameters"])({
                encryptionParameters: encryptedParameters,
                override: (_override3 = {}, _defineProperty(_override3, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecrypting, true), _defineProperty(_override3, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecryptingChanged, !encryptedParameters.errorDecrypting), _override3)
              }));

            case 25:
              _context7.next = 27;
              return regeneratorRuntime.awrap(this.decryptString(itemParams.contentCiphertext, itemParams.encryptionKey));

            case 27:
              content = _context7.sent;

              if (content) {
                _context7.next = 32;
                break;
              }

              return _context7.abrupt("return", Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_4__["CopyEncryptionParameters"])({
                encryptionParameters: encryptedParameters,
                override: (_override4 = {}, _defineProperty(_override4, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecrypting, true), _defineProperty(_override4, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecryptingChanged, !encryptedParameters.errorDecrypting), _override4)
              }));

            case 32:
              return _context7.abrupt("return", Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_4__["CopyEncryptionParameters"])({
                encryptionParameters: encryptedParameters,
                override: (_override5 = {}, _defineProperty(_override5, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].Content, JSON.parse(content)), _defineProperty(_override5, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecrypting, false), _defineProperty(_override5, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecryptingChanged, encryptedParameters.errorDecrypting === true), _defineProperty(_override5, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].WaitingForKey, false), _override5)
              }));

            case 33:
            case "end":
              return _context7.stop();
          }
        }
      }, null, this);
    }
    /**
     * @private
     */

  }, {
    key: "encryptionComponentsFromString",
    value: function encryptionComponentsFromString(string, encryptionKey) {
      var encryptionVersion = string.substring(0, _Protocol_versions__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].VersionLength);
      return {
        contentCiphertext: string.substring(_Protocol_versions__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].VersionLength, string.length),
        encryptionVersion: encryptionVersion,
        encryptionKey: encryptionKey
      };
    }
  }, {
    key: "deriveKey",
    value: function deriveKey() {
      var _ref5,
          password,
          pwSalt,
          pwCost,
          derivedKey,
          partitions,
          key,
          _args8 = arguments;

      return regeneratorRuntime.async(function deriveKey$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              _ref5 = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : {}, password = _ref5.password, pwSalt = _ref5.pwSalt, pwCost = _ref5.pwCost;
              _context8.next = 3;
              return regeneratorRuntime.awrap(this.crypto.pbkdf2({
                password: password,
                salt: pwSalt,
                iterations: pwCost,
                length: PBKDF2_OUTPUT_KEY_LENGTH
              }));

            case 3:
              derivedKey = _context8.sent;
              _context8.next = 6;
              return regeneratorRuntime.awrap(this.splitKey({
                key: derivedKey,
                numParts: 2
              }));

            case 6:
              partitions = _context8.sent;
              _context8.next = 9;
              return regeneratorRuntime.awrap(_Protocol_root_key__WEBPACK_IMPORTED_MODULE_6__["SNRootKey"].Create({
                content: {
                  serverPassword: partitions[0],
                  masterKey: partitions[1],
                  version: this.constructor.versionString()
                }
              }));

            case 9:
              key = _context8.sent;
              return _context8.abrupt("return", key);

            case 11:
            case "end":
              return _context8.stop();
          }
        }
      }, null, this);
    }
  }], [{
    key: "pwCost",
    value: function pwCost() {
      return PBKDF2_ITERATIONS;
    }
  }, {
    key: "versionString",
    value: function versionString() {
      return _Protocol_versions__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V001;
    }
  }, {
    key: "encryptionKeyLength",
    value: function encryptionKeyLength() {
      return ENCRYPTION_KEY_LENGTH;
    }
  }]);

  return SNProtocolOperator001;
}(_Protocol_operator_operator__WEBPACK_IMPORTED_MODULE_0__["SNProtocolOperator"]);

/***/ }),

/***/ "./lib/protocol/operator/002/operator_002.js":
/*!***************************************************!*\
  !*** ./lib/protocol/operator/002/operator_002.js ***!
  \***************************************************/
/*! exports provided: SNProtocolOperator002 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNProtocolOperator002", function() { return SNProtocolOperator002; });
/* harmony import */ var _Protocol_key_params__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Protocol/key_params */ "./lib/protocol/key_params.js");
/* harmony import */ var _Protocol_operator_001_operator_001__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Protocol/operator/001/operator_001 */ "./lib/protocol/operator/001/operator_001.js");
/* harmony import */ var _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads/fields */ "./lib/protocol/payloads/fields.js");
/* harmony import */ var _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads/formats */ "./lib/protocol/payloads/formats.js");
/* harmony import */ var _Payloads_generator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Payloads/generator */ "./lib/protocol/payloads/generator.js");
/* harmony import */ var _Protocol_versions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Protocol/versions */ "./lib/protocol/versions.js");
/* harmony import */ var _Protocol_root_key__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @Protocol/root_key */ "./lib/protocol/root_key.js");
/* harmony import */ var sncrypto__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! sncrypto */ "../sncrypto/dist/sncrypto.js");
/* harmony import */ var sncrypto__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(sncrypto__WEBPACK_IMPORTED_MODULE_7__);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }








 // eslint-disable-next-line no-unused-vars

var ENCRYPTION_ALGORITHM = 'AES-CBC';
var ENCRYPTION_KEY_LENGTH = 256;
var ENCRYPTION_IV_LENGTH = 128;
var PBKDF2_OUTPUT_KEY_LENGTH = 768;
var PBKDF2_ITERATIONS = 3000;
var SALT_SEED_LENGTH = 128;
var SNProtocolOperator002 =
/*#__PURE__*/
function (_SNProtocolOperator) {
  _inherits(SNProtocolOperator002, _SNProtocolOperator);

  function SNProtocolOperator002() {
    _classCallCheck(this, SNProtocolOperator002);

    return _possibleConstructorReturn(this, _getPrototypeOf(SNProtocolOperator002).apply(this, arguments));
  }

  _createClass(SNProtocolOperator002, [{
    key: "generateNewItemsKeyContent",

    /** @override */
    value: function generateNewItemsKeyContent() {
      var keyLength, itemsKey, authKey, version;
      return regeneratorRuntime.async(function generateNewItemsKeyContent$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              keyLength = this.constructor.encryptionKeyLength();
              _context.next = 3;
              return regeneratorRuntime.awrap(this.crypto.generateRandomKey(keyLength));

            case 3:
              itemsKey = _context.sent;
              _context.next = 6;
              return regeneratorRuntime.awrap(this.crypto.generateRandomKey(keyLength));

            case 6:
              authKey = _context.sent;
              version = this.constructor.versionString();
              return _context.abrupt("return", {
                itemsKey: itemsKey,
                dataAuthenticationKey: authKey,
                version: version
              });

            case 9:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "createRootKey",
    value: function createRootKey(_ref) {
      var identifier, password, pwCost, pwNonce, pwSalt, key, keyParams;
      return regeneratorRuntime.async(function createRootKey$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              identifier = _ref.identifier, password = _ref.password;
              pwCost = this.constructor.pwCost();
              _context2.next = 4;
              return regeneratorRuntime.awrap(this.crypto.generateRandomKey(SALT_SEED_LENGTH));

            case 4:
              pwNonce = _context2.sent;
              _context2.next = 7;
              return regeneratorRuntime.awrap(this.crypto.unsafe_sha1(identifier + ':' + pwNonce));

            case 7:
              pwSalt = _context2.sent;
              _context2.next = 10;
              return regeneratorRuntime.awrap(this.deriveKey({
                password: password,
                pwSalt: pwSalt,
                pwCost: pwCost
              }));

            case 10:
              key = _context2.sent;
              keyParams = Object(_Protocol_key_params__WEBPACK_IMPORTED_MODULE_0__["CreateKeyParams"])({
                email: identifier,
                pw_cost: pwCost,
                pw_nonce: pwNonce,
                pw_salt: pwSalt,
                version: _Protocol_versions__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V002
              });
              return _context2.abrupt("return", {
                key: key,
                keyParams: keyParams
              });

            case 13:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "computeRootKey",
    value: function computeRootKey(_ref2) {
      var password, keyParams, key;
      return regeneratorRuntime.async(function computeRootKey$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              password = _ref2.password, keyParams = _ref2.keyParams;

              if (keyParams.isKeyParamsObject) {
                _context3.next = 3;
                break;
              }

              throw 'Attempting to compute root key with non params object.';

            case 3:
              _context3.next = 5;
              return regeneratorRuntime.awrap(this.deriveKey({
                password: password,
                pwSalt: keyParams.salt,
                pwCost: keyParams.kdfIterations
              }));

            case 5:
              key = _context3.sent;
              return _context3.abrupt("return", key);

            case 7:
            case "end":
              return _context3.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "decryptString",
    value: function decryptString(text, rawKey, iv) {
      return regeneratorRuntime.async(function decryptString$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              return _context4.abrupt("return", this.crypto.aes256CbcDecrypt(text, rawKey, iv));

            case 1:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "encryptString",
    value: function encryptString(text, rawKey, iv) {
      return regeneratorRuntime.async(function encryptString$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              return _context5.abrupt("return", this.crypto.aes256CbcEncrypt(text, rawKey, iv));

            case 1:
            case "end":
              return _context5.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "encryptTextParams",
    value: function encryptTextParams(string, encryptionKey, authKey, uuid, version) {
      var iv, contentCiphertext, ciphertextToAuth, authHash, fullCiphertext;
      return regeneratorRuntime.async(function encryptTextParams$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return regeneratorRuntime.awrap(this.crypto.generateRandomKey(ENCRYPTION_IV_LENGTH));

            case 2:
              iv = _context6.sent;
              _context6.next = 5;
              return regeneratorRuntime.awrap(this.encryptString(string, encryptionKey, iv));

            case 5:
              contentCiphertext = _context6.sent;
              ciphertextToAuth = [version, uuid, iv, contentCiphertext].join(':');
              _context6.next = 9;
              return regeneratorRuntime.awrap(this.crypto.hmac256(ciphertextToAuth, authKey));

            case 9:
              authHash = _context6.sent;
              fullCiphertext = [version, authHash, uuid, iv, contentCiphertext].join(':');
              return _context6.abrupt("return", fullCiphertext);

            case 12:
            case "end":
              return _context6.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "decryptTextParams",
    value: function decryptTextParams(_ref3) {
      var ciphertextToAuth, contentCiphertext, encryptionKey, iv, authHash, authKey, localAuthHash;
      return regeneratorRuntime.async(function decryptTextParams$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              ciphertextToAuth = _ref3.ciphertextToAuth, contentCiphertext = _ref3.contentCiphertext, encryptionKey = _ref3.encryptionKey, iv = _ref3.iv, authHash = _ref3.authHash, authKey = _ref3.authKey;

              if (encryptionKey) {
                _context7.next = 3;
                break;
              }

              throw 'Attempting to decryptTextParams with null encryptionKey';

            case 3:
              _context7.next = 5;
              return regeneratorRuntime.awrap(this.crypto.hmac256(ciphertextToAuth, authKey));

            case 5:
              localAuthHash = _context7.sent;

              if (!(this.crypto.timingSafeEqual(authHash, localAuthHash) === false)) {
                _context7.next = 9;
                break;
              }

              console.error("Auth hash does not match, returning null.");
              return _context7.abrupt("return", null);

            case 9:
              return _context7.abrupt("return", this.decryptString(contentCiphertext, encryptionKey, iv));

            case 10:
            case "end":
              return _context7.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "generateEncryptionParameters",
    value: function generateEncryptionParameters(_ref4) {
      var _CreateEncryptionPara;

      var payload, key, format, itemKey, encItemKey, ek, ak, ciphertext;
      return regeneratorRuntime.async(function generateEncryptionParameters$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              payload = _ref4.payload, key = _ref4.key, format = _ref4.format;

              if (!(format === _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBareObject || format === _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBase64String)) {
                _context8.next = 3;
                break;
              }

              return _context8.abrupt("return", _get(_getPrototypeOf(SNProtocolOperator002.prototype), "generateEncryptionParameters", this).call(this, {
                payload: payload,
                key: key,
                format: format
              }));

            case 3:
              if (!(format !== _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].EncryptedString)) {
                _context8.next = 5;
                break;
              }

              throw "Unsupport format for generateEncryptionParameters ".concat(format);

            case 5:
              if (!(!key || !key.itemsKey)) {
                _context8.next = 7;
                break;
              }

              throw 'Attempting to generateEncryptionParameters with no itemsKey.';

            case 7:
              _context8.next = 9;
              return regeneratorRuntime.awrap(this.crypto.generateRandomKey(ENCRYPTION_KEY_LENGTH * 2));

            case 9:
              itemKey = _context8.sent;
              _context8.next = 12;
              return regeneratorRuntime.awrap(this.encryptTextParams(itemKey, key.itemsKey, key.dataAuthenticationKey, payload.uuid, key.version));

            case 12:
              encItemKey = _context8.sent;
              _context8.next = 15;
              return regeneratorRuntime.awrap(this.firstHalfOfKey(itemKey));

            case 15:
              ek = _context8.sent;
              _context8.next = 18;
              return regeneratorRuntime.awrap(this.secondHalfOfKey(itemKey));

            case 18:
              ak = _context8.sent;
              _context8.next = 21;
              return regeneratorRuntime.awrap(this.encryptTextParams(JSON.stringify(payload.content), ek, ak, payload.uuid, key.version));

            case 21:
              ciphertext = _context8.sent;
              return _context8.abrupt("return", Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_4__["CreateEncryptionParameters"])((_CreateEncryptionPara = {}, _defineProperty(_CreateEncryptionPara, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ItemsKeyId, key.isItemsKey ? key.uuid : null), _defineProperty(_CreateEncryptionPara, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].Content, ciphertext), _defineProperty(_CreateEncryptionPara, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].EncItemKey, encItemKey), _CreateEncryptionPara)));

            case 23:
            case "end":
              return _context8.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "generateDecryptedParameters",
    value: function generateDecryptedParameters(_ref5) {
      var encryptedParameters, key, format, encryptedItemKey, itemKeyComponents, itemKey, _override, ek, ak, itemParams, content, _override2, _override3, authParams;

      return regeneratorRuntime.async(function generateDecryptedParameters$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              encryptedParameters = _ref5.encryptedParameters, key = _ref5.key;
              format = encryptedParameters.getContentFormat();

              if (!(format === _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBareObject || format === _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBase64String)) {
                _context9.next = 4;
                break;
              }

              return _context9.abrupt("return", _get(_getPrototypeOf(SNProtocolOperator002.prototype), "generateDecryptedParameters", this).call(this, {
                encryptedParameters: encryptedParameters,
                key: key
              }));

            case 4:
              if (encryptedParameters.enc_item_key) {
                _context9.next = 7;
                break;
              }

              console.error("Missing item encryption key, skipping decryption.");
              return _context9.abrupt("return", encryptedParameters);

            case 7:
              if (!(!key || !key.itemsKey)) {
                _context9.next = 9;
                break;
              }

              throw 'Attempting to generateDecryptedParameters with no itemsKey.';

            case 9:
              // decrypt encrypted key
              encryptedItemKey = encryptedParameters.enc_item_key;
              itemKeyComponents = this.encryptionComponentsFromString(encryptedItemKey, key.itemsKey, key.dataAuthenticationKey);
              _context9.next = 13;
              return regeneratorRuntime.awrap(this.decryptTextParams(itemKeyComponents));

            case 13:
              itemKey = _context9.sent;

              if (itemKey) {
                _context9.next = 17;
                break;
              }

              console.error("Error decrypting item_key parameters", encryptedParameters);
              return _context9.abrupt("return", Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_4__["CopyEncryptionParameters"])({
                encryptionParameters: encryptedParameters,
                override: (_override = {}, _defineProperty(_override, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecrypting, true), _defineProperty(_override, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecryptingChanged, !encryptedParameters.errorDecrypting), _override)
              }));

            case 17:
              _context9.next = 19;
              return regeneratorRuntime.awrap(this.firstHalfOfKey(itemKey));

            case 19:
              ek = _context9.sent;
              _context9.next = 22;
              return regeneratorRuntime.awrap(this.secondHalfOfKey(itemKey));

            case 22:
              ak = _context9.sent;
              itemParams = this.encryptionComponentsFromString(encryptedParameters.content, ek, ak);
              _context9.next = 26;
              return regeneratorRuntime.awrap(this.decryptTextParams(itemParams));

            case 26:
              content = _context9.sent;

              if (content) {
                _context9.next = 31;
                break;
              }

              return _context9.abrupt("return", Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_4__["CopyEncryptionParameters"])({
                encryptionParameters: encryptedParameters,
                override: (_override2 = {}, _defineProperty(_override2, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecrypting, true), _defineProperty(_override2, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecryptingChanged, !encryptedParameters.errorDecrypting), _override2)
              }));

            case 31:
              _context9.prev = 31;
              _context9.t0 = JSON;
              _context9.next = 35;
              return regeneratorRuntime.awrap(Object(sncrypto__WEBPACK_IMPORTED_MODULE_7__["base64Decode"])(itemParams.authParams));

            case 35:
              _context9.t1 = _context9.sent;
              authParams = _context9.t0.parse.call(_context9.t0, _context9.t1);
              _context9.next = 41;
              break;

            case 39:
              _context9.prev = 39;
              _context9.t2 = _context9["catch"](31);

            case 41:
              return _context9.abrupt("return", Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_4__["CopyEncryptionParameters"])({
                encryptionParameters: encryptedParameters,
                override: (_override3 = {}, _defineProperty(_override3, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].Content, JSON.parse(content)), _defineProperty(_override3, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].Legacy003AuthParams, authParams), _defineProperty(_override3, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecrypting, false), _defineProperty(_override3, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecryptingChanged, encryptedParameters.errorDecrypting === true), _defineProperty(_override3, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].WaitingForKey, false), _override3)
              }));

            case 42:
            case "end":
              return _context9.stop();
          }
        }
      }, null, this, [[31, 39]]);
    }
    /** @protected */

  }, {
    key: "deriveKey",
    value: function deriveKey() {
      var _ref6,
          password,
          pwSalt,
          pwCost,
          derivedKey,
          partitions,
          key,
          _args10 = arguments;

      return regeneratorRuntime.async(function deriveKey$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              _ref6 = _args10.length > 0 && _args10[0] !== undefined ? _args10[0] : {}, password = _ref6.password, pwSalt = _ref6.pwSalt, pwCost = _ref6.pwCost;

              if (!(!pwCost || !pwSalt || !password)) {
                _context10.next = 3;
                break;
              }

              throw 'Attempting to 003.deriveKey with invalid parameters';

            case 3:
              _context10.next = 5;
              return regeneratorRuntime.awrap(this.crypto.pbkdf2({
                password: password,
                salt: pwSalt,
                iterations: pwCost,
                length: PBKDF2_OUTPUT_KEY_LENGTH
              }));

            case 5:
              derivedKey = _context10.sent;
              _context10.next = 8;
              return regeneratorRuntime.awrap(this.splitKey({
                key: derivedKey,
                numParts: 3
              }));

            case 8:
              partitions = _context10.sent;
              _context10.next = 11;
              return regeneratorRuntime.awrap(_Protocol_root_key__WEBPACK_IMPORTED_MODULE_6__["SNRootKey"].Create({
                content: {
                  serverPassword: partitions[0],
                  masterKey: partitions[1],
                  dataAuthenticationKey: partitions[2],
                  version: this.constructor.versionString()
                }
              }));

            case 11:
              key = _context10.sent;
              return _context10.abrupt("return", key);

            case 13:
            case "end":
              return _context10.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "encryptionComponentsFromString",
    value: function encryptionComponentsFromString(string, encryptionKey, authKey) {
      var components = string.split(':');
      return {
        encryptionVersion: components[0],
        authHash: components[1],
        uuid: components[2],
        iv: components[3],
        contentCiphertext: components[4],
        ciphertextToAuth: [components[0], components[2], components[3], components[4]].join(':'),
        encryptionKey: encryptionKey,
        authKey: authKey
      };
    }
  }], [{
    key: "pwCost",
    value: function pwCost() {
      return PBKDF2_ITERATIONS;
    }
  }, {
    key: "versionString",
    value: function versionString() {
      return _Protocol_versions__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V002;
    }
  }, {
    key: "encryptionKeyLength",
    value: function encryptionKeyLength() {
      return ENCRYPTION_KEY_LENGTH;
    }
  }]);

  return SNProtocolOperator002;
}(_Protocol_operator_001_operator_001__WEBPACK_IMPORTED_MODULE_1__["SNProtocolOperator001"]);

/***/ }),

/***/ "./lib/protocol/operator/003/operator_003.js":
/*!***************************************************!*\
  !*** ./lib/protocol/operator/003/operator_003.js ***!
  \***************************************************/
/*! exports provided: SNProtocolOperator003 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNProtocolOperator003", function() { return SNProtocolOperator003; });
/* harmony import */ var _Protocol_key_params__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Protocol/key_params */ "./lib/protocol/key_params.js");
/* harmony import */ var _Protocol_operator_002_operator_002__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Protocol/operator/002/operator_002 */ "./lib/protocol/operator/002/operator_002.js");
/* harmony import */ var _Protocol_versions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Protocol/versions */ "./lib/protocol/versions.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }




var PBKDF2_ITERATIONS = 110000;
var SALT_SEED_LENGTH = 256;
var SNProtocolOperator003 =
/*#__PURE__*/
function (_SNProtocolOperator) {
  _inherits(SNProtocolOperator003, _SNProtocolOperator);

  function SNProtocolOperator003() {
    _classCallCheck(this, SNProtocolOperator003);

    return _possibleConstructorReturn(this, _getPrototypeOf(SNProtocolOperator003).apply(this, arguments));
  }

  _createClass(SNProtocolOperator003, [{
    key: "computeRootKey",

    /**
     * @public
     */
    value: function computeRootKey(_ref) {
      var password, keyParams, salt, key;
      return regeneratorRuntime.async(function computeRootKey$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              password = _ref.password, keyParams = _ref.keyParams;

              if (keyParams.isKeyParamsObject) {
                _context.next = 3;
                break;
              }

              throw 'Attempting to compute root key with non params object.';

            case 3:
              _context.next = 5;
              return regeneratorRuntime.awrap(this.generateSalt(keyParams.identifier, keyParams.version, keyParams.kdfIterations, keyParams.seed));

            case 5:
              salt = _context.sent;
              _context.next = 8;
              return regeneratorRuntime.awrap(this.deriveKey({
                password: password,
                pwSalt: salt,
                pwCost: keyParams.kdfIterations
              }));

            case 8:
              key = _context.sent;
              return _context.abrupt("return", key);

            case 10:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "createRootKey",
    value: function createRootKey(_ref2) {
      var identifier, password, version, pwCost, pwNonce, pwSalt, key, keyParams;
      return regeneratorRuntime.async(function createRootKey$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              identifier = _ref2.identifier, password = _ref2.password;
              version = this.constructor.versionString();
              pwCost = this.constructor.pwCost();
              _context2.next = 5;
              return regeneratorRuntime.awrap(this.crypto.generateRandomKey(SALT_SEED_LENGTH));

            case 5:
              pwNonce = _context2.sent;
              _context2.next = 8;
              return regeneratorRuntime.awrap(this.generateSalt(identifier, version, pwCost, pwNonce));

            case 8:
              pwSalt = _context2.sent;
              _context2.next = 11;
              return regeneratorRuntime.awrap(this.deriveKey({
                password: password,
                pwSalt: pwSalt,
                pwCost: pwCost
              }));

            case 11:
              key = _context2.sent;
              keyParams = Object(_Protocol_key_params__WEBPACK_IMPORTED_MODULE_0__["CreateKeyParams"])({
                identifier: identifier,
                pw_cost: pwCost,
                pw_nonce: pwNonce,
                version: version
              });
              return _context2.abrupt("return", {
                key: key,
                keyParams: keyParams
              });

            case 14:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
    /** @private */

  }, {
    key: "generateSalt",
    value: function generateSalt(identifier, version, cost, nonce) {
      var result;
      return regeneratorRuntime.async(function generateSalt$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return regeneratorRuntime.awrap(this.crypto.sha256([identifier, 'SF', version, cost, nonce].join(":")));

            case 2:
              result = _context3.sent;
              return _context3.abrupt("return", result);

            case 4:
            case "end":
              return _context3.stop();
          }
        }
      }, null, this);
    }
  }], [{
    key: "pwCost",
    value: function pwCost() {
      return PBKDF2_ITERATIONS;
    }
  }, {
    key: "versionString",
    value: function versionString() {
      return _Protocol_versions__WEBPACK_IMPORTED_MODULE_2__["ProtocolVersions"].V003;
    }
  }]);

  return SNProtocolOperator003;
}(_Protocol_operator_002_operator_002__WEBPACK_IMPORTED_MODULE_1__["SNProtocolOperator002"]);

/***/ }),

/***/ "./lib/protocol/operator/004/operator_004.js":
/*!***************************************************!*\
  !*** ./lib/protocol/operator/004/operator_004.js ***!
  \***************************************************/
/*! exports provided: SNProtocolOperator004 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNProtocolOperator004", function() { return SNProtocolOperator004; });
/* harmony import */ var _Protocol_key_params__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Protocol/key_params */ "./lib/protocol/key_params.js");
/* harmony import */ var _Protocol_operator_003_operator_003__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Protocol/operator/003/operator_003 */ "./lib/protocol/operator/003/operator_003.js");
/* harmony import */ var _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads/fields */ "./lib/protocol/payloads/fields.js");
/* harmony import */ var _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads/formats */ "./lib/protocol/payloads/formats.js");
/* harmony import */ var _Payloads_generator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Payloads/generator */ "./lib/protocol/payloads/generator.js");
/* harmony import */ var _Protocol_versions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Protocol/versions */ "./lib/protocol/versions.js");
/* harmony import */ var _Protocol_root_key__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @Protocol/root_key */ "./lib/protocol/root_key.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }








var ARGON2_MEMLIMIT = 67108864;
var ARGON2_OUTPUT_KEY_BYTES = 64;
var ARGON2_ITERATIONS = 5;
var ENCRYPTION_ALGORITHM = 'Xchacha20+Poly1305';
var ENCRYPTION_KEY_LENGTH = 256;
var ENCRYPTION_NONCE_LENGTH = 192;
var SALT_SEED_LENGTH = 256;
var SALT_LENGTH = 128;
var SNProtocolOperator004 =
/*#__PURE__*/
function (_SNProtocolOperator) {
  _inherits(SNProtocolOperator004, _SNProtocolOperator);

  function SNProtocolOperator004() {
    _classCallCheck(this, SNProtocolOperator004);

    return _possibleConstructorReturn(this, _getPrototypeOf(SNProtocolOperator004).apply(this, arguments));
  }

  _createClass(SNProtocolOperator004, [{
    key: "generateNewItemsKeyContent",

    /** @override */
    value: function generateNewItemsKeyContent() {
      var itemsKey, version;
      return regeneratorRuntime.async(function generateNewItemsKeyContent$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return regeneratorRuntime.awrap(this.crypto.generateRandomKey(ENCRYPTION_KEY_LENGTH));

            case 2:
              itemsKey = _context.sent;
              version = this.constructor.versionString();
              return _context.abrupt("return", {
                itemsKey: itemsKey,
                version: version
              });

            case 5:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
    /**
     * We require both a client-side component and a server-side component in generating a salt.
     * This way, a comprimised server cannot benefit from sending the same seed value for every user.
     * We mix a client-controlled value that is globally unique (their identifier), with a server controlled value
     * to produce a salt for our KDF.
    */

  }, {
    key: "generateSalt",
    value: function generateSalt(_ref) {
      var identifier, seed, result;
      return regeneratorRuntime.async(function generateSalt$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              identifier = _ref.identifier, seed = _ref.seed;
              _context2.next = 3;
              return regeneratorRuntime.awrap(this.crypto.sha256([identifier, seed].join(":")));

            case 3:
              result = _context2.sent;
              return _context2.abrupt("return", result.substring(result, SALT_LENGTH / 2 / 2));

            case 5:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "computeRootKey",
    value: function computeRootKey(_ref2) {
      var password, keyParams, salt, key;
      return regeneratorRuntime.async(function computeRootKey$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              password = _ref2.password, keyParams = _ref2.keyParams;

              if (keyParams.isKeyParamsObject) {
                _context3.next = 3;
                break;
              }

              throw 'Attempting to compute root key with non params object.';

            case 3:
              _context3.next = 5;
              return regeneratorRuntime.awrap(this.generateSalt({
                identifier: keyParams.identifier,
                seed: keyParams.seed
              }));

            case 5:
              salt = _context3.sent;
              _context3.next = 8;
              return regeneratorRuntime.awrap(this.deriveKey({
                password: password,
                salt: salt,
                iterations: keyParams.kdfIterations
              }));

            case 8:
              key = _context3.sent;
              return _context3.abrupt("return", key);

            case 10:
            case "end":
              return _context3.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "createRootKey",
    value: function createRootKey(_ref3) {
      var identifier, password, version, iterations, seed, salt, key, keyParams;
      return regeneratorRuntime.async(function createRootKey$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              identifier = _ref3.identifier, password = _ref3.password;
              version = this.constructor.versionString();
              iterations = this.constructor.kdfIterations();
              _context4.next = 5;
              return regeneratorRuntime.awrap(this.crypto.generateRandomKey(SALT_SEED_LENGTH));

            case 5:
              seed = _context4.sent;
              _context4.next = 8;
              return regeneratorRuntime.awrap(this.generateSalt({
                identifier: identifier,
                seed: seed
              }));

            case 8:
              salt = _context4.sent;
              _context4.next = 11;
              return regeneratorRuntime.awrap(this.deriveKey({
                password: password,
                salt: salt,
                iterations: iterations
              }));

            case 11:
              key = _context4.sent;
              keyParams = Object(_Protocol_key_params__WEBPACK_IMPORTED_MODULE_0__["CreateKeyParams"])({
                identifier: identifier,
                pw_cost: iterations,
                pw_nonce: seed,
                version: version
              });
              return _context4.abrupt("return", {
                key: key,
                keyParams: keyParams
              });

            case 14:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this);
    }
    /**
     * @param plaintext  The plaintext to encrypt.
     * @param rawKey  The key to use to encrypt the plaintext.
     * @param nonce  The nonce for encryption.
     * @param aad  JavaScript object (will be stringified) representing
                  'Additional authenticated data': data you want to be included in authentication.
     */

  }, {
    key: "encryptString",
    value: function encryptString(_ref4) {
      var plaintext, rawKey, nonce, aad;
      return regeneratorRuntime.async(function encryptString$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              plaintext = _ref4.plaintext, rawKey = _ref4.rawKey, nonce = _ref4.nonce, aad = _ref4.aad;

              if (nonce) {
                _context5.next = 3;
                break;
              }

              throw 'encryptString null nonce';

            case 3:
              if (rawKey) {
                _context5.next = 5;
                break;
              }

              throw 'encryptString null rawKey';

            case 5:
              return _context5.abrupt("return", this.crypto.xchacha20Encrypt(plaintext, nonce, rawKey, JSON.stringify(aad)));

            case 6:
            case "end":
              return _context5.stop();
          }
        }
      }, null, this);
    }
    /**
     * @param ciphertext  The encrypred text to decrypt.
     * @param rawKey  The key to use to decrypt the ciphertext.
     * @param nonce  The nonce for decryption.
     * @param aad  JavaScript object (will be stringified) representing
                  'Additional authenticated data' - data you want to be included in authentication.
     */

  }, {
    key: "decryptString",
    value: function decryptString(_ref5) {
      var ciphertext, rawKey, nonce, aad;
      return regeneratorRuntime.async(function decryptString$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              ciphertext = _ref5.ciphertext, rawKey = _ref5.rawKey, nonce = _ref5.nonce, aad = _ref5.aad;
              return _context6.abrupt("return", this.crypto.xchacha20Decrypt(ciphertext, nonce, rawKey, JSON.stringify(aad)));

            case 2:
            case "end":
              return _context6.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "generateEncryptedProtocolString",
    value: function generateEncryptedProtocolString(_ref6) {
      var plaintext, rawKey, itemUuid, nonce, version, ciphertext, payload;
      return regeneratorRuntime.async(function generateEncryptedProtocolString$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              plaintext = _ref6.plaintext, rawKey = _ref6.rawKey, itemUuid = _ref6.itemUuid;
              _context7.next = 3;
              return regeneratorRuntime.awrap(this.crypto.generateRandomKey(ENCRYPTION_NONCE_LENGTH));

            case 3:
              nonce = _context7.sent;
              version = this.constructor.versionString();
              _context7.next = 7;
              return regeneratorRuntime.awrap(this.encryptString({
                plaintext: plaintext,
                rawKey: rawKey,
                nonce: nonce,
                aad: {
                  u: itemUuid,
                  v: version
                }
              }));

            case 7:
              ciphertext = _context7.sent;
              payload = [version, nonce, ciphertext].join(':');
              return _context7.abrupt("return", payload);

            case 10:
            case "end":
              return _context7.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "generateEncryptionParameters",
    value: function generateEncryptionParameters(_ref7) {
      var _CreateEncryptionPara;

      var payload, key, format, itemKey, contentPlaintext, encryptedContentString, encryptedItemKey;
      return regeneratorRuntime.async(function generateEncryptionParameters$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              payload = _ref7.payload, key = _ref7.key, format = _ref7.format;

              if (!(format === _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBareObject || format === _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBase64String)) {
                _context8.next = 3;
                break;
              }

              return _context8.abrupt("return", _get(_getPrototypeOf(SNProtocolOperator004.prototype), "generateEncryptionParameters", this).call(this, {
                payload: payload,
                key: key,
                format: format
              }));

            case 3:
              if (!(format !== _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].EncryptedString)) {
                _context8.next = 5;
                break;
              }

              throw "Unsupport format for generateEncryptionParameters ".concat(format);

            case 5:
              if (!(!key || !key.itemsKey)) {
                _context8.next = 7;
                break;
              }

              throw 'Attempting to generateEncryptionParameters with no itemsKey.';

            case 7:
              _context8.next = 9;
              return regeneratorRuntime.awrap(this.crypto.generateRandomKey(ENCRYPTION_KEY_LENGTH));

            case 9:
              itemKey = _context8.sent;

              /** Encrypt content with item_key */
              contentPlaintext = JSON.stringify(payload.content);
              _context8.next = 13;
              return regeneratorRuntime.awrap(this.generateEncryptedProtocolString({
                plaintext: contentPlaintext,
                rawKey: itemKey
              }));

            case 13:
              encryptedContentString = _context8.sent;
              _context8.next = 16;
              return regeneratorRuntime.awrap(this.generateEncryptedProtocolString({
                plaintext: itemKey,
                rawKey: key.itemsKey
              }));

            case 16:
              encryptedItemKey = _context8.sent;
              return _context8.abrupt("return", Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_4__["CreateEncryptionParameters"])((_CreateEncryptionPara = {}, _defineProperty(_CreateEncryptionPara, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ItemsKeyId, key.isItemsKey ? key.uuid : null), _defineProperty(_CreateEncryptionPara, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].Content, encryptedContentString), _defineProperty(_CreateEncryptionPara, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].EncItemKey, encryptedItemKey), _CreateEncryptionPara)));

            case 18:
            case "end":
              return _context8.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "generateDecryptedParameters",
    value: function generateDecryptedParameters(_ref8) {
      var encryptedParameters, key, format, itemKeyComponents, itemKey, _override, contentComponents, content, _override2, _override3;

      return regeneratorRuntime.async(function generateDecryptedParameters$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              encryptedParameters = _ref8.encryptedParameters, key = _ref8.key;
              format = encryptedParameters.getContentFormat();

              if (!(format === _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBareObject || format === _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBase64String)) {
                _context9.next = 4;
                break;
              }

              return _context9.abrupt("return", _get(_getPrototypeOf(SNProtocolOperator004.prototype), "generateDecryptedParameters", this).call(this, {
                encryptedParameters: encryptedParameters,
                key: key
              }));

            case 4:
              if (!(!key || !key.itemsKey)) {
                _context9.next = 6;
                break;
              }

              throw 'Attempting to generateDecryptedParameters with no itemsKey.';

            case 6:
              /** Decrypt item_key payload. */
              itemKeyComponents = this.deconstructEncryptedPayloadString(encryptedParameters.enc_item_key);
              _context9.next = 9;
              return regeneratorRuntime.awrap(this.decryptString({
                ciphertext: itemKeyComponents.ciphertext,
                rawKey: key.itemsKey,
                nonce: itemKeyComponents.nonce,
                aad: {
                  u: itemKeyComponents.uuid,
                  v: itemKeyComponents.version
                }
              }));

            case 9:
              itemKey = _context9.sent;

              if (itemKey) {
                _context9.next = 13;
                break;
              }

              console.error('Error decrypting itemKey parameters', encryptedParameters);
              return _context9.abrupt("return", Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_4__["CopyEncryptionParameters"])({
                encryptionParameters: encryptedParameters,
                override: (_override = {}, _defineProperty(_override, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecrypting, true), _defineProperty(_override, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecryptingChanged, !encryptedParameters.errorDecrypting), _override)
              }));

            case 13:
              /** Decrypt content payload. */
              contentComponents = this.deconstructEncryptedPayloadString(encryptedParameters.content);
              _context9.next = 16;
              return regeneratorRuntime.awrap(this.decryptString({
                ciphertext: contentComponents.ciphertext,
                rawKey: itemKey,
                nonce: contentComponents.nonce,
                aad: {
                  u: contentComponents.uuid,
                  v: contentComponents.version
                }
              }));

            case 16:
              content = _context9.sent;

              if (content) {
                _context9.next = 21;
                break;
              }

              return _context9.abrupt("return", Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_4__["CopyEncryptionParameters"])({
                encryptionParameters: encryptedParameters,
                override: (_override2 = {}, _defineProperty(_override2, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecrypting, true), _defineProperty(_override2, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecryptingChanged, !encryptedParameters.errorDecrypting), _override2)
              }));

            case 21:
              return _context9.abrupt("return", Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_4__["CopyEncryptionParameters"])({
                encryptionParameters: encryptedParameters,
                override: (_override3 = {}, _defineProperty(_override3, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].Content, JSON.parse(content)), _defineProperty(_override3, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecrypting, false), _defineProperty(_override3, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecryptingChanged, encryptedParameters.errorDecrypting === true), _defineProperty(_override3, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].WaitingForKey, false), _override3)
              }));

            case 22:
            case "end":
              return _context9.stop();
          }
        }
      }, null, this);
    }
    /** @private */

  }, {
    key: "deconstructEncryptedPayloadString",
    value: function deconstructEncryptedPayloadString(payloadString) {
      var components = payloadString.split(':');
      return {
        version: components[0],
        nonce: components[1],
        ciphertext: components[2]
      };
    }
    /** @private */

  }, {
    key: "deriveKey",
    value: function deriveKey() {
      var _ref9,
          password,
          salt,
          iterations,
          derivedKey,
          partitions,
          masterKey,
          serverPassword,
          key,
          _args10 = arguments;

      return regeneratorRuntime.async(function deriveKey$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              _ref9 = _args10.length > 0 && _args10[0] !== undefined ? _args10[0] : {}, password = _ref9.password, salt = _ref9.salt, iterations = _ref9.iterations;

              if (!(!iterations || !salt || !password)) {
                _context10.next = 3;
                break;
              }

              throw 'Attempting to 004.deriveKey with invalid parameters';

            case 3:
              _context10.next = 5;
              return regeneratorRuntime.awrap(this.crypto.argon2({
                password: password,
                salt: salt,
                iterations: iterations,
                bytes: ARGON2_MEMLIMIT,
                length: ARGON2_OUTPUT_KEY_BYTES
              }));

            case 5:
              derivedKey = _context10.sent;
              _context10.next = 8;
              return regeneratorRuntime.awrap(this.splitKey({
                key: derivedKey,
                numParts: 2
              }));

            case 8:
              partitions = _context10.sent;
              masterKey = partitions[0];
              serverPassword = partitions[1];
              _context10.next = 13;
              return regeneratorRuntime.awrap(_Protocol_root_key__WEBPACK_IMPORTED_MODULE_6__["SNRootKey"].Create({
                content: {
                  masterKey: masterKey,
                  serverPassword: serverPassword,
                  version: this.constructor.versionString()
                }
              }));

            case 13:
              key = _context10.sent;
              return _context10.abrupt("return", key);

            case 15:
            case "end":
              return _context10.stop();
          }
        }
      }, null, this);
    }
  }], [{
    key: "versionString",

    /**
     * The protocol version. Will be prefixed to encrypted payloads.
     */
    value: function versionString() {
      return _Protocol_versions__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V004;
    }
  }, {
    key: "kdfIterations",
    value: function kdfIterations() {
      return ARGON2_ITERATIONS;
    }
  }, {
    key: "encryptionAlgorithm",
    value: function encryptionAlgorithm() {
      return ENCRYPTION_ALGORITHM;
    }
  }, {
    key: "encryptionKeyLength",
    value: function encryptionKeyLength() {
      return ENCRYPTION_KEY_LENGTH;
    }
  }]);

  return SNProtocolOperator004;
}(_Protocol_operator_003_operator_003__WEBPACK_IMPORTED_MODULE_1__["SNProtocolOperator003"]);

/***/ }),

/***/ "./lib/protocol/operator/operator.js":
/*!*******************************************!*\
  !*** ./lib/protocol/operator/operator.js ***!
  \*******************************************/
/*! exports provided: SNProtocolOperator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNProtocolOperator", function() { return SNProtocolOperator; });
/* harmony import */ var _Models_app_items_key__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Models/app/items_key */ "./lib/models/app/items_key.js");
/* harmony import */ var _Payloads_formats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Payloads/formats */ "./lib/protocol/payloads/formats.js");
/* harmony import */ var _Payloads_generator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads/generator */ "./lib/protocol/payloads/generator.js");
/* harmony import */ var _Protocol_versions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Protocol/versions */ "./lib/protocol/versions.js");
/* harmony import */ var sncrypto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! sncrypto */ "../sncrypto/dist/sncrypto.js");
/* harmony import */ var sncrypto__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(sncrypto__WEBPACK_IMPORTED_MODULE_4__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }






var SNProtocolOperator =
/*#__PURE__*/
function () {
  function SNProtocolOperator(crypto) {
    _classCallCheck(this, SNProtocolOperator);

    this.crypto = crypto;
  }

  _createClass(SNProtocolOperator, [{
    key: "firstHalfOfKey",
    value: function firstHalfOfKey(key) {
      return regeneratorRuntime.async(function firstHalfOfKey$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              return _context.abrupt("return", key.substring(0, key.length / 2));

            case 1:
            case "end":
              return _context.stop();
          }
        }
      });
    }
  }, {
    key: "secondHalfOfKey",
    value: function secondHalfOfKey(key) {
      return regeneratorRuntime.async(function secondHalfOfKey$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              return _context2.abrupt("return", key.substring(key.length / 2, key.length));

            case 1:
            case "end":
              return _context2.stop();
          }
        }
      });
    }
  }, {
    key: "splitKey",
    value: function splitKey(_ref) {
      var key, numParts, outputLength, partLength, parts, i, part;
      return regeneratorRuntime.async(function splitKey$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              key = _ref.key, numParts = _ref.numParts;
              outputLength = key.length;
              partLength = outputLength / numParts;
              parts = [];

              for (i = 0; i < numParts; i++) {
                part = key.slice(partLength * i, partLength * (i + 1));
                parts.push(part);
              }

              return _context3.abrupt("return", parts);

            case 6:
            case "end":
              return _context3.stop();
          }
        }
      });
    }
    /**
     * @protected
     */

  }, {
    key: "generateNewItemsKeyContent",
    value: function generateNewItemsKeyContent() {
      return regeneratorRuntime.async(function generateNewItemsKeyContent$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              throw 'Must override generateNewItemsKeyContent';

            case 1:
            case "end":
              return _context4.stop();
          }
        }
      });
    }
    /**
     * @public
     * Creates a new random SNItemsKey to use for item encryption.
     * The consumer must save/sync this item.
     * @returns  A new SNItemsKey
     */

  }, {
    key: "createItemsKey",
    value: function createItemsKey() {
      var content, payload, itemsKey;
      return regeneratorRuntime.async(function createItemsKey$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return regeneratorRuntime.awrap(this.generateNewItemsKeyContent());

            case 2:
              content = _context5.sent;
              payload = Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_2__["CreateMaxPayloadFromAnyObject"])({
                object: {
                  content: content
                }
              });
              itemsKey = new _Models_app_items_key__WEBPACK_IMPORTED_MODULE_0__["SNItemsKey"](payload);
              _context5.next = 7;
              return regeneratorRuntime.awrap(itemsKey.initUUID());

            case 7:
              return _context5.abrupt("return", itemsKey);

            case 8:
            case "end":
              return _context5.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "generateEncryptionParameters",
    value: function generateEncryptionParameters(_ref2) {
      var payload, key, format, jsonString, base64String, content;
      return regeneratorRuntime.async(function generateEncryptionParameters$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              payload = _ref2.payload, key = _ref2.key, format = _ref2.format;

              if (!(format === _Payloads_formats__WEBPACK_IMPORTED_MODULE_1__["PayloadFormats"].DecryptedBareObject)) {
                _context6.next = 5;
                break;
              }

              return _context6.abrupt("return", Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_2__["CreateEncryptionParameters"])({
                content: payload.content
              }));

            case 5:
              if (!(format === _Payloads_formats__WEBPACK_IMPORTED_MODULE_1__["PayloadFormats"].DecryptedBase64String)) {
                _context6.next = 14;
                break;
              }

              jsonString = JSON.stringify(payload.content);
              _context6.next = 9;
              return regeneratorRuntime.awrap(Object(sncrypto__WEBPACK_IMPORTED_MODULE_4__["base64Encode"])(jsonString));

            case 9:
              base64String = _context6.sent;
              content = _Protocol_versions__WEBPACK_IMPORTED_MODULE_3__["ProtocolVersions"].V000Base64Decrypted + base64String;
              return _context6.abrupt("return", Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_2__["CreateEncryptionParameters"])({
                content: content
              }));

            case 14:
              throw "Must override generateEncryptionParameters to handle format ".concat(format, ".");

            case 15:
            case "end":
              return _context6.stop();
          }
        }
      });
    }
  }, {
    key: "generateDecryptedParameters",
    value: function generateDecryptedParameters(_ref3) {
      var encryptedParameters, key, format, contentString, decodedContent, jsonString;
      return regeneratorRuntime.async(function generateDecryptedParameters$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              encryptedParameters = _ref3.encryptedParameters, key = _ref3.key;

              if (encryptedParameters.isEncryptionParameters) {
                _context7.next = 3;
                break;
              }

              throw 'Atempting to generate decrypted parameters from non-parameters object.';

            case 3:
              format = encryptedParameters.getContentFormat();

              if (!(format === _Payloads_formats__WEBPACK_IMPORTED_MODULE_1__["PayloadFormats"].DecryptedBareObject)) {
                _context7.next = 8;
                break;
              }

              return _context7.abrupt("return", Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_2__["CreateEncryptionParameters"])(encryptedParameters));

            case 8:
              if (!(format === _Payloads_formats__WEBPACK_IMPORTED_MODULE_1__["PayloadFormats"].DecryptedBase64String)) {
                _context7.next = 23;
                break;
              }

              contentString = encryptedParameters.content.substring(_Protocol_versions__WEBPACK_IMPORTED_MODULE_3__["ProtocolVersions"].VersionLength, encryptedParameters.content.length);
              _context7.prev = 10;
              _context7.next = 13;
              return regeneratorRuntime.awrap(Object(sncrypto__WEBPACK_IMPORTED_MODULE_4__["base64Decode"])(contentString));

            case 13:
              jsonString = _context7.sent;
              decodedContent = JSON.parse(jsonString);
              _context7.next = 20;
              break;

            case 17:
              _context7.prev = 17;
              _context7.t0 = _context7["catch"](10);
              decodedContent = encryptedParameters.content;

            case 20:
              return _context7.abrupt("return", Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_2__["CopyEncryptionParameters"])({
                encryptionParameters: encryptedParameters,
                override: {
                  content: decodedContent
                }
              }));

            case 23:
              throw "Must override generateDecryptedParameters to handle format ".concat(format, ".");

            case 24:
            case "end":
              return _context7.stop();
          }
        }
      }, null, null, [[10, 17]]);
    }
  }]);

  return SNProtocolOperator;
}();

/***/ }),

/***/ "./lib/protocol/payloads/collection.js":
/*!*********************************************!*\
  !*** ./lib/protocol/payloads/collection.js ***!
  \*********************************************/
/*! exports provided: PayloadCollection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PayloadCollection", function() { return PayloadCollection; });
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


var PayloadCollection =
/*#__PURE__*/
function () {
  function PayloadCollection() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        _ref$payloads = _ref.payloads,
        payloads = _ref$payloads === void 0 ? [] : _ref$payloads,
        source = _ref.source;

    _classCallCheck(this, PayloadCollection);

    this.source = source;
    this.payloadMap = {};
    this.allPayloads = payloads;
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = payloads[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var payload = _step.value;
        this.payloadMap[payload.uuid] = payload;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    Object.freeze(this);
  }

  _createClass(PayloadCollection, [{
    key: "findPayload",
    value: function findPayload(id) {
      return this.payloadMap[id];
    }
  }, {
    key: "concat",
    value: function concat(inCollection) {
      var result = inCollection.allPayloads.slice();
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = this.allPayloads[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var ours = _step2.value;

          /** If the payload exists in incoming collection, don't add our version */
          if (Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["findInArray"])(inCollection.allPayloads, 'uuid', ours.uuid)) {
            continue;
          }

          result.push(ours);
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      return new PayloadCollection({
        payloads: result,
        source: this.source
      });
    }
  }, {
    key: "payloadsThatReferencePayload",
    value: function payloadsThatReferencePayload(payload) {
      var results = [];

      for (var _i = 0, _Object$keys = Object.keys(this.payloadMap); _i < _Object$keys.length; _i++) {
        var uuid = _Object$keys[_i];
        var candidate = this.findPayload(uuid);

        if (candidate.errorDecrypting) {
          continue;
        }

        var references = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["findInArray"])(candidate.content.references, 'uuid', payload.uuid);

        if (references) {
          results.push(candidate);
        }
      }

      return results;
    }
  }]);

  return PayloadCollection;
}();

/***/ }),

/***/ "./lib/protocol/payloads/collection_set.js":
/*!*************************************************!*\
  !*** ./lib/protocol/payloads/collection_set.js ***!
  \*************************************************/
/*! exports provided: PayloadCollectionSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PayloadCollectionSet", function() { return PayloadCollectionSet; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var PayloadCollectionSet =
/*#__PURE__*/
function () {
  /**
   * @param collections An array of PayloadCollection objects.
   */
  function PayloadCollectionSet(_ref) {
    var collections = _ref.collections;

    _classCallCheck(this, PayloadCollectionSet);

    this.collections = collections;
    Object.freeze(this);
  }

  _createClass(PayloadCollectionSet, [{
    key: "collectionForSource",
    value: function collectionForSource(source) {
      return this.collections.find(function (collection) {
        return collection.source === source;
      });
    }
  }]);

  return PayloadCollectionSet;
}();

/***/ }),

/***/ "./lib/protocol/payloads/deltas/conflict.js":
/*!**************************************************!*\
  !*** ./lib/protocol/payloads/deltas/conflict.js ***!
  \**************************************************/
/*! exports provided: ConflictDelta */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConflictDelta", function() { return ConflictDelta; });
/* harmony import */ var _Models_generator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Models/generator */ "./lib/models/generator.js");
/* harmony import */ var _Payloads_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Payloads/collection */ "./lib/protocol/payloads/collection.js");
/* harmony import */ var _Payloads_deltas_strategies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads/deltas/strategies */ "./lib/protocol/payloads/deltas/strategies.js");
/* harmony import */ var _Payloads_deltas_delta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads/deltas/delta */ "./lib/protocol/payloads/deltas/delta.js");
/* harmony import */ var _Payloads_generator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Payloads/generator */ "./lib/protocol/payloads/generator.js");
/* harmony import */ var _Payloads_functions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Payloads/functions */ "./lib/protocol/payloads/functions.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }








var ConflictDelta =
/*#__PURE__*/
function (_PayloadsDelta) {
  _inherits(ConflictDelta, _PayloadsDelta);

  function ConflictDelta(_ref) {
    var _this;

    var baseCollection = _ref.baseCollection,
        basePayload = _ref.basePayload,
        applyPayload = _ref.applyPayload,
        source = _ref.source;

    _classCallCheck(this, ConflictDelta);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConflictDelta).call(this, {
      baseCollection: baseCollection
    }));
    _this.basePayload = basePayload;
    _this.applyPayload = applyPayload;
    _this.source = source;
    return _this;
  }

  _createClass(ConflictDelta, [{
    key: "resultingCollection",
    value: function resultingCollection() {
      var tmpBaseItem, tmpApplyItem, strategy, results;
      return regeneratorRuntime.async(function resultingCollection$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              tmpBaseItem = Object(_Models_generator__WEBPACK_IMPORTED_MODULE_0__["CreateItemFromPayload"])(this.basePayload);
              tmpApplyItem = Object(_Models_generator__WEBPACK_IMPORTED_MODULE_0__["CreateItemFromPayload"])(this.applyPayload);
              strategy = tmpBaseItem.strategyWhenConflictingWithItem({
                item: tmpApplyItem
              });
              _context.next = 5;
              return regeneratorRuntime.awrap(this.payloadsByHandlingStrategy({
                strategy: strategy
              }));

            case 5:
              results = _context.sent;
              return _context.abrupt("return", new _Payloads_collection__WEBPACK_IMPORTED_MODULE_1__["PayloadCollection"]({
                payloads: results,
                source: this.source
              }));

            case 7:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "payloadsByHandlingStrategy",
    value: function payloadsByHandlingStrategy(_ref2) {
      var strategy, updatedAt, leftPayload, rightPayloads, leftPayloads, rightPayload, refs, _updatedAt, payload;

      return regeneratorRuntime.async(function payloadsByHandlingStrategy$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              strategy = _ref2.strategy;

              if (!(strategy === _Payloads_deltas_strategies__WEBPACK_IMPORTED_MODULE_2__["ConflictStrategies"].KeepLeft)) {
                _context2.next = 3;
                break;
              }

              return _context2.abrupt("return", [this.basePayload]);

            case 3:
              if (!(strategy === _Payloads_deltas_strategies__WEBPACK_IMPORTED_MODULE_2__["ConflictStrategies"].KeepRight)) {
                _context2.next = 5;
                break;
              }

              return _context2.abrupt("return", [this.applyPayload]);

            case 5:
              if (!(strategy === _Payloads_deltas_strategies__WEBPACK_IMPORTED_MODULE_2__["ConflictStrategies"].KeepLeftDuplicateRight)) {
                _context2.next = 12;
                break;
              }

              updatedAt = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_6__["greaterOfTwoDates"])(this.basePayload.updated_at, this.applyPayload.updated_at);
              leftPayload = Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_4__["CopyPayload"])({
                payload: this.basePayload,
                override: {
                  updated_at: updatedAt,
                  dirty: true
                }
              });
              _context2.next = 10;
              return regeneratorRuntime.awrap(Object(_Payloads_functions__WEBPACK_IMPORTED_MODULE_5__["PayloadsByDuplicating"])({
                payload: this.applyPayload,
                baseCollection: this.baseCollection,
                isConflict: true
              }));

            case 10:
              rightPayloads = _context2.sent;
              return _context2.abrupt("return", [leftPayload].concat(rightPayloads));

            case 12:
              if (!(strategy === _Payloads_deltas_strategies__WEBPACK_IMPORTED_MODULE_2__["ConflictStrategies"].DuplicateLeftKeepRight)) {
                _context2.next = 18;
                break;
              }

              _context2.next = 15;
              return regeneratorRuntime.awrap(Object(_Payloads_functions__WEBPACK_IMPORTED_MODULE_5__["PayloadsByDuplicating"])({
                payload: this.basePayload,
                baseCollection: this.baseCollection,
                isConflict: true
              }));

            case 15:
              leftPayloads = _context2.sent;
              rightPayload = this.applyPayload;
              return _context2.abrupt("return", leftPayloads.concat([rightPayload]));

            case 18:
              if (!(strategy === _Payloads_deltas_strategies__WEBPACK_IMPORTED_MODULE_2__["ConflictStrategies"].KeepLeftMergeRefs)) {
                _context2.next = 23;
                break;
              }

              refs = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_6__["uniqCombineObjArrays"])(this.basePayload.content.references, this.applyPayload.content.references, ['uuid', 'content_type']);
              _updatedAt = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_6__["greaterOfTwoDates"])(this.basePayload.updated_at, this.applyPayload.updated_at);
              payload = Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_4__["CopyPayload"])({
                payload: this.basePayload,
                override: {
                  updated_at: _updatedAt,
                  dirty: true,
                  content: {
                    references: refs
                  }
                }
              });
              return _context2.abrupt("return", [payload]);

            case 23:
              throw 'Unhandled strategy';

            case 24:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }]);

  return ConflictDelta;
}(_Payloads_deltas_delta__WEBPACK_IMPORTED_MODULE_3__["PayloadsDelta"]);

/***/ }),

/***/ "./lib/protocol/payloads/deltas/delta.js":
/*!***********************************************!*\
  !*** ./lib/protocol/payloads/deltas/delta.js ***!
  \***********************************************/
/*! exports provided: PayloadsDelta */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PayloadsDelta", function() { return PayloadsDelta; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var PayloadsDelta =
/*#__PURE__*/
function () {
  /**
   * @param baseCollection The authoratitive collection on top of which to compute changes.
   * @param applyCollection The collection of payloads to apply, from one given source only.
   * @param relatedCollectionSet A collection set (many collections) that contain payloads
   *                             that may be neccessary to carry out computation.
   */
  function PayloadsDelta(_ref) {
    var baseCollection = _ref.baseCollection,
        applyCollection = _ref.applyCollection,
        relatedCollectionSet = _ref.relatedCollectionSet;

    _classCallCheck(this, PayloadsDelta);

    this.baseCollection = baseCollection;
    this.applyCollection = applyCollection;
    this.relatedCollectionSet = relatedCollectionSet;
  }

  _createClass(PayloadsDelta, [{
    key: "resultingCollection",
    value: function resultingCollection() {
      return regeneratorRuntime.async(function resultingCollection$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              throw 'Must override PayloadDelta.resultingCollection.';

            case 1:
            case "end":
              return _context.stop();
          }
        }
      });
    }
  }, {
    key: "findBasePayload",
    value: function findBasePayload(_ref2) {
      var id = _ref2.id;
      return this.baseCollection.findPayload(id);
    }
  }, {
    key: "findRelatedPayload",
    value: function findRelatedPayload(_ref3) {
      var id = _ref3.id,
          source = _ref3.source;
      var collection = this.relatedCollectionSet.collectionForSource(source);
      return collection.findPayload(id);
    }
  }]);

  return PayloadsDelta;
}();

/***/ }),

/***/ "./lib/protocol/payloads/deltas/file_import.js":
/*!*****************************************************!*\
  !*** ./lib/protocol/payloads/deltas/file_import.js ***!
  \*****************************************************/
/*! exports provided: DeltaFileImport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeltaFileImport", function() { return DeltaFileImport; });
/* harmony import */ var _Payloads_deltas_delta__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Payloads/deltas/delta */ "./lib/protocol/payloads/deltas/delta.js");
/* harmony import */ var _Payloads_deltas_conflict__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Payloads/deltas/conflict */ "./lib/protocol/payloads/deltas/conflict.js");
/* harmony import */ var _Payloads_sources__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads/sources */ "./lib/protocol/payloads/sources.js");
/* harmony import */ var _Payloads_collection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads/collection */ "./lib/protocol/payloads/collection.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }






var DeltaFileImport =
/*#__PURE__*/
function (_PayloadsDelta) {
  _inherits(DeltaFileImport, _PayloadsDelta);

  function DeltaFileImport() {
    _classCallCheck(this, DeltaFileImport);

    return _possibleConstructorReturn(this, _getPrototypeOf(DeltaFileImport).apply(this, arguments));
  }

  _createClass(DeltaFileImport, [{
    key: "resultingCollection",
    value: function resultingCollection() {
      var results, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, payload, payloads;

      return regeneratorRuntime.async(function resultingCollection$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              results = [];
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context.prev = 4;
              _iterator = this.applyCollection.allPayloads[Symbol.iterator]();

            case 6:
              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                _context.next = 15;
                break;
              }

              payload = _step.value;
              _context.next = 10;
              return regeneratorRuntime.awrap(this.payloadsByHandlingPayload({
                payload: payload,
                currentResults: results
              }));

            case 10:
              payloads = _context.sent;
              Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_4__["extendArray"])(results, payloads);

            case 12:
              _iteratorNormalCompletion = true;
              _context.next = 6;
              break;

            case 15:
              _context.next = 21;
              break;

            case 17:
              _context.prev = 17;
              _context.t0 = _context["catch"](4);
              _didIteratorError = true;
              _iteratorError = _context.t0;

            case 21:
              _context.prev = 21;
              _context.prev = 22;

              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }

            case 24:
              _context.prev = 24;

              if (!_didIteratorError) {
                _context.next = 27;
                break;
              }

              throw _iteratorError;

            case 27:
              return _context.finish(24);

            case 28:
              return _context.finish(21);

            case 29:
              return _context.abrupt("return", new _Payloads_collection__WEBPACK_IMPORTED_MODULE_3__["PayloadCollection"]({
                payloads: results,
                source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_2__["PayloadSources"].FileImport
              }));

            case 30:
            case "end":
              return _context.stop();
          }
        }
      }, null, this, [[4, 17, 21, 29], [22,, 24, 28]]);
    }
  }, {
    key: "payloadsByHandlingPayload",
    value: function payloadsByHandlingPayload(_ref) {
      var payload, currentResults, current, delta, deltaCollection;
      return regeneratorRuntime.async(function payloadsByHandlingPayload$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              payload = _ref.payload, currentResults = _ref.currentResults;

              /**
               * Check to see if we've already processed a payload for this id.
               * If so, that would be the latest value, and not what's in the BC.
               */

              /*
               * Find the most recently created conflict if available, as that
               * would contain the most recent value.
               */
              current = currentResults.find(function (candidate) {
                return candidate.content.conflict_of === payload.uuid;
              });
              /**
               * If no latest conflict, find by uuid directly.
               */

              if (!current) {
                current = currentResults.find(function (candidate) {
                  return candidate.uuid === payload.uuid;
                });
              }
              /**
               * If not found in current results, use the base value.
               */


              if (!current) {
                current = this.findBasePayload({
                  id: payload.uuid
                });
              }
              /**
               * If the current doesn't exist, we're creating a new item from payload.
               */


              if (current) {
                _context2.next = 6;
                break;
              }

              return _context2.abrupt("return", [payload]);

            case 6:
              delta = new _Payloads_deltas_conflict__WEBPACK_IMPORTED_MODULE_1__["ConflictDelta"]({
                baseCollection: this.baseCollection,
                basePayload: current,
                applyPayload: payload
              });
              _context2.next = 9;
              return regeneratorRuntime.awrap(delta.resultingCollection());

            case 9:
              deltaCollection = _context2.sent;
              return _context2.abrupt("return", deltaCollection.allPayloads);

            case 11:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }]);

  return DeltaFileImport;
}(_Payloads_deltas_delta__WEBPACK_IMPORTED_MODULE_0__["PayloadsDelta"]);

/***/ }),

/***/ "./lib/protocol/payloads/deltas/generator.js":
/*!***************************************************!*\
  !*** ./lib/protocol/payloads/deltas/generator.js ***!
  \***************************************************/
/*! exports provided: DeltaClassForSource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeltaClassForSource", function() { return DeltaClassForSource; });
/* harmony import */ var _Payloads_sources__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Payloads/sources */ "./lib/protocol/payloads/sources.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./lib/protocol/payloads/deltas/index.js");


function DeltaClassForSource(source) {
  if (source === _Payloads_sources__WEBPACK_IMPORTED_MODULE_0__["PayloadSources"].RemoteRetrieved) {
    return _index__WEBPACK_IMPORTED_MODULE_1__["DeltaRemoteRetrieved"];
  } else if (source === _Payloads_sources__WEBPACK_IMPORTED_MODULE_0__["PayloadSources"].RemoteSaved) {
    return _index__WEBPACK_IMPORTED_MODULE_1__["DeltaRemoteSaved"];
  } else if (source === _Payloads_sources__WEBPACK_IMPORTED_MODULE_0__["PayloadSources"].ConflictData || source === _Payloads_sources__WEBPACK_IMPORTED_MODULE_0__["PayloadSources"].ConflictUuid) {
    return _index__WEBPACK_IMPORTED_MODULE_1__["DeltaRemoteConflicts"];
  }
}

/***/ }),

/***/ "./lib/protocol/payloads/deltas/index.js":
/*!***********************************************!*\
  !*** ./lib/protocol/payloads/deltas/index.js ***!
  \***********************************************/
/*! exports provided: DeltaFileImport, DeltaOutOfSync, DeltaRemoteConflicts, DeltaRemoteRetrieved, DeltaRemoteSaved, ConflictDelta, PayloadsDelta, ConflictStrategies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _file_import__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./file_import */ "./lib/protocol/payloads/deltas/file_import.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeltaFileImport", function() { return _file_import__WEBPACK_IMPORTED_MODULE_0__["DeltaFileImport"]; });

/* harmony import */ var _out_of_sync__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./out_of_sync */ "./lib/protocol/payloads/deltas/out_of_sync.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeltaOutOfSync", function() { return _out_of_sync__WEBPACK_IMPORTED_MODULE_1__["DeltaOutOfSync"]; });

/* harmony import */ var _remote_conflicts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./remote_conflicts */ "./lib/protocol/payloads/deltas/remote_conflicts.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeltaRemoteConflicts", function() { return _remote_conflicts__WEBPACK_IMPORTED_MODULE_2__["DeltaRemoteConflicts"]; });

/* harmony import */ var _remote_retrieved__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./remote_retrieved */ "./lib/protocol/payloads/deltas/remote_retrieved.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeltaRemoteRetrieved", function() { return _remote_retrieved__WEBPACK_IMPORTED_MODULE_3__["DeltaRemoteRetrieved"]; });

/* harmony import */ var _remote_saved__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./remote_saved */ "./lib/protocol/payloads/deltas/remote_saved.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeltaRemoteSaved", function() { return _remote_saved__WEBPACK_IMPORTED_MODULE_4__["DeltaRemoteSaved"]; });

/* harmony import */ var _conflict__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./conflict */ "./lib/protocol/payloads/deltas/conflict.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConflictDelta", function() { return _conflict__WEBPACK_IMPORTED_MODULE_5__["ConflictDelta"]; });

/* harmony import */ var _Payloads_deltas_delta__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @Payloads/deltas/delta */ "./lib/protocol/payloads/deltas/delta.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PayloadsDelta", function() { return _Payloads_deltas_delta__WEBPACK_IMPORTED_MODULE_6__["PayloadsDelta"]; });

/* harmony import */ var _Payloads_deltas_strategies__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @Payloads/deltas/strategies */ "./lib/protocol/payloads/deltas/strategies.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConflictStrategies", function() { return _Payloads_deltas_strategies__WEBPACK_IMPORTED_MODULE_7__["ConflictStrategies"]; });










/***/ }),

/***/ "./lib/protocol/payloads/deltas/out_of_sync.js":
/*!*****************************************************!*\
  !*** ./lib/protocol/payloads/deltas/out_of_sync.js ***!
  \*****************************************************/
/*! exports provided: DeltaOutOfSync */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeltaOutOfSync", function() { return DeltaOutOfSync; });
/* harmony import */ var _Payloads_deltas_delta__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Payloads/deltas/delta */ "./lib/protocol/payloads/deltas/delta.js");
/* harmony import */ var _Payloads_sources__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Payloads/sources */ "./lib/protocol/payloads/sources.js");
/* harmony import */ var _Payloads_collection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads/collection */ "./lib/protocol/payloads/collection.js");
/* harmony import */ var _Payloads_functions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads/functions */ "./lib/protocol/payloads/functions.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }






var DeltaOutOfSync =
/*#__PURE__*/
function (_PayloadsDelta) {
  _inherits(DeltaOutOfSync, _PayloadsDelta);

  function DeltaOutOfSync() {
    _classCallCheck(this, DeltaOutOfSync);

    return _possibleConstructorReturn(this, _getPrototypeOf(DeltaOutOfSync).apply(this, arguments));
  }

  _createClass(DeltaOutOfSync, [{
    key: "resultingCollection",
    value: function resultingCollection() {
      var results, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, payload, current, equal, copyResults;

      return regeneratorRuntime.async(function resultingCollection$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              results = [];
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context.prev = 4;
              _iterator = this.applyCollection.allPayloads[Symbol.iterator]();

            case 6:
              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                _context.next = 22;
                break;
              }

              payload = _step.value;

              /**
               * Map the server payload as authoritive content. If client copy differs,
               * we will create a duplicate of it below.
               * This is also neccessary to map the updated_at value from the server
               */
              results.push(payload);
              current = this.findBasePayload({
                id: payload.uuid
              });

              if (current) {
                _context.next = 12;
                break;
              }

              return _context.abrupt("continue", 19);

            case 12:
              equal = Object(_Payloads_functions__WEBPACK_IMPORTED_MODULE_3__["PayloadContentsEqual"])(payload, current);

              if (!equal) {
                _context.next = 15;
                break;
              }

              return _context.abrupt("continue", 19);

            case 15:
              _context.next = 17;
              return regeneratorRuntime.awrap(Object(_Payloads_functions__WEBPACK_IMPORTED_MODULE_3__["PayloadsByDuplicating"])({
                payload: current,
                baseCollection: this.baseCollection,
                isConflict: true
              }));

            case 17:
              copyResults = _context.sent;
              Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_4__["extendArray"])(results, copyResults);

            case 19:
              _iteratorNormalCompletion = true;
              _context.next = 6;
              break;

            case 22:
              _context.next = 28;
              break;

            case 24:
              _context.prev = 24;
              _context.t0 = _context["catch"](4);
              _didIteratorError = true;
              _iteratorError = _context.t0;

            case 28:
              _context.prev = 28;
              _context.prev = 29;

              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }

            case 31:
              _context.prev = 31;

              if (!_didIteratorError) {
                _context.next = 34;
                break;
              }

              throw _iteratorError;

            case 34:
              return _context.finish(31);

            case 35:
              return _context.finish(28);

            case 36:
              return _context.abrupt("return", new _Payloads_collection__WEBPACK_IMPORTED_MODULE_2__["PayloadCollection"]({
                payloads: results,
                source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_1__["PayloadSources"].RemoteRetrieved
              }));

            case 37:
            case "end":
              return _context.stop();
          }
        }
      }, null, this, [[4, 24, 28, 36], [29,, 31, 35]]);
    }
  }]);

  return DeltaOutOfSync;
}(_Payloads_deltas_delta__WEBPACK_IMPORTED_MODULE_0__["PayloadsDelta"]);

/***/ }),

/***/ "./lib/protocol/payloads/deltas/remote_conflicts.js":
/*!**********************************************************!*\
  !*** ./lib/protocol/payloads/deltas/remote_conflicts.js ***!
  \**********************************************************/
/*! exports provided: DeltaRemoteConflicts */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeltaRemoteConflicts", function() { return DeltaRemoteConflicts; });
/* harmony import */ var _Payloads_deltas_delta__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Payloads/deltas/delta */ "./lib/protocol/payloads/deltas/delta.js");
/* harmony import */ var _Payloads_deltas_conflict__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Payloads/deltas/conflict */ "./lib/protocol/payloads/deltas/conflict.js");
/* harmony import */ var _Payloads_sources__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads/sources */ "./lib/protocol/payloads/sources.js");
/* harmony import */ var _Payloads_collection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads/collection */ "./lib/protocol/payloads/collection.js");
/* harmony import */ var _Payloads_functions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Payloads/functions */ "./lib/protocol/payloads/functions.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }







var DeltaRemoteConflicts =
/*#__PURE__*/
function (_PayloadsDelta) {
  _inherits(DeltaRemoteConflicts, _PayloadsDelta);

  function DeltaRemoteConflicts() {
    _classCallCheck(this, DeltaRemoteConflicts);

    return _possibleConstructorReturn(this, _getPrototypeOf(DeltaRemoteConflicts).apply(this, arguments));
  }

  _createClass(DeltaRemoteConflicts, [{
    key: "resultingCollection",
    value: function resultingCollection() {
      return regeneratorRuntime.async(function resultingCollection$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!(this.applyCollection.source === _Payloads_sources__WEBPACK_IMPORTED_MODULE_2__["PayloadSources"].ConflictUuid)) {
                _context.next = 4;
                break;
              }

              return _context.abrupt("return", this.collectionsByHandlingUuidConflicts());

            case 4:
              if (!(this.applyCollection.source === _Payloads_sources__WEBPACK_IMPORTED_MODULE_2__["PayloadSources"].ConflictData)) {
                _context.next = 8;
                break;
              }

              return _context.abrupt("return", this.collectionsByHandlingDataConflicts());

            case 8:
              throw "Unhandled conflict type ".concat(this.applyCollection.source);

            case 9:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "collectionsByHandlingDataConflicts",
    value: function collectionsByHandlingDataConflicts() {
      var results, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, payload, current, decrypted, delta, deltaCollection, payloads;

      return regeneratorRuntime.async(function collectionsByHandlingDataConflicts$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              results = [];
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context2.prev = 4;
              _iterator = this.applyCollection.allPayloads[Symbol.iterator]();

            case 6:
              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                _context2.next = 27;
                break;
              }

              payload = _step.value;
              current = this.findBasePayload({
                id: payload.uuid
              });
              /** Could be deleted */

              if (current) {
                _context2.next = 12;
                break;
              }

              results.push(payload);
              return _context2.abrupt("continue", 24);

            case 12:
              decrypted = this.findRelatedPayload({
                id: payload.uuid,
                source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_2__["PayloadSources"].DecryptedTransient
              });

              if (decrypted) {
                _context2.next = 18;
                break;
              }

              if (payload.deleted) {
                _context2.next = 16;
                break;
              }

              throw 'Unable to find decrypted counterpart for data conflict.';

            case 16:
              results.push(payload);
              return _context2.abrupt("continue", 24);

            case 18:
              delta = new _Payloads_deltas_conflict__WEBPACK_IMPORTED_MODULE_1__["ConflictDelta"]({
                baseCollection: this.baseCollection,
                basePayload: current,
                applyPayload: decrypted
              });
              _context2.next = 21;
              return regeneratorRuntime.awrap(delta.resultingCollection());

            case 21:
              deltaCollection = _context2.sent;
              payloads = deltaCollection.allPayloads;
              Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_5__["extendArray"])(results, payloads);

            case 24:
              _iteratorNormalCompletion = true;
              _context2.next = 6;
              break;

            case 27:
              _context2.next = 33;
              break;

            case 29:
              _context2.prev = 29;
              _context2.t0 = _context2["catch"](4);
              _didIteratorError = true;
              _iteratorError = _context2.t0;

            case 33:
              _context2.prev = 33;
              _context2.prev = 34;

              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }

            case 36:
              _context2.prev = 36;

              if (!_didIteratorError) {
                _context2.next = 39;
                break;
              }

              throw _iteratorError;

            case 39:
              return _context2.finish(36);

            case 40:
              return _context2.finish(33);

            case 41:
              return _context2.abrupt("return", new _Payloads_collection__WEBPACK_IMPORTED_MODULE_3__["PayloadCollection"]({
                payloads: results,
                source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_2__["PayloadSources"].RemoteRetrieved
              }));

            case 42:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this, [[4, 29, 33, 41], [34,, 36, 40]]);
    }
    /**
     * UUID conflicts can occur if a user attmpts to import an old data
     * backup with uuids from the old account into a new account.
     * In uuid_conflict, we receive the value we attmpted to save.
     */

  }, {
    key: "collectionsByHandlingUuidConflicts",
    value: function collectionsByHandlingUuidConflicts() {
      var results, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, payload, decrypted, alternateResults;

      return regeneratorRuntime.async(function collectionsByHandlingUuidConflicts$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              results = [];
              _iteratorNormalCompletion2 = true;
              _didIteratorError2 = false;
              _iteratorError2 = undefined;
              _context3.prev = 4;
              _iterator2 = this.applyCollection.allPayloads[Symbol.iterator]();

            case 6:
              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
                _context3.next = 16;
                break;
              }

              payload = _step2.value;
              decrypted = this.findRelatedPayload({
                id: payload.uuid,
                source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_2__["PayloadSources"].DecryptedTransient
              });
              _context3.next = 11;
              return regeneratorRuntime.awrap(Object(_Payloads_functions__WEBPACK_IMPORTED_MODULE_4__["PayloadsByAlternatingUuid"])({
                baseCollection: this.baseCollection,
                payload: decrypted
              }));

            case 11:
              alternateResults = _context3.sent;
              Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_5__["extendArray"])(results, alternateResults);

            case 13:
              _iteratorNormalCompletion2 = true;
              _context3.next = 6;
              break;

            case 16:
              _context3.next = 22;
              break;

            case 18:
              _context3.prev = 18;
              _context3.t0 = _context3["catch"](4);
              _didIteratorError2 = true;
              _iteratorError2 = _context3.t0;

            case 22:
              _context3.prev = 22;
              _context3.prev = 23;

              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }

            case 25:
              _context3.prev = 25;

              if (!_didIteratorError2) {
                _context3.next = 28;
                break;
              }

              throw _iteratorError2;

            case 28:
              return _context3.finish(25);

            case 29:
              return _context3.finish(22);

            case 30:
              return _context3.abrupt("return", new _Payloads_collection__WEBPACK_IMPORTED_MODULE_3__["PayloadCollection"]({
                payloads: results,
                source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_2__["PayloadSources"].RemoteRetrieved
              }));

            case 31:
            case "end":
              return _context3.stop();
          }
        }
      }, null, this, [[4, 18, 22, 30], [23,, 25, 29]]);
    }
  }]);

  return DeltaRemoteConflicts;
}(_Payloads_deltas_delta__WEBPACK_IMPORTED_MODULE_0__["PayloadsDelta"]);

/***/ }),

/***/ "./lib/protocol/payloads/deltas/remote_retrieved.js":
/*!**********************************************************!*\
  !*** ./lib/protocol/payloads/deltas/remote_retrieved.js ***!
  \**********************************************************/
/*! exports provided: DeltaRemoteRetrieved */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeltaRemoteRetrieved", function() { return DeltaRemoteRetrieved; });
/* harmony import */ var _Payloads_deltas_delta__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Payloads/deltas/delta */ "./lib/protocol/payloads/deltas/delta.js");
/* harmony import */ var _Payloads_sources__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Payloads/sources */ "./lib/protocol/payloads/sources.js");
/* harmony import */ var _Payloads_collection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads/collection */ "./lib/protocol/payloads/collection.js");
/* harmony import */ var _Payloads_functions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads/functions */ "./lib/protocol/payloads/functions.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }






var DeltaRemoteRetrieved =
/*#__PURE__*/
function (_PayloadsDelta) {
  _inherits(DeltaRemoteRetrieved, _PayloadsDelta);

  function DeltaRemoteRetrieved() {
    _classCallCheck(this, DeltaRemoteRetrieved);

    return _possibleConstructorReturn(this, _getPrototypeOf(DeltaRemoteRetrieved).apply(this, arguments));
  }

  _createClass(DeltaRemoteRetrieved, [{
    key: "resultingCollection",
    value: function resultingCollection() {
      var filtered, conflicted, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, received, savedOrSaving, decrypted, base, conflictResults, _i, _conflicted, conflict, _decrypted, current, differs, copyResults;

      return regeneratorRuntime.async(function resultingCollection$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              filtered = [];
              conflicted = [];
              /**
              * If we have retrieved an item that was saved as part of this ongoing sync operation,
              * or if the item is locally dirty, filter it out of retrieved_items, and add to potential conflicts.
              */

              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context.prev = 5;
              _iterator = this.applyCollection.allPayloads[Symbol.iterator]();

            case 7:
              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                _context.next = 27;
                break;
              }

              received = _step.value;
              savedOrSaving = this.findRelatedPayload({
                id: received.uuid,
                source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_1__["PayloadSources"].SavedOrSaving
              });
              decrypted = this.findRelatedPayload({
                id: received.uuid,
                source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_1__["PayloadSources"].DecryptedTransient
              });

              if (decrypted) {
                _context.next = 16;
                break;
              }

              if (received.deleted) {
                _context.next = 14;
                break;
              }

              throw 'Cannot find decrypted for non-deleted payload.';

            case 14:
              filtered.push(received);
              return _context.abrupt("continue", 24);

            case 16:
              if (!savedOrSaving) {
                _context.next = 19;
                break;
              }

              conflicted.push(decrypted);
              return _context.abrupt("continue", 24);

            case 19:
              base = this.findBasePayload({
                id: received.uuid
              });

              if (!(base && base.dirty)) {
                _context.next = 23;
                break;
              }

              conflicted.push(decrypted);
              return _context.abrupt("continue", 24);

            case 23:
              filtered.push(decrypted);

            case 24:
              _iteratorNormalCompletion = true;
              _context.next = 7;
              break;

            case 27:
              _context.next = 33;
              break;

            case 29:
              _context.prev = 29;
              _context.t0 = _context["catch"](5);
              _didIteratorError = true;
              _iteratorError = _context.t0;

            case 33:
              _context.prev = 33;
              _context.prev = 34;

              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }

            case 36:
              _context.prev = 36;

              if (!_didIteratorError) {
                _context.next = 39;
                break;
              }

              throw _iteratorError;

            case 39:
              return _context.finish(36);

            case 40:
              return _context.finish(33);

            case 41:
              /**
               * For any potential conflict above, we compare the values with current
               * local values, and if they differ, we create a new payload that is a copy
               * of the server payload.
               */
              conflictResults = [];
              _i = 0, _conflicted = conflicted;

            case 43:
              if (!(_i < _conflicted.length)) {
                _context.next = 60;
                break;
              }

              conflict = _conflicted[_i];
              _decrypted = this.findRelatedPayload({
                id: conflict.uuid,
                source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_1__["PayloadSources"].DecryptedTransient
              });

              if (_decrypted) {
                _context.next = 48;
                break;
              }

              return _context.abrupt("continue", 57);

            case 48:
              current = this.findBasePayload({
                id: conflict.uuid
              });

              if (current) {
                _context.next = 51;
                break;
              }

              return _context.abrupt("continue", 57);

            case 51:
              differs = !current.compareContentFields(_decrypted);

              if (!differs) {
                _context.next = 57;
                break;
              }

              _context.next = 55;
              return regeneratorRuntime.awrap(Object(_Payloads_functions__WEBPACK_IMPORTED_MODULE_3__["PayloadsByDuplicating"])({
                payload: _decrypted,
                baseCollection: this.baseCollection,
                isConflict: true
              }));

            case 55:
              copyResults = _context.sent;
              Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_4__["extendArray"])(conflictResults, copyResults);

            case 57:
              _i++;
              _context.next = 43;
              break;

            case 60:
              return _context.abrupt("return", new _Payloads_collection__WEBPACK_IMPORTED_MODULE_2__["PayloadCollection"]({
                payloads: filtered.concat(conflictResults),
                source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_1__["PayloadSources"].RemoteRetrieved
              }));

            case 61:
            case "end":
              return _context.stop();
          }
        }
      }, null, this, [[5, 29, 33, 41], [34,, 36, 40]]);
    }
  }]);

  return DeltaRemoteRetrieved;
}(_Payloads_deltas_delta__WEBPACK_IMPORTED_MODULE_0__["PayloadsDelta"]);

/***/ }),

/***/ "./lib/protocol/payloads/deltas/remote_saved.js":
/*!******************************************************!*\
  !*** ./lib/protocol/payloads/deltas/remote_saved.js ***!
  \******************************************************/
/*! exports provided: DeltaRemoteSaved */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeltaRemoteSaved", function() { return DeltaRemoteSaved; });
/* harmony import */ var _Payloads_deltas_delta__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Payloads/deltas/delta */ "./lib/protocol/payloads/deltas/delta.js");
/* harmony import */ var _Payloads_sources__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Payloads/sources */ "./lib/protocol/payloads/sources.js");
/* harmony import */ var _Payloads_collection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads/collection */ "./lib/protocol/payloads/collection.js");
/* harmony import */ var _Payloads_generator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads/generator */ "./lib/protocol/payloads/generator.js");
/* harmony import */ var _Payloads_fields__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Payloads/fields */ "./lib/protocol/payloads/fields.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }






var DeltaRemoteSaved =
/*#__PURE__*/
function (_PayloadsDelta) {
  _inherits(DeltaRemoteSaved, _PayloadsDelta);

  function DeltaRemoteSaved() {
    _classCallCheck(this, DeltaRemoteSaved);

    return _possibleConstructorReturn(this, _getPrototypeOf(DeltaRemoteSaved).apply(this, arguments));
  }

  _createClass(DeltaRemoteSaved, [{
    key: "resultingCollection",
    value: function resultingCollection() {
      var processed, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _override, payload, current, deletedState, result;

      return regeneratorRuntime.async(function resultingCollection$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              processed = [];
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context.prev = 4;

              for (_iterator = this.applyCollection.allPayloads[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                payload = _step.value;
                current = this.findBasePayload({
                  id: payload.uuid
                });
                /** If we save an item, but while in transit it is deleted locally, we want to keep 
                 * local deletion status, and not old deleted value that was sent to server.
                 */

                deletedState = current ? current.deleted : payload.deleted;
                result = Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_3__["CreateSourcedPayloadFromObject"])({
                  object: payload,
                  source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_1__["PayloadSources"].RemoteSaved,
                  override: (_override = {}, _defineProperty(_override, _Payloads_fields__WEBPACK_IMPORTED_MODULE_4__["PayloadFields"].LastSyncEnd, new Date()), _defineProperty(_override, _Payloads_fields__WEBPACK_IMPORTED_MODULE_4__["PayloadFields"].Deleted, deletedState), _override)
                });
                processed.push(result);
              }

              _context.next = 12;
              break;

            case 8:
              _context.prev = 8;
              _context.t0 = _context["catch"](4);
              _didIteratorError = true;
              _iteratorError = _context.t0;

            case 12:
              _context.prev = 12;
              _context.prev = 13;

              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }

            case 15:
              _context.prev = 15;

              if (!_didIteratorError) {
                _context.next = 18;
                break;
              }

              throw _iteratorError;

            case 18:
              return _context.finish(15);

            case 19:
              return _context.finish(12);

            case 20:
              return _context.abrupt("return", new _Payloads_collection__WEBPACK_IMPORTED_MODULE_2__["PayloadCollection"]({
                payloads: processed,
                source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_1__["PayloadSources"].RemoteSaved
              }));

            case 21:
            case "end":
              return _context.stop();
          }
        }
      }, null, this, [[4, 8, 12, 20], [13,, 15, 19]]);
    }
  }]);

  return DeltaRemoteSaved;
}(_Payloads_deltas_delta__WEBPACK_IMPORTED_MODULE_0__["PayloadsDelta"]);

/***/ }),

/***/ "./lib/protocol/payloads/deltas/strategies.js":
/*!****************************************************!*\
  !*** ./lib/protocol/payloads/deltas/strategies.js ***!
  \****************************************************/
/*! exports provided: ConflictStrategies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConflictStrategies", function() { return ConflictStrategies; });
var ConflictStrategies = {
  KeepLeft: 1,
  KeepRight: 2,
  KeepLeftDuplicateRight: 3,
  DuplicateLeftKeepRight: 4,
  KeepLeftMergeRefs: 5
};

/***/ }),

/***/ "./lib/protocol/payloads/encryption_parameters.js":
/*!********************************************************!*\
  !*** ./lib/protocol/payloads/encryption_parameters.js ***!
  \********************************************************/
/*! exports provided: SNEncryptionParameters */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNEncryptionParameters", function() { return SNEncryptionParameters; });
/* harmony import */ var _Protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Protocol */ "./lib/protocol/index.js");
/* harmony import */ var _Payloads_pure_payload__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Payloads/pure_payload */ "./lib/protocol/payloads/pure_payload.js");
/* harmony import */ var _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads/fields */ "./lib/protocol/payloads/fields.js");
/* harmony import */ var _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads/formats */ "./lib/protocol/payloads/formats.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }





var SNEncryptionParameters =
/*#__PURE__*/
function (_PurePayload) {
  _inherits(SNEncryptionParameters, _PurePayload);

  function SNEncryptionParameters() {
    _classCallCheck(this, SNEncryptionParameters);

    return _possibleConstructorReturn(this, _getPrototypeOf(SNEncryptionParameters).apply(this, arguments));
  }

  _createClass(SNEncryptionParameters, [{
    key: "getContentFormat",
    value: function getContentFormat() {
      if (typeof this.content === 'string') {
        if (this.content.startsWith(_Protocol__WEBPACK_IMPORTED_MODULE_0__["ProtocolVersions"].V000Base64Decrypted)) {
          return _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBase64String;
        } else {
          return _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].EncryptedString;
        }
      } else {
        return _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBareObject;
      }
    }
  }, {
    key: "isEncryptionParameters",
    get: function get() {
      return true;
    }
  }], [{
    key: "fields",
    value: function fields() {
      return [_Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ItemsKeyId, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].EncItemKey, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].Content, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].Legacy003AuthHash, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecrypting, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].ErrorDecryptingChanged, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].WaitingForKey];
    }
  }]);

  return SNEncryptionParameters;
}(_Payloads_pure_payload__WEBPACK_IMPORTED_MODULE_1__["PurePayload"]);

/***/ }),

/***/ "./lib/protocol/payloads/fields.js":
/*!*****************************************!*\
  !*** ./lib/protocol/payloads/fields.js ***!
  \*****************************************/
/*! exports provided: PayloadFields */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PayloadFields", function() { return PayloadFields; });
var PayloadFields = {
  Uuid: 'uuid',
  ContentType: 'content_type',
  ItemsKeyId: 'items_key_id',
  EncItemKey: 'enc_item_key',
  Content: 'content',
  CreatedAt: 'created_at',
  UpdatedAt: 'updated_at',
  Deleted: 'deleted',
  Legacy003AuthHash: 'auth_hash',
  Legacy003AuthParams: 'auth_params',
  Dirty: 'dirty',
  DirtiedDate: 'dirtiedDate',
  WaitingForKey: 'waitingForKey',
  ErrorDecrypting: 'errorDecrypting',
  ErrorDecryptingChanged: 'errorDecryptingValueChanged',
  Dummy: 'dummy',
  LastSyncBegan: 'lastSyncBegan',
  LastSyncEnd: 'lastSyncEnd'
};

/***/ }),

/***/ "./lib/protocol/payloads/file_item_payload.js":
/*!****************************************************!*\
  !*** ./lib/protocol/payloads/file_item_payload.js ***!
  \****************************************************/
/*! exports provided: SNFileItemPayload */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNFileItemPayload", function() { return SNFileItemPayload; });
/* harmony import */ var _Payloads_pure_item_payload__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Payloads/pure_item_payload */ "./lib/protocol/payloads/pure_item_payload.js");
/* harmony import */ var _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Payloads/fields */ "./lib/protocol/payloads/fields.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var SNFileItemPayload =
/*#__PURE__*/
function (_SNPureItemPayload) {
  _inherits(SNFileItemPayload, _SNPureItemPayload);

  function SNFileItemPayload() {
    _classCallCheck(this, SNFileItemPayload);

    return _possibleConstructorReturn(this, _getPrototypeOf(SNFileItemPayload).apply(this, arguments));
  }

  _createClass(SNFileItemPayload, null, [{
    key: "fields",
    value: function fields() {
      return [_Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Uuid, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].ContentType, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].ItemsKeyId, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].EncItemKey, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Content, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].CreatedAt, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].UpdatedAt, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Legacy003AuthHash];
    }
  }]);

  return SNFileItemPayload;
}(_Payloads_pure_item_payload__WEBPACK_IMPORTED_MODULE_0__["SNPureItemPayload"]);

/***/ }),

/***/ "./lib/protocol/payloads/formats.js":
/*!******************************************!*\
  !*** ./lib/protocol/payloads/formats.js ***!
  \******************************************/
/*! exports provided: PayloadFormats */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PayloadFormats", function() { return PayloadFormats; });
var PayloadFormats = {
  EncryptedString: 0,
  DecryptedBareObject: 1,
  DecryptedBase64String: 2
};

/***/ }),

/***/ "./lib/protocol/payloads/functions.js":
/*!********************************************!*\
  !*** ./lib/protocol/payloads/functions.js ***!
  \********************************************/
/*! exports provided: PayloadContentsEqual, PayloadsByDuplicating, PayloadsByAlternatingUuid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PayloadContentsEqual", function() { return PayloadContentsEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PayloadsByDuplicating", function() { return PayloadsByDuplicating; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PayloadsByAlternatingUuid", function() { return PayloadsByAlternatingUuid; });
/* harmony import */ var _Models_generator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Models/generator */ "./lib/models/generator.js");
/* harmony import */ var lodash_remove__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/remove */ "./node_modules/lodash/remove.js");
/* harmony import */ var lodash_remove__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_remove__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Payloads_generator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads/generator */ "./lib/protocol/payloads/generator.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Lib_uuid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Lib/uuid */ "./lib/uuid.js");





function PayloadContentsEqual(payloadA, payloadB) {
  var itemA = Object(_Models_generator__WEBPACK_IMPORTED_MODULE_0__["CreateItemFromPayload"])(payloadA);
  var itemB = Object(_Models_generator__WEBPACK_IMPORTED_MODULE_0__["CreateItemFromPayload"])(payloadB);
  return itemA.isItemContentEqualWith(itemB);
}
/**
 * Copies payload and assigns it a new uuid.
 * @returns An array of payloads that have changed as a result of copying.
 */

function PayloadsByDuplicating(_ref) {
  var payload, baseCollection, isConflict, results, override, copy, referencing, updatedReferencing;
  return regeneratorRuntime.async(function PayloadsByDuplicating$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          payload = _ref.payload, baseCollection = _ref.baseCollection, isConflict = _ref.isConflict;
          results = [];
          _context.next = 4;
          return regeneratorRuntime.awrap(_Lib_uuid__WEBPACK_IMPORTED_MODULE_4__["Uuid"].GenerateUuid());

        case 4:
          _context.t0 = _context.sent;
          override = {
            uuid: _context.t0,
            dirty: true,
            dirtiedDate: null,
            lastSyncBegan: null,
            lastSyncEnd: null
          };

          if (isConflict) {
            override.content = {
              conflict_of: payload.uuid
            };
          }

          copy = Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_2__["CopyPayload"])({
            payload: payload,
            override: override
          });
          results.push(copy);
          /**
           * Get the payloads that make reference to payload and add the copy.
           */

          referencing = baseCollection.payloadsThatReferencePayload(payload);
          _context.next = 12;
          return regeneratorRuntime.awrap(PayloadsByUpdatingReferences({
            payloads: referencing,
            add: [{
              uuid: copy.uuid,
              content_type: copy.content_type
            }]
          }));

        case 12:
          updatedReferencing = _context.sent;
          Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_3__["extendArray"])(results, updatedReferencing);
          return _context.abrupt("return", results);

        case 15:
        case "end":
          return _context.stop();
      }
    }
  });
}
/**
 * Return the payloads that result if you alternated the uuid for the payload.
 * Alternating a UUID involves instructing related items to drop old references of a uuid
 * for the new one.
 * @returns An array of payloads that have changed as a result of copying.
 */

function PayloadsByAlternatingUuid(_ref2) {
  var payload, baseCollection, results, copy, referencing, updatedReferencing, updatedSelf;
  return regeneratorRuntime.async(function PayloadsByAlternatingUuid$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          payload = _ref2.payload, baseCollection = _ref2.baseCollection;
          results = [];
          /**
          * We need to clone payload and give it a new uuid,
          * then delete item with old uuid from db (cannot modify uuids in our IndexedDB setup)
          */

          _context2.t0 = _Payloads_generator__WEBPACK_IMPORTED_MODULE_2__["CopyPayload"];
          _context2.t1 = payload;
          _context2.next = 6;
          return regeneratorRuntime.awrap(_Lib_uuid__WEBPACK_IMPORTED_MODULE_4__["Uuid"].GenerateUuid());

        case 6:
          _context2.t2 = _context2.sent;
          _context2.t3 = {
            uuid: _context2.t2,
            dirty: true
          };
          _context2.t4 = {
            payload: _context2.t1,
            override: _context2.t3
          };
          copy = (0, _context2.t0)(_context2.t4);
          results.push(copy);
          /**
           * Get the payloads that make reference to payload and remove
           * payload as a relationship, instead adding the new copy.
           */

          referencing = baseCollection.payloadsThatReferencePayload(payload);
          _context2.next = 14;
          return regeneratorRuntime.awrap(PayloadsByUpdatingReferences({
            payloads: referencing,
            add: [{
              uuid: copy.uuid,
              content_type: copy.content_type
            }],
            removeIds: [payload.uuid]
          }));

        case 14:
          updatedReferencing = _context2.sent;
          Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_3__["extendArray"])(results, updatedReferencing);
          updatedSelf = Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_2__["CopyPayload"])({
            payload: payload,
            override: {
              deleted: true,

              /** Do not set as dirty; this item is non-syncable
                and should be immediately discarded */
              dirty: false,
              content: {
                references: []
              }
            }
          });
          results.push(updatedSelf);
          return _context2.abrupt("return", results);

        case 19:
        case "end":
          return _context2.stop();
      }
    }
  });
}

function PayloadsByUpdatingReferences(_ref3) {
  var payloads, add, removeIds, results, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, payload, references, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, reference, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, id, result;

  return regeneratorRuntime.async(function PayloadsByUpdatingReferences$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          payloads = _ref3.payloads, add = _ref3.add, removeIds = _ref3.removeIds;
          results = [];
          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context3.prev = 5;
          _iterator = payloads[Symbol.iterator]();

        case 7:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context3.next = 55;
            break;
          }

          payload = _step.value;
          references = payload.content.references.slice();

          if (!add) {
            _context3.next = 30;
            break;
          }

          _iteratorNormalCompletion2 = true;
          _didIteratorError2 = false;
          _iteratorError2 = undefined;
          _context3.prev = 14;

          for (_iterator2 = add[Symbol.iterator](); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            reference = _step2.value;
            references.push(reference);
          }

          _context3.next = 22;
          break;

        case 18:
          _context3.prev = 18;
          _context3.t0 = _context3["catch"](14);
          _didIteratorError2 = true;
          _iteratorError2 = _context3.t0;

        case 22:
          _context3.prev = 22;
          _context3.prev = 23;

          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
            _iterator2.return();
          }

        case 25:
          _context3.prev = 25;

          if (!_didIteratorError2) {
            _context3.next = 28;
            break;
          }

          throw _iteratorError2;

        case 28:
          return _context3.finish(25);

        case 29:
          return _context3.finish(22);

        case 30:
          if (!removeIds) {
            _context3.next = 50;
            break;
          }

          _iteratorNormalCompletion3 = true;
          _didIteratorError3 = false;
          _iteratorError3 = undefined;
          _context3.prev = 34;

          for (_iterator3 = removeIds[Symbol.iterator](); !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
            id = _step3.value;
            lodash_remove__WEBPACK_IMPORTED_MODULE_1___default()(references, {
              uuid: id
            });
          }

          _context3.next = 42;
          break;

        case 38:
          _context3.prev = 38;
          _context3.t1 = _context3["catch"](34);
          _didIteratorError3 = true;
          _iteratorError3 = _context3.t1;

        case 42:
          _context3.prev = 42;
          _context3.prev = 43;

          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
            _iterator3.return();
          }

        case 45:
          _context3.prev = 45;

          if (!_didIteratorError3) {
            _context3.next = 48;
            break;
          }

          throw _iteratorError3;

        case 48:
          return _context3.finish(45);

        case 49:
          return _context3.finish(42);

        case 50:
          result = Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_2__["CopyPayload"])({
            payload: payload,
            override: {
              dirty: true,
              content: {
                references: references
              }
            }
          });
          results.push(result);

        case 52:
          _iteratorNormalCompletion = true;
          _context3.next = 7;
          break;

        case 55:
          _context3.next = 61;
          break;

        case 57:
          _context3.prev = 57;
          _context3.t2 = _context3["catch"](5);
          _didIteratorError = true;
          _iteratorError = _context3.t2;

        case 61:
          _context3.prev = 61;
          _context3.prev = 62;

          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }

        case 64:
          _context3.prev = 64;

          if (!_didIteratorError) {
            _context3.next = 67;
            break;
          }

          throw _iteratorError;

        case 67:
          return _context3.finish(64);

        case 68:
          return _context3.finish(61);

        case 69:
          return _context3.abrupt("return", results);

        case 70:
        case "end":
          return _context3.stop();
      }
    }
  }, null, null, [[5, 57, 61, 69], [14, 18, 22, 30], [23,, 25, 29], [34, 38, 42, 50], [43,, 45, 49], [62,, 64, 68]]);
}

/***/ }),

/***/ "./lib/protocol/payloads/generator.js":
/*!********************************************!*\
  !*** ./lib/protocol/payloads/generator.js ***!
  \********************************************/
/*! exports provided: CreateMaxPayloadFromAnyObject, CreateIntentPayloadFromObject, CreateSourcedPayloadFromObject, CopyPayload, CreateEncryptionParameters, CopyEncryptionParameters, payloadClassForSource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateMaxPayloadFromAnyObject", function() { return CreateMaxPayloadFromAnyObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateIntentPayloadFromObject", function() { return CreateIntentPayloadFromObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateSourcedPayloadFromObject", function() { return CreateSourcedPayloadFromObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CopyPayload", function() { return CopyPayload; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateEncryptionParameters", function() { return CreateEncryptionParameters; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CopyEncryptionParameters", function() { return CopyEncryptionParameters; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "payloadClassForSource", function() { return payloadClassForSource; });
/* harmony import */ var _Payloads__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Payloads */ "./lib/protocol/payloads/index.js");
/* harmony import */ var _Protocol__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Protocol */ "./lib/protocol/index.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");



function CreateMaxPayloadFromAnyObject(_ref) {
  var object = _ref.object,
      source = _ref.source,
      intent = _ref.intent,
      override = _ref.override;

  if (!Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(source)) {
    throw 'Use CreateSourcedPayloadFromObject if creating payload with source.';
  }

  if (!Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(intent)) {
    throw 'Use CreateIntentPayloadFromObject if creating payload with intent.';
  }

  var payloadClass = _Payloads__WEBPACK_IMPORTED_MODULE_0__["SNMaxItemPayload"];
  return CreatePayload({
    object: object,
    payloadClass: payloadClass,
    override: override
  });
}
function CreateIntentPayloadFromObject(_ref2) {
  var object = _ref2.object,
      intent = _ref2.intent,
      override = _ref2.override;
  var payloadClass = itemPayloadClassForIntent(intent);
  return CreatePayload({
    object: object,
    payloadClass: payloadClass,
    override: override
  });
}
function CreateSourcedPayloadFromObject(_ref3) {
  var object = _ref3.object,
      source = _ref3.source,
      override = _ref3.override;
  var payloadClass = payloadClassForSource(source);
  return CreatePayload({
    object: object,
    payloadClass: payloadClass,
    override: override
  });
}

function CreatePayload(_ref4) {
  var object = _ref4.object,
      payloadClass = _ref4.payloadClass,
      override = _ref4.override;
  var rawPayload = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_2__["pickByCopy"])(object, payloadClass.fields());

  if (override) {
    if (!Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_2__["isObject"])(override)) {
      throw 'Attempting to override payload with non-object';
    }

    Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_2__["deepMergeByCopy"])(rawPayload, override);
  } // eslint-disable-next-line new-cap


  return Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_2__["deepFreeze"])(new payloadClass(rawPayload, true));
}

function CopyPayload(_ref5) {
  var payload = _ref5.payload,
      override = _ref5.override;
  var rawPayload = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_2__["pickByCopy"])(payload, payload.fields());

  if (override) {
    Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_2__["deepMergeByCopy"])(rawPayload, override);
  }

  return Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_2__["deepFreeze"])(new payload.constructor(rawPayload, true));
}
function CreateEncryptionParameters(rawParameters) {
  var copy = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_2__["Copy"])(rawParameters);
  return Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_2__["deepFreeze"])(new _Payloads__WEBPACK_IMPORTED_MODULE_0__["SNEncryptionParameters"](copy, true));
}
function CopyEncryptionParameters(_ref6) {
  var encryptionParameters = _ref6.encryptionParameters,
      override = _ref6.override;

  if (!encryptionParameters.isEncryptionParameters) {
    throw 'Attempting to copy encryption parameters from non-parameters object.';
  }

  var rawParameters = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_2__["pickByCopy"])(encryptionParameters, _Payloads__WEBPACK_IMPORTED_MODULE_0__["SNEncryptionParameters"].fields());

  if (override) {
    Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_2__["deepMergeByCopy"])(rawParameters, override);
  }

  return Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_2__["deepFreeze"])(new _Payloads__WEBPACK_IMPORTED_MODULE_0__["SNEncryptionParameters"](rawParameters, true));
}

function itemPayloadClassForIntent(intent) {
  if (intent === _Protocol__WEBPACK_IMPORTED_MODULE_1__["EncryptionIntents"].FileEncrypted || intent === _Protocol__WEBPACK_IMPORTED_MODULE_1__["EncryptionIntents"].FileDecrypted || intent === _Protocol__WEBPACK_IMPORTED_MODULE_1__["EncryptionIntents"].FilePreferEncrypted) {
    return _Payloads__WEBPACK_IMPORTED_MODULE_0__["SNFileItemPayload"];
  }

  if (intent === _Protocol__WEBPACK_IMPORTED_MODULE_1__["EncryptionIntents"].LocalStoragePreferEncrypted || intent === _Protocol__WEBPACK_IMPORTED_MODULE_1__["EncryptionIntents"].LocalStorageDecrypted || intent === _Protocol__WEBPACK_IMPORTED_MODULE_1__["EncryptionIntents"].LocalStorageEncrypted) {
    return _Payloads__WEBPACK_IMPORTED_MODULE_0__["SNStorageItemPayload"];
  }

  if (intent === _Protocol__WEBPACK_IMPORTED_MODULE_1__["EncryptionIntents"].Sync || intent === _Protocol__WEBPACK_IMPORTED_MODULE_1__["EncryptionIntents"].SyncDecrypted) {
    return _Payloads__WEBPACK_IMPORTED_MODULE_0__["SNServerItemPayload"];
  } else {
    throw "No item payload class found for intent ".concat(intent);
  }
}

function payloadClassForSource(source) {
  if (source === _Payloads__WEBPACK_IMPORTED_MODULE_0__["PayloadSources"].FileImport) {
    return _Payloads__WEBPACK_IMPORTED_MODULE_0__["SNFileItemPayload"];
  }

  if (source === _Payloads__WEBPACK_IMPORTED_MODULE_0__["PayloadSources"].LocalRetrieved || source === _Payloads__WEBPACK_IMPORTED_MODULE_0__["PayloadSources"].LocalDirtied) {
    return _Payloads__WEBPACK_IMPORTED_MODULE_0__["SNStorageItemPayload"];
  }

  if (source === _Payloads__WEBPACK_IMPORTED_MODULE_0__["PayloadSources"].RemoteRetrieved || source === _Payloads__WEBPACK_IMPORTED_MODULE_0__["PayloadSources"].ConflictData || source === _Payloads__WEBPACK_IMPORTED_MODULE_0__["PayloadSources"].ConflictUuid) {
    return _Payloads__WEBPACK_IMPORTED_MODULE_0__["SNServerItemPayload"];
  }

  if (source === _Payloads__WEBPACK_IMPORTED_MODULE_0__["PayloadSources"].LocalSaved || source === _Payloads__WEBPACK_IMPORTED_MODULE_0__["PayloadSources"].RemoteSaved) {
    return _Payloads__WEBPACK_IMPORTED_MODULE_0__["SNSavedServerItemPayload"];
  } else {
    throw "No item payload class found for source ".concat(source);
  }
}

/***/ }),

/***/ "./lib/protocol/payloads/index.js":
/*!****************************************!*\
  !*** ./lib/protocol/payloads/index.js ***!
  \****************************************/
/*! exports provided: PayloadCollection, PayloadCollectionSet, CreateMaxPayloadFromAnyObject, CreateEncryptionParameters, CopyPayload, CopyEncryptionParameters, CreateSourcedPayloadFromObject, CreateIntentPayloadFromObject, payloadClassForSource, PayloadsByDuplicating, PayloadsByAlternatingUuid, PayloadFields, PayloadSources, PurePayload, PayloadFormats, SNPureItemPayload, SNStorageItemPayload, SNServerItemPayload, SNFileItemPayload, SNMaxItemPayload, SNSavedServerItemPayload, SNEncryptionParameters, ConflictStrategies, PayloadsDelta, DeltaFileImport, DeltaOutOfSync, DeltaRemoteConflicts, DeltaRemoteRetrieved, DeltaRemoteSaved, ConflictDelta */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _collection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./collection */ "./lib/protocol/payloads/collection.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PayloadCollection", function() { return _collection__WEBPACK_IMPORTED_MODULE_0__["PayloadCollection"]; });

/* harmony import */ var _collection_set__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./collection_set */ "./lib/protocol/payloads/collection_set.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PayloadCollectionSet", function() { return _collection_set__WEBPACK_IMPORTED_MODULE_1__["PayloadCollectionSet"]; });

/* harmony import */ var _generator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./generator */ "./lib/protocol/payloads/generator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateMaxPayloadFromAnyObject", function() { return _generator__WEBPACK_IMPORTED_MODULE_2__["CreateMaxPayloadFromAnyObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateEncryptionParameters", function() { return _generator__WEBPACK_IMPORTED_MODULE_2__["CreateEncryptionParameters"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CopyPayload", function() { return _generator__WEBPACK_IMPORTED_MODULE_2__["CopyPayload"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CopyEncryptionParameters", function() { return _generator__WEBPACK_IMPORTED_MODULE_2__["CopyEncryptionParameters"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateSourcedPayloadFromObject", function() { return _generator__WEBPACK_IMPORTED_MODULE_2__["CreateSourcedPayloadFromObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateIntentPayloadFromObject", function() { return _generator__WEBPACK_IMPORTED_MODULE_2__["CreateIntentPayloadFromObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "payloadClassForSource", function() { return _generator__WEBPACK_IMPORTED_MODULE_2__["payloadClassForSource"]; });

/* harmony import */ var _Payloads_functions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads/functions */ "./lib/protocol/payloads/functions.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PayloadsByDuplicating", function() { return _Payloads_functions__WEBPACK_IMPORTED_MODULE_3__["PayloadsByDuplicating"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PayloadsByAlternatingUuid", function() { return _Payloads_functions__WEBPACK_IMPORTED_MODULE_3__["PayloadsByAlternatingUuid"]; });

/* harmony import */ var _Payloads_fields__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Payloads/fields */ "./lib/protocol/payloads/fields.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PayloadFields", function() { return _Payloads_fields__WEBPACK_IMPORTED_MODULE_4__["PayloadFields"]; });

/* harmony import */ var _Payloads_sources__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Payloads/sources */ "./lib/protocol/payloads/sources.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PayloadSources", function() { return _Payloads_sources__WEBPACK_IMPORTED_MODULE_5__["PayloadSources"]; });

/* harmony import */ var _Payloads_pure_payload__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @Payloads/pure_payload */ "./lib/protocol/payloads/pure_payload.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PurePayload", function() { return _Payloads_pure_payload__WEBPACK_IMPORTED_MODULE_6__["PurePayload"]; });

/* harmony import */ var _Payloads_formats__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @Payloads/formats */ "./lib/protocol/payloads/formats.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PayloadFormats", function() { return _Payloads_formats__WEBPACK_IMPORTED_MODULE_7__["PayloadFormats"]; });

/* harmony import */ var _Payloads_pure_item_payload__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @Payloads/pure_item_payload */ "./lib/protocol/payloads/pure_item_payload.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNPureItemPayload", function() { return _Payloads_pure_item_payload__WEBPACK_IMPORTED_MODULE_8__["SNPureItemPayload"]; });

/* harmony import */ var _Payloads_storage_item_payload__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @Payloads/storage_item_payload */ "./lib/protocol/payloads/storage_item_payload.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNStorageItemPayload", function() { return _Payloads_storage_item_payload__WEBPACK_IMPORTED_MODULE_9__["SNStorageItemPayload"]; });

/* harmony import */ var _Payloads_server_item_payload__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @Payloads/server_item_payload */ "./lib/protocol/payloads/server_item_payload.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNServerItemPayload", function() { return _Payloads_server_item_payload__WEBPACK_IMPORTED_MODULE_10__["SNServerItemPayload"]; });

/* harmony import */ var _Payloads_file_item_payload__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @Payloads/file_item_payload */ "./lib/protocol/payloads/file_item_payload.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNFileItemPayload", function() { return _Payloads_file_item_payload__WEBPACK_IMPORTED_MODULE_11__["SNFileItemPayload"]; });

/* harmony import */ var _Payloads_max_item_payload__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @Payloads/max_item_payload */ "./lib/protocol/payloads/max_item_payload.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNMaxItemPayload", function() { return _Payloads_max_item_payload__WEBPACK_IMPORTED_MODULE_12__["SNMaxItemPayload"]; });

/* harmony import */ var _Payloads_saved_server_item_payload__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @Payloads/saved_server_item_payload */ "./lib/protocol/payloads/saved_server_item_payload.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNSavedServerItemPayload", function() { return _Payloads_saved_server_item_payload__WEBPACK_IMPORTED_MODULE_13__["SNSavedServerItemPayload"]; });

/* harmony import */ var _Payloads_encryption_parameters__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @Payloads/encryption_parameters */ "./lib/protocol/payloads/encryption_parameters.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNEncryptionParameters", function() { return _Payloads_encryption_parameters__WEBPACK_IMPORTED_MODULE_14__["SNEncryptionParameters"]; });

/* harmony import */ var _Payloads_deltas__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @Payloads/deltas */ "./lib/protocol/payloads/deltas/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConflictStrategies", function() { return _Payloads_deltas__WEBPACK_IMPORTED_MODULE_15__["ConflictStrategies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PayloadsDelta", function() { return _Payloads_deltas__WEBPACK_IMPORTED_MODULE_15__["PayloadsDelta"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeltaFileImport", function() { return _Payloads_deltas__WEBPACK_IMPORTED_MODULE_15__["DeltaFileImport"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeltaOutOfSync", function() { return _Payloads_deltas__WEBPACK_IMPORTED_MODULE_15__["DeltaOutOfSync"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeltaRemoteConflicts", function() { return _Payloads_deltas__WEBPACK_IMPORTED_MODULE_15__["DeltaRemoteConflicts"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeltaRemoteRetrieved", function() { return _Payloads_deltas__WEBPACK_IMPORTED_MODULE_15__["DeltaRemoteRetrieved"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeltaRemoteSaved", function() { return _Payloads_deltas__WEBPACK_IMPORTED_MODULE_15__["DeltaRemoteSaved"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConflictDelta", function() { return _Payloads_deltas__WEBPACK_IMPORTED_MODULE_15__["ConflictDelta"]; });


















/***/ }),

/***/ "./lib/protocol/payloads/max_item_payload.js":
/*!***************************************************!*\
  !*** ./lib/protocol/payloads/max_item_payload.js ***!
  \***************************************************/
/*! exports provided: SNMaxItemPayload */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNMaxItemPayload", function() { return SNMaxItemPayload; });
/* harmony import */ var _Payloads_pure_item_payload__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Payloads/pure_item_payload */ "./lib/protocol/payloads/pure_item_payload.js");
/* harmony import */ var _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Payloads/fields */ "./lib/protocol/payloads/fields.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



/** The MaxItemPayload represents a payload with all possible fields */

var SNMaxItemPayload =
/*#__PURE__*/
function (_SNPureItemPayload) {
  _inherits(SNMaxItemPayload, _SNPureItemPayload);

  function SNMaxItemPayload() {
    _classCallCheck(this, SNMaxItemPayload);

    return _possibleConstructorReturn(this, _getPrototypeOf(SNMaxItemPayload).apply(this, arguments));
  }

  _createClass(SNMaxItemPayload, null, [{
    key: "fields",
    value: function fields() {
      return [_Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Uuid, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].ContentType, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].ItemsKeyId, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].EncItemKey, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Content, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].CreatedAt, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].UpdatedAt, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Deleted, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Legacy003AuthHash, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Legacy003AuthParams, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Dirty, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].DirtiedDate, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].ErrorDecrypting, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].ErrorDecryptingChanged, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].WaitingForKey, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Dummy, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].LastSyncBegan, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].LastSyncEnd];
    }
  }]);

  return SNMaxItemPayload;
}(_Payloads_pure_item_payload__WEBPACK_IMPORTED_MODULE_0__["SNPureItemPayload"]);

/***/ }),

/***/ "./lib/protocol/payloads/pure_item_payload.js":
/*!****************************************************!*\
  !*** ./lib/protocol/payloads/pure_item_payload.js ***!
  \****************************************************/
/*! exports provided: SNPureItemPayload */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNPureItemPayload", function() { return SNPureItemPayload; });
/* harmony import */ var _Payloads_pure_payload__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Payloads/pure_payload */ "./lib/protocol/payloads/pure_payload.js");
/* harmony import */ var _Protocol__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Protocol */ "./lib/protocol/index.js");
/* harmony import */ var _Models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Models */ "./lib/models/index.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }




var SNPureItemPayload =
/*#__PURE__*/
function (_PurePayload) {
  _inherits(SNPureItemPayload, _PurePayload);

  function SNPureItemPayload() {
    _classCallCheck(this, SNPureItemPayload);

    return _possibleConstructorReturn(this, _getPrototypeOf(SNPureItemPayload).apply(this, arguments));
  }

  _createClass(SNPureItemPayload, [{
    key: "compareContentFields",

    /**
     * Compares the .content fields for equality, creating new SFItem objects
     * to properly handle .content intricacies.
     */
    value: function compareContentFields(otherPayload) {
      var left = new _Models__WEBPACK_IMPORTED_MODULE_2__["SFItem"](this);
      var right = new _Models__WEBPACK_IMPORTED_MODULE_2__["SFItem"](otherPayload);
      return left.isItemContentEqualWith(right);
    }
  }, {
    key: "version",
    get: function get() {
      return this.content.substring(0, _Protocol__WEBPACK_IMPORTED_MODULE_1__["ProtocolVersions"].VersionLength);
    }
    /**
     * Whether a payload can be discarded and removed from storage.
     * This value is true if a payload is marked as deleted and not dirty.
     */

  }, {
    key: "discardable",
    get: function get() {
      return this.deleted && !this.dirty;
    }
  }], [{
    key: "fields",
    value: function fields() {
      throw 'Must override SNPureItemPayload.fields';
    }
  }]);

  return SNPureItemPayload;
}(_Payloads_pure_payload__WEBPACK_IMPORTED_MODULE_0__["PurePayload"]);

/***/ }),

/***/ "./lib/protocol/payloads/pure_payload.js":
/*!***********************************************!*\
  !*** ./lib/protocol/payloads/pure_payload.js ***!
  \***********************************************/
/*! exports provided: PurePayload */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PurePayload", function() { return PurePayload; });
/* harmony import */ var _Protocol_versions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Protocol/versions */ "./lib/protocol/versions.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Payloads_generator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads/generator */ "./lib/protocol/payloads/generator.js");
/* harmony import */ var _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads/formats */ "./lib/protocol/payloads/formats.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }





var PurePayload =
/*#__PURE__*/
function () {
  function PurePayload(rawPayload, isFromGenerator) {
    _classCallCheck(this, PurePayload);

    if (rawPayload.isItem) {
      throw 'Cannot create payload from item directly';
    }

    if (!isFromGenerator) {
      throw 'Do not construct payloads directly. Use generator functions';
    }
    /** Set all required fields on our instance of payload */


    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = this.constructor.fields()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var field = _step.value;
        var value = rawPayload[field];

        if (!Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_1__["isNullOrUndefined"])(value)) {
          this[field] = value;
        }
      }
      /** Keep unmodified values as existing on item */

      /**
      if(item.errorDecrypting) {
        if(encryptionPayload) {
          throw 'Should not feed custom encryption payload if the object was not decrypted.';
        }
        this.content = item.content;
        this.enc_item_key = item.enc_item_key;
        if(item.auth_hash) {
          this.auth_hash = item.auth_hash;
        }
      }
      */

    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }

  _createClass(PurePayload, [{
    key: "mergedWith",
    value: function mergedWith(otherPayload) {
      return Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_2__["CopyPayload"])({
        payload: this,
        override: otherPayload
      });
    }
  }, {
    key: "fields",
    value: function fields() {
      return this.constructor.fields();
    }
  }, {
    key: "getFormat",
    value: function getFormat() {
      if (Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_1__["isString"])(this.content)) {
        if (this.content.startsWith(_Protocol_versions__WEBPACK_IMPORTED_MODULE_0__["ProtocolVersions"].V000Base64Decrypted)) {
          return _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBase64String;
        } else {
          return _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].EncryptedString;
        }
      } else if (Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_1__["isObject"])(this.content)) {
        return _Payloads_formats__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBareObject;
      } else {
        throw 'Unhandle content format for payload.getFormat()';
      }
    }
    /** Allows consumers to check if object they are inspecting is a generic object or an actual payload */

  }, {
    key: "version",
    get: function get() {
      if (Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_1__["isString"])(this.content)) {
        return this.content.substring(0, _Protocol_versions__WEBPACK_IMPORTED_MODULE_0__["ProtocolVersions"].VersionLength);
      } else {
        return this.content.version;
      }
    }
  }, {
    key: "isPayload",
    get: function get() {
      return true;
    }
  }], [{
    key: "fields",
    value: function fields() {
      throw 'Must override PurePayload.fields';
    }
  }]);

  return PurePayload;
}();

/***/ }),

/***/ "./lib/protocol/payloads/saved_server_item_payload.js":
/*!************************************************************!*\
  !*** ./lib/protocol/payloads/saved_server_item_payload.js ***!
  \************************************************************/
/*! exports provided: SNSavedServerItemPayload */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNSavedServerItemPayload", function() { return SNSavedServerItemPayload; });
/* harmony import */ var _Payloads_pure_item_payload__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Payloads/pure_item_payload */ "./lib/protocol/payloads/pure_item_payload.js");
/* harmony import */ var _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Payloads/fields */ "./lib/protocol/payloads/fields.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



/**
 * The saved server item payload represents the payload we want to map
 * when mapping saved_items from the server. We only want to map the
 * updated_at value the server returns for the item, and basically
 * nothing else.
 */

var SNSavedServerItemPayload =
/*#__PURE__*/
function (_SNPureItemPayload) {
  _inherits(SNSavedServerItemPayload, _SNPureItemPayload);

  function SNSavedServerItemPayload() {
    _classCallCheck(this, SNSavedServerItemPayload);

    return _possibleConstructorReturn(this, _getPrototypeOf(SNSavedServerItemPayload).apply(this, arguments));
  }

  _createClass(SNSavedServerItemPayload, null, [{
    key: "fields",
    value: function fields() {
      return [_Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Uuid, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].ContentType, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].UpdatedAt, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Deleted, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Dirty, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].LastSyncEnd];
    }
  }]);

  return SNSavedServerItemPayload;
}(_Payloads_pure_item_payload__WEBPACK_IMPORTED_MODULE_0__["SNPureItemPayload"]);

/***/ }),

/***/ "./lib/protocol/payloads/server_item_payload.js":
/*!******************************************************!*\
  !*** ./lib/protocol/payloads/server_item_payload.js ***!
  \******************************************************/
/*! exports provided: SNServerItemPayload */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNServerItemPayload", function() { return SNServerItemPayload; });
/* harmony import */ var _Payloads_pure_item_payload__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Payloads/pure_item_payload */ "./lib/protocol/payloads/pure_item_payload.js");
/* harmony import */ var _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Payloads/fields */ "./lib/protocol/payloads/fields.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var SNServerItemPayload =
/*#__PURE__*/
function (_SNPureItemPayload) {
  _inherits(SNServerItemPayload, _SNPureItemPayload);

  function SNServerItemPayload() {
    _classCallCheck(this, SNServerItemPayload);

    return _possibleConstructorReturn(this, _getPrototypeOf(SNServerItemPayload).apply(this, arguments));
  }

  _createClass(SNServerItemPayload, null, [{
    key: "fields",
    value: function fields() {
      return [_Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Uuid, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].ContentType, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].ItemsKeyId, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].EncItemKey, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Content, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].CreatedAt, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].UpdatedAt, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Deleted, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Legacy003AuthHash];
    }
  }]);

  return SNServerItemPayload;
}(_Payloads_pure_item_payload__WEBPACK_IMPORTED_MODULE_0__["SNPureItemPayload"]);

/***/ }),

/***/ "./lib/protocol/payloads/sources.js":
/*!******************************************!*\
  !*** ./lib/protocol/payloads/sources.js ***!
  \******************************************/
/*! exports provided: PayloadSources, isPayloadSourceRetrieved */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PayloadSources", function() { return PayloadSources; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPayloadSourceRetrieved", function() { return isPayloadSourceRetrieved; });
var PayloadSources = {
  RemoteRetrieved: 1,
  RemoteSaved: 2,
  LocalSaved: 3,
  LocalRetrieved: 4,
  LocalDirtied: 5,

  /** Payloads retrieved from an external
   extension/component */
  ComponentRetrieved: 6,

  /** When a component is installed by the desktop
  and some of its values change */
  DesktopInstalled: 7,

  /** aciton-based Extensions like note history */
  RemoteActionRetrieved: 8,
  FileImport: 9,
  RemoteConflict: 10,
  ImportConflict: 11,

  /** Payloads that are saved or saving in the
  current sync request */
  SaveOrSaving: 12,

  /** Payloads that have been decrypted for the convenience
  of consumers who can only work with decrypted formats. The
  decrypted payloads exist in transient, ephemeral space, and
  are not used in anyway. */
  DecryptedTransient: 13,
  ConflictUuid: 14,
  ConflictData: 15
};
function isPayloadSourceRetrieved(source) {
  return [PayloadSources.RemoteRetrieved, PayloadSources.ComponentRetrieved, PayloadSources.RemoteActionRetrieved].includes(source);
}

/***/ }),

/***/ "./lib/protocol/payloads/storage_item_payload.js":
/*!*******************************************************!*\
  !*** ./lib/protocol/payloads/storage_item_payload.js ***!
  \*******************************************************/
/*! exports provided: SNStorageItemPayload */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNStorageItemPayload", function() { return SNStorageItemPayload; });
/* harmony import */ var _Payloads_pure_item_payload__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Payloads/pure_item_payload */ "./lib/protocol/payloads/pure_item_payload.js");
/* harmony import */ var _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Payloads/fields */ "./lib/protocol/payloads/fields.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var SNStorageItemPayload =
/*#__PURE__*/
function (_SNPureItemPayload) {
  _inherits(SNStorageItemPayload, _SNPureItemPayload);

  function SNStorageItemPayload() {
    _classCallCheck(this, SNStorageItemPayload);

    return _possibleConstructorReturn(this, _getPrototypeOf(SNStorageItemPayload).apply(this, arguments));
  }

  _createClass(SNStorageItemPayload, null, [{
    key: "fields",
    value: function fields() {
      return [_Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Uuid, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].ContentType, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].ItemsKeyId, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].EncItemKey, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Content, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].CreatedAt, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].UpdatedAt, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Deleted, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Legacy003AuthHash, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Legacy003AuthParams, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].Dirty, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].DirtiedDate, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].ErrorDecrypting, _Payloads_fields__WEBPACK_IMPORTED_MODULE_1__["PayloadFields"].WaitingForKey];
    }
  }]);

  return SNStorageItemPayload;
}(_Payloads_pure_item_payload__WEBPACK_IMPORTED_MODULE_0__["SNPureItemPayload"]);

/***/ }),

/***/ "./lib/protocol/root_key.js":
/*!**********************************!*\
  !*** ./lib/protocol/root_key.js ***!
  \**********************************/
/*! exports provided: SNRootKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNRootKey", function() { return SNRootKey; });
/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
/* harmony import */ var _Protocol_versions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Protocol/versions */ "./lib/protocol/versions.js");
/* harmony import */ var _Lib_uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Lib/uuid */ "./lib/uuid.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }





var SNRootKey =
/*#__PURE__*/
function () {
  _createClass(SNRootKey, null, [{
    key: "Create",
    value: function Create(_ref) {
      var uuid, content;
      return regeneratorRuntime.async(function Create$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              uuid = _ref.uuid, content = _ref.content;

              if (uuid) {
                _context.next = 5;
                break;
              }

              _context.next = 4;
              return regeneratorRuntime.awrap(_Lib_uuid__WEBPACK_IMPORTED_MODULE_2__["Uuid"].GenerateUuid());

            case 4:
              uuid = _context.sent;

            case 5:
              return _context.abrupt("return", new SNRootKey({
                uuid: uuid,
                content: content
              }));

            case 6:
            case "end":
              return _context.stop();
          }
        }
      });
    }
  }]);

  function SNRootKey(_ref2) {
    var uuid = _ref2.uuid,
        content = _ref2.content;

    _classCallCheck(this, SNRootKey);

    this.uuid = uuid;
    this.content = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_3__["Copy"])(content);

    if (!this.content.version) {
      if (this.content.dataAuthenticationKey) {
        /**
         * If there's no version stored, it must be either 001 or 002.
         * If there's a dataAuthenticationKey, it has to be 002. Otherwise it's 001.
         */
        this.content.version = _Protocol_versions__WEBPACK_IMPORTED_MODULE_1__["ProtocolVersions"].V002;
      } else {
        this.content.version = _Protocol_versions__WEBPACK_IMPORTED_MODULE_1__["ProtocolVersions"].V001;
      }
    }

    if (!this.content.version) {
      throw 'Attempting to create key without version.';
    }

    Object.freeze(this);
  }

  _createClass(SNRootKey, [{
    key: "compare",

    /**
     * Compares two keys for equality
     * @returns Boolean
    */
    value: function compare(otherKey) {
      if (this.version !== otherKey.version) {
        return false;
      }

      var hasServerPassword = this.serverPassword && otherKey.serverPassword;
      return this.masterKey === otherKey.masterKey && (!hasServerPassword || this.serverPassword === otherKey.serverPassword);
    }
    /**
     * @returns Object containg key/values that should be extracted from key for local saving.
     */

  }, {
    key: "getPersistableValue",
    value: function getPersistableValue() {
      var values = {
        version: this.version
      };

      if (this.masterKey) {
        values.masterKey = this.masterKey;
      }

      if (this.dataAuthenticationKey) {
        values.dataAuthenticationKey = this.dataAuthenticationKey;
      }

      return values;
    }
  }, {
    key: "version",
    get: function get() {
      return this.content.version;
    }
  }, {
    key: "isRootKey",
    get: function get() {
      return true;
    }
    /**
     * When the root key is used to encrypt items, we use the masterKey directly.
     */

  }, {
    key: "itemsKey",
    get: function get() {
      return this.masterKey;
    }
  }, {
    key: "masterKey",
    get: function get() {
      return this.content.masterKey;
    }
  }, {
    key: "serverPassword",
    get: function get() {
      return this.content.serverPassword;
    }
    /** 003 and below only. */

  }, {
    key: "dataAuthenticationKey",
    get: function get() {
      return this.content.dataAuthenticationKey;
    }
  }], [{
    key: "contentType",
    value: function contentType() {
      return _Models_content_types__WEBPACK_IMPORTED_MODULE_0__["ContentTypes"].RootKey;
    }
  }]);

  return SNRootKey;
}();

/***/ }),

/***/ "./lib/protocol/versions.js":
/*!**********************************!*\
  !*** ./lib/protocol/versions.js ***!
  \**********************************/
/*! exports provided: ProtocolVersions, compareVersions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProtocolVersions", function() { return ProtocolVersions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareVersions", function() { return compareVersions; });
var ProtocolVersions = {
  V000Base64Decrypted: '000',
  V001: '001',
  V002: '002',
  V003: '003',
  V004: '004',
  VersionLength: 3
};
/** 
 * -1 if a < b
 * 0 if a == b
 * 1 is a > b
 */

function compareVersions(a, b) {
  var aNum = Number(a);
  var bNum = Number(b);
  return aNum - bNum;
}

/***/ }),

/***/ "./lib/services/actions_service.js":
/*!*****************************************!*\
  !*** ./lib/services/actions_service.js ***!
  \*****************************************/
/*! exports provided: SNActionsService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNActionsService", function() { return SNActionsService; });
/* harmony import */ var _Payloads__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Payloads */ "./lib/protocol/payloads/index.js");
/* harmony import */ var _Protocol__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Protocol */ "./lib/protocol/index.js");
/* harmony import */ var _Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Lib/services/pure_service */ "./lib/services/pure_service.js");
/* harmony import */ var _Models__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Models */ "./lib/models/index.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }





var SNActionsService =
/*#__PURE__*/
function (_PureService) {
  _inherits(SNActionsService, _PureService);

  function SNActionsService(_ref) {
    var _this;

    var alertService = _ref.alertService,
        deviceInterface = _ref.deviceInterface,
        httpService = _ref.httpService,
        modelManager = _ref.modelManager,
        protocolService = _ref.protocolService,
        syncService = _ref.syncService;

    _classCallCheck(this, SNActionsService);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNActionsService).call(this));
    _this.alertService = alertService;
    _this.deviceInterface = deviceInterface;
    _this.httpService = httpService;
    _this.modelManager = modelManager;
    _this.protocolService = protocolService;
    _this.syncService = syncService;
    _this.previousPasswords = [];
    return _this;
  }

  _createClass(SNActionsService, [{
    key: "getExtensions",
    value: function getExtensions() {
      return this.modelManager.validItemsForContentType(_Models__WEBPACK_IMPORTED_MODULE_3__["ContentTypes"].ActionsExtension);
    }
  }, {
    key: "extensionsInContextOfItem",
    value: function extensionsInContextOfItem(item) {
      return this.getExtensions().filter(function (ext) {
        return ext.supported_types.includes(item.content_type) || ext.actionsWithContextForItem(item).length > 0;
      });
    }
    /**
     * Loads an extension in the context of a certain item. 
     * The server then has the chance to respond with actions that are
     * relevant just to this item. The response extension is not saved, 
     * just displayed as a one-time thing.
    */

  }, {
    key: "loadExtensionInContextOfItem",
    value: function loadExtensionInContextOfItem(extension, item) {
      var params;
      return regeneratorRuntime.async(function loadExtensionInContextOfItem$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              params = {
                content_type: item.content_type,
                item_uuid: item.uuid
              };
              return _context.abrupt("return", this.httpService.getAbsolute({
                url: extension.url,
                params: params
              }).then(function (response) {
                if (response.description) {
                  extension.description = response.description;
                }

                if (response.supported_types) {
                  extension.supported_types = response.supported_types;
                }

                if (response.actions) {
                  extension.actions = response.actions.map(function (action) {
                    return new _Models__WEBPACK_IMPORTED_MODULE_3__["Action"](action);
                  });
                } else {
                  extension.actions = [];
                }

                return extension;
              }).catch(function (response) {
                console.error("Error loading extension", response);
                return null;
              }));

            case 2:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "runAction",
    value: function runAction(_ref2) {
      var action, item, passwordRequestHandler, result;
      return regeneratorRuntime.async(function runAction$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              action = _ref2.action, item = _ref2.item, passwordRequestHandler = _ref2.passwordRequestHandler;
              action.running = true;
              _context2.t0 = action.verb;
              _context2.next = _context2.t0 === 'get' ? 5 : _context2.t0 === 'render' ? 9 : _context2.t0 === 'show' ? 13 : _context2.t0 === 'post' ? 17 : 21;
              break;

            case 5:
              _context2.next = 7;
              return regeneratorRuntime.awrap(this.handleGetAction({
                action: action,
                passwordRequestHandler: passwordRequestHandler
              }));

            case 7:
              result = _context2.sent;
              return _context2.abrupt("break", 22);

            case 9:
              _context2.next = 11;
              return regeneratorRuntime.awrap(this.handleRenderAction({
                action: action,
                passwordRequestHandler: passwordRequestHandler
              }));

            case 11:
              result = _context2.sent;
              return _context2.abrupt("break", 22);

            case 13:
              _context2.next = 15;
              return regeneratorRuntime.awrap(this.handleShowAction(action));

            case 15:
              result = _context2.sent;
              return _context2.abrupt("break", 22);

            case 17:
              _context2.next = 19;
              return regeneratorRuntime.awrap(this.handlePostAction(action, item));

            case 19:
              result = _context2.sent;
              return _context2.abrupt("break", 22);

            case 21:
              return _context2.abrupt("break", 22);

            case 22:
              action.lastExecuted = new Date();
              action.running = false;
              return _context2.abrupt("return", result);

            case 25:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "handleGetAction",
    value: function handleGetAction(_ref3) {
      var _this2 = this;

      var action, passwordRequestHandler;
      return regeneratorRuntime.async(function handleGetAction$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              action = _ref3.action, passwordRequestHandler = _ref3.passwordRequestHandler;
              return _context3.abrupt("return", new Promise(function (resolve, reject) {
                _this2.alertService.confirm({
                  text: "Are you sure you want to replace the current note contents with this action's results?",
                  onConfirm: function onConfirm() {
                    _this2.runConfirmedGetAction({
                      action: action,
                      passwordRequestHandler: passwordRequestHandler
                    }).then(resolve);
                  }
                });
              }));

            case 2:
            case "end":
              return _context3.stop();
          }
        }
      });
    }
  }, {
    key: "runConfirmedGetAction",
    value: function runConfirmedGetAction(_ref4) {
      var _this3 = this;

      var action, passwordRequestHandler, response, payload, items, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, mappedItem;

      return regeneratorRuntime.async(function runConfirmedGetAction$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              action = _ref4.action, passwordRequestHandler = _ref4.passwordRequestHandler;
              _context4.next = 3;
              return regeneratorRuntime.awrap(this.httpService.getAbsolute({
                url: action.url
              }).catch(function (response) {
                var error = response && response.error || {
                  message: "An issue occurred while processing this action. Please try again."
                };

                _this3.alertService.alert({
                  text: error.message
                });

                action.error = true;
                return {
                  error: error
                };
              }));

            case 3:
              response = _context4.sent;

              if (!response.error) {
                _context4.next = 6;
                break;
              }

              return _context4.abrupt("return", response);

            case 6:
              action.error = false;
              _context4.next = 9;
              return regeneratorRuntime.awrap(this.payloadByDecryptingResponse({
                response: response,
                passwordRequestHandler: passwordRequestHandler
              }));

            case 9:
              payload = _context4.sent;
              _context4.next = 12;
              return regeneratorRuntime.awrap(this.modelManager.mapPayload({
                payload: payload,
                source: _Payloads__WEBPACK_IMPORTED_MODULE_0__["PayloadSources"].RemoteActionRetrieved
              }));

            case 12:
              items = _context4.sent;
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context4.prev = 16;

              for (_iterator = items[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                mappedItem = _step.value;
                this.modelManager.setItemDirty(mappedItem, true);
              }

              _context4.next = 24;
              break;

            case 20:
              _context4.prev = 20;
              _context4.t0 = _context4["catch"](16);
              _didIteratorError = true;
              _iteratorError = _context4.t0;

            case 24:
              _context4.prev = 24;
              _context4.prev = 25;

              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }

            case 27:
              _context4.prev = 27;

              if (!_didIteratorError) {
                _context4.next = 30;
                break;
              }

              throw _iteratorError;

            case 30:
              return _context4.finish(27);

            case 31:
              return _context4.finish(24);

            case 32:
              this.syncService.sync();
              return _context4.abrupt("return", {
                response: response,
                item: response.item
              });

            case 34:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this, [[16, 20, 24, 32], [25,, 27, 31]]);
    }
  }, {
    key: "handleRenderAction",
    value: function handleRenderAction(_ref5) {
      var _this4 = this;

      var action, passwordRequestHandler;
      return regeneratorRuntime.async(function handleRenderAction$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              action = _ref5.action, passwordRequestHandler = _ref5.passwordRequestHandler;
              return _context6.abrupt("return", this.httpService.getAbsolute({
                url: action.url
              }).then(function _callee(response) {
                var payload, item;
                return regeneratorRuntime.async(function _callee$(_context5) {
                  while (1) {
                    switch (_context5.prev = _context5.next) {
                      case 0:
                        action.error = false;
                        _context5.next = 3;
                        return regeneratorRuntime.awrap(_this4.payloadByDecryptingResponse({
                          response: response,
                          passwordRequestHandler: passwordRequestHandler
                        }));

                      case 3:
                        payload = _context5.sent;

                        if (!payload) {
                          _context5.next = 7;
                          break;
                        }

                        item = _this4.modelManager.mapPayload({
                          payload: payload
                        });
                        return _context5.abrupt("return", {
                          response: response,
                          item: item
                        });

                      case 7:
                      case "end":
                        return _context5.stop();
                    }
                  }
                });
              }).catch(function (response) {
                var error = response && response.error || {
                  message: "An issue occurred while processing this action. Please try again."
                };

                _this4.alertService.alert({
                  text: error.message
                });

                action.error = true;
                return {
                  error: error
                };
              }));

            case 2:
            case "end":
              return _context6.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "payloadByDecryptingResponse",
    value: function payloadByDecryptingResponse(_ref6) {
      var response, key, passwordRequestHandler, decryptedPayload, triedPasswords, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, passwordCandidate, _key, nestedResponse, password;

      return regeneratorRuntime.async(function payloadByDecryptingResponse$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              response = _ref6.response, key = _ref6.key, passwordRequestHandler = _ref6.passwordRequestHandler;
              _context7.next = 3;
              return regeneratorRuntime.awrap(this.protocolService.payloadsByDecryptingRawPayload({
                rawPayload: response.item,
                key: key
              }));

            case 3:
              decryptedPayload = _context7.sent;

              if (decryptedPayload.errorDecrypting) {
                _context7.next = 6;
                break;
              }

              return _context7.abrupt("return", decryptedPayload);

            case 6:
              if (response.auth_params) {
                _context7.next = 9;
                break;
              }

              /**
               * In some cases revisions were missing auth params. 
               * Instruct the user to email us to get this remedied. 
               */
              this.alertService.alert({
                text: "We were unable to decrypt this revision using your current keys, \n            and this revision is missing metadata that would allow us to try different \n            keys to decrypt it. This can likely be fixed with some manual intervention. \n            Please email hello@standardnotes.org for assistance."
              });
              return _context7.abrupt("return", null);

            case 9:
              /* Try previous passwords */
              triedPasswords = [];
              _iteratorNormalCompletion2 = true;
              _didIteratorError2 = false;
              _iteratorError2 = undefined;
              _context7.prev = 13;
              _iterator2 = this.previousPasswords[Symbol.iterator]();

            case 15:
              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
                _context7.next = 33;
                break;
              }

              passwordCandidate = _step2.value;

              if (!triedPasswords.includes(passwordCandidate)) {
                _context7.next = 19;
                break;
              }

              return _context7.abrupt("continue", 30);

            case 19:
              triedPasswords.push(passwordCandidate);
              _context7.next = 22;
              return regeneratorRuntime.awrap(this.protocolService.computeRootKey({
                password: passwordCandidate,
                keyParams: response.auth_params
              }));

            case 22:
              _key = _context7.sent;

              if (_key) {
                _context7.next = 25;
                break;
              }

              return _context7.abrupt("continue", 30);

            case 25:
              _context7.next = 27;
              return regeneratorRuntime.awrap(this.payloadByDecryptingResponse({
                response: response,
                key: _key,
                passwordRequestHandler: passwordRequestHandler
              }));

            case 27:
              nestedResponse = _context7.sent;

              if (!nestedResponse) {
                _context7.next = 30;
                break;
              }

              return _context7.abrupt("return", nestedResponse);

            case 30:
              _iteratorNormalCompletion2 = true;
              _context7.next = 15;
              break;

            case 33:
              _context7.next = 39;
              break;

            case 35:
              _context7.prev = 35;
              _context7.t0 = _context7["catch"](13);
              _didIteratorError2 = true;
              _iteratorError2 = _context7.t0;

            case 39:
              _context7.prev = 39;
              _context7.prev = 40;

              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }

            case 42:
              _context7.prev = 42;

              if (!_didIteratorError2) {
                _context7.next = 45;
                break;
              }

              throw _iteratorError2;

            case 45:
              return _context7.finish(42);

            case 46:
              return _context7.finish(39);

            case 47:
              _context7.next = 49;
              return regeneratorRuntime.awrap(passwordRequestHandler());

            case 49:
              password = _context7.sent;
              this.previousPasswords.push(password);
              return _context7.abrupt("return", this.payloadByDecryptingResponse({
                response: response,
                key: key,
                passwordRequestHandler: passwordRequestHandler
              }));

            case 52:
            case "end":
              return _context7.stop();
          }
        }
      }, null, this, [[13, 35, 39, 47], [40,, 42, 46]]);
    }
  }, {
    key: "handlePostAction",
    value: function handlePostAction(action, item) {
      var _this5 = this;

      var decrypted, itemParams, params;
      return regeneratorRuntime.async(function handlePostAction$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              decrypted = action.access_type === 'decrypted';
              _context8.next = 3;
              return regeneratorRuntime.awrap(this.outgoingPayloadForItem({
                item: item,
                decrypted: decrypted
              }));

            case 3:
              itemParams = _context8.sent;
              params = {
                items: [itemParams]
              };
              return _context8.abrupt("return", this.httpService.postAbsolute({
                url: action.url,
                params: params
              }).then(function (response) {
                action.error = false;
                return {
                  response: response
                };
              }).catch(function (response) {
                action.error = true;
                console.error("Action error response:", response);

                _this5.alertService.alert({
                  text: "An issue occurred while processing this action. Please try again."
                });

                return {
                  response: response
                };
              }));

            case 6:
            case "end":
              return _context8.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "handleShowAction",
    value: function handleShowAction(action) {
      return regeneratorRuntime.async(function handleShowAction$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              this.deviceInterface.openUrl(action.url);
              return _context9.abrupt("return", {
                response: null
              });

            case 2:
            case "end":
              return _context9.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "outgoingPayloadForItem",
    value: function outgoingPayloadForItem(_ref7) {
      var item, _ref7$decrypted, decrypted, intent;

      return regeneratorRuntime.async(function outgoingPayloadForItem$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              item = _ref7.item, _ref7$decrypted = _ref7.decrypted, decrypted = _ref7$decrypted === void 0 ? false : _ref7$decrypted;
              intent = decrypted ? _Protocol__WEBPACK_IMPORTED_MODULE_1__["EncryptionIntents"].FileDecrypted : _Protocol__WEBPACK_IMPORTED_MODULE_1__["EncryptionIntents"].FileEncrypted;
              return _context10.abrupt("return", this.protocolService.payloadByEncryptingPayload({
                payload: item.payloadRepresentation(),
                intent: intent
              }));

            case 3:
            case "end":
              return _context10.stop();
          }
        }
      }, null, this);
    }
  }]);

  return SNActionsService;
}(_Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_2__["PureService"]);

/***/ }),

/***/ "./lib/services/alert_service.js":
/*!***************************************!*\
  !*** ./lib/services/alert_service.js ***!
  \***************************************/
/*! exports provided: SNAlertService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNAlertService", function() { return SNAlertService; });
/* harmony import */ var _Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/services/pure_service */ "./lib/services/pure_service.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }


var SNAlertService =
/*#__PURE__*/
function (_PureService) {
  _inherits(SNAlertService, _PureService);

  function SNAlertService(_ref) {
    var _this;

    var deviceInterface = _ref.deviceInterface;

    _classCallCheck(this, SNAlertService);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNAlertService).call(this));
    _this.deviceInterface = deviceInterface;
    return _this;
  }

  _createClass(SNAlertService, [{
    key: "alert",
    value: function alert(params) {
      return regeneratorRuntime.async(function alert$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              return _context.abrupt("return", new Promise(function (resolve, reject) {
                window.alert(params.text);
                resolve();
              }));

            case 1:
            case "end":
              return _context.stop();
          }
        }
      });
    }
  }, {
    key: "confirm",
    value: function confirm(params) {
      return regeneratorRuntime.async(function confirm$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              return _context2.abrupt("return", new Promise(function (resolve, reject) {
                if (window.confirm(params.text)) {
                  resolve();
                } else {
                  // eslint-disable-next-line prefer-promise-reject-errors
                  reject();
                }
              }));

            case 1:
            case "end":
              return _context2.stop();
          }
        }
      });
    }
  }]);

  return SNAlertService;
}(_Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__["PureService"]);

/***/ }),

/***/ "./lib/services/api/api_service.js":
/*!*****************************************!*\
  !*** ./lib/services/api/api_service.js ***!
  \*****************************************/
/*! exports provided: SNApiService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNApiService", function() { return SNApiService; });
/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/merge */ "./node_modules/lodash/merge.js");
/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_merge__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Services_api_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Services/api/keys */ "./lib/services/api/keys.js");
/* harmony import */ var _Services_api_messages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Services/api/messages */ "./lib/services/api/messages.js");
/* harmony import */ var _Services_pure_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Services/pure_service */ "./lib/services/pure_service.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Lib_storage_keys__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Lib/storage_keys */ "./lib/storage_keys.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }







var REQUEST_PATH_KEY_PARAMS = '/auth/params';
var REQUEST_PATH_REGISTER = '/auth';
var REQUEST_PATH_LOGIN = '/auth/sign_in';
var REQUEST_PATH_CHANGE_PW = '/auth/change_pw';
var REQUEST_PATH_SYNC = '/items/sync';
var API_VERSION = '20190520';
var SNApiService =
/*#__PURE__*/
function (_PureService) {
  _inherits(SNApiService, _PureService);

  function SNApiService(_ref) {
    var _this;

    var httpService = _ref.httpService,
        storageService = _ref.storageService,
        host = _ref.host;

    _classCallCheck(this, SNApiService);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNApiService).call(this));
    _this.httpService = httpService;
    _this.storageService = storageService;
    _this.host = host;
    return _this;
  }

  _createClass(SNApiService, [{
    key: "setHost",
    value: function setHost(host) {
      return regeneratorRuntime.async(function setHost$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              this.host = host;
              _context.next = 3;
              return regeneratorRuntime.awrap(this.storageService.setValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_5__["StorageKeys"].ServerHost, host));

            case 3:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "getHost",
    value: function getHost() {
      var storedValue;
      return regeneratorRuntime.async(function getHost$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              if (this.host) {
                _context2.next = 5;
                break;
              }

              _context2.next = 3;
              return regeneratorRuntime.awrap(this.storageService.getValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_5__["StorageKeys"].ServerHost));

            case 3:
              storedValue = _context2.sent;
              this.host = storedValue || window._default_sf_server;

            case 5:
              return _context2.abrupt("return", this.host);

            case 6:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "setSessionAuthentication",
    value: function setSessionAuthentication(_ref2) {
      var token;
      return regeneratorRuntime.async(function setSessionAuthentication$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              token = _ref2.token;
              this.sessionToken = token;

            case 2:
            case "end":
              return _context3.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "path",
    value: function path(_path) {
      var host;
      return regeneratorRuntime.async(function path$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return regeneratorRuntime.awrap(this.getHost());

            case 2:
              host = _context4.sent;

              if (host) {
                _context4.next = 5;
                break;
              }

              throw "Attempting to build path ".concat(_path, " with no host.");

            case 5:
              if (_path) {
                _context4.next = 7;
                break;
              }

              throw "Attempting to build path with null path.";

            case 7:
              return _context4.abrupt("return", Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_4__["joinPaths"])(host, _path));

            case 8:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "params",
    value: function params(inParams) {
      var params = lodash_merge__WEBPACK_IMPORTED_MODULE_0___default()(inParams, _defineProperty({}, _Services_api_keys__WEBPACK_IMPORTED_MODULE_1__["ApiEndpointParams"].ApiVersion, API_VERSION));
      return params;
    }
  }, {
    key: "error",
    value: function error(message) {
      return {
        error: {
          message: message
        }
      };
    }
  }, {
    key: "errorResponse",
    value: function errorResponse(response, message) {
      this.log("".concat(message, ": ").concat(response));

      if (Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_4__["isObject"])(response)) {
        return response;
      } else if (Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_4__["isString"])(response)) {
        return this.error(response);
      } else {
        return this.error(message);
      }
    }
    /**
     * @param mfaKeyPath  The params path the server expects for authentication against
     *                    a particular mfa challenge. A value of foo would mean the server
     *                    would receive parameters as params['foo'] with value equal to mfaCode.
     * @param mfaCode     The mfa challenge response value.
     */

  }, {
    key: "getAccountKeyParams",
    value: function getAccountKeyParams(_ref3) {
      var _this2 = this;

      var email, mfaKeyPath, mfaCode, url, params, response;
      return regeneratorRuntime.async(function getAccountKeyParams$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              email = _ref3.email, mfaKeyPath = _ref3.mfaKeyPath, mfaCode = _ref3.mfaCode;
              _context5.next = 3;
              return regeneratorRuntime.awrap(this.path(REQUEST_PATH_KEY_PARAMS));

            case 3:
              url = _context5.sent;
              params = this.params(_defineProperty({
                email: email
              }, mfaKeyPath, mfaCode));
              _context5.next = 7;
              return regeneratorRuntime.awrap(this.httpService.getAbsolute({
                url: url,
                params: params,
                authentication: this.sessionToken
              }).catch(function (errorResponse) {
                return _this2.errorResponse(errorResponse, _Services_api_messages__WEBPACK_IMPORTED_MODULE_2__["API_MESSAGE_GENERIC_INVALID_LOGIN"]);
              }));

            case 7:
              response = _context5.sent;
              return _context5.abrupt("return", response);

            case 9:
            case "end":
              return _context5.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "register",
    value: function register(_ref4) {
      var _this3 = this;

      var email, serverPassword, keyParams, url, params, response;
      return regeneratorRuntime.async(function register$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              email = _ref4.email, serverPassword = _ref4.serverPassword, keyParams = _ref4.keyParams;

              if (!this.registerInProgress) {
                _context6.next = 3;
                break;
              }

              return _context6.abrupt("return", this.error(_Services_api_messages__WEBPACK_IMPORTED_MODULE_2__["API_MESSAGE_REGISTRATION_IN_PROGRESS"]));

            case 3:
              this.registering = true;
              _context6.next = 6;
              return regeneratorRuntime.awrap(this.path(REQUEST_PATH_REGISTER));

            case 6:
              url = _context6.sent;
              params = this.params(_objectSpread({
                password: serverPassword,
                email: email
              }, keyParams.getPortableValue()));
              _context6.next = 10;
              return regeneratorRuntime.awrap(this.httpService.postAbsolute({
                url: url,
                params: params,
                authentication: this.sessionToken
              }).catch(function (errorResponse) {
                return _this3.errorResponse(errorResponse, _Services_api_messages__WEBPACK_IMPORTED_MODULE_2__["API_MESSAGE_GENERIC_REGISTRATION_FAIL"]);
              }));

            case 10:
              response = _context6.sent;
              this.registering = false;
              return _context6.abrupt("return", response);

            case 13:
            case "end":
              return _context6.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "signIn",
    value: function signIn(_ref5) {
      var _this4 = this;

      var email, serverPassword, mfaKeyPath, mfaCode, url, params, response;
      return regeneratorRuntime.async(function signIn$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              email = _ref5.email, serverPassword = _ref5.serverPassword, mfaKeyPath = _ref5.mfaKeyPath, mfaCode = _ref5.mfaCode;

              if (!this.authenticating) {
                _context7.next = 3;
                break;
              }

              return _context7.abrupt("return", this.error(_Services_api_messages__WEBPACK_IMPORTED_MODULE_2__["API_MESSAGE_LOGIN_IN_PROGRESS"]));

            case 3:
              this.authenticating = true;
              _context7.next = 6;
              return regeneratorRuntime.awrap(this.path(REQUEST_PATH_LOGIN));

            case 6:
              url = _context7.sent;
              params = this.params(_defineProperty({
                email: email,
                password: serverPassword
              }, mfaKeyPath, mfaCode));
              _context7.next = 10;
              return regeneratorRuntime.awrap(this.httpService.postAbsolute({
                url: url,
                params: params,
                authentication: this.sessionToken
              }).catch(function (errorResponse) {
                return _this4.errorResponse(errorResponse, _Services_api_messages__WEBPACK_IMPORTED_MODULE_2__["API_MESSAGE_GENERIC_INVALID_LOGIN"]);
              }));

            case 10:
              response = _context7.sent;
              this.authenticating = false;
              return _context7.abrupt("return", response);

            case 13:
            case "end":
              return _context7.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "changePassword",
    value: function changePassword(_ref6) {
      var _this5 = this;

      var email, currentServerPassword, newServerPassword, newKeyParams, url, params, response;
      return regeneratorRuntime.async(function changePassword$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              email = _ref6.email, currentServerPassword = _ref6.currentServerPassword, newServerPassword = _ref6.newServerPassword, newKeyParams = _ref6.newKeyParams;

              if (!this.changing) {
                _context8.next = 3;
                break;
              }

              return _context8.abrupt("return", this.error(_Services_api_messages__WEBPACK_IMPORTED_MODULE_2__["API_MESSAGE_CHANGE_PW_IN_PROGRESS"]));

            case 3:
              this.changing = true;
              _context8.next = 6;
              return regeneratorRuntime.awrap(this.path(REQUEST_PATH_CHANGE_PW));

            case 6:
              url = _context8.sent;
              params = _objectSpread({
                current_password: currentServerPassword,
                new_password: newServerPassword
              }, newKeyParams.getPortableValue());
              _context8.next = 10;
              return regeneratorRuntime.awrap(this.httpService.postAbsolute({
                url: url,
                params: params,
                authentication: this.sessionToken
              }).catch(function (errorResponse) {
                return _this5.errorResponse(errorResponse, _Services_api_messages__WEBPACK_IMPORTED_MODULE_2__["API_MESSAGE_GENERIC_CHANGE_PW_FAIL"]);
              }));

            case 10:
              response = _context8.sent;
              this.changing = false;
              return _context8.abrupt("return", response);

            case 13:
            case "end":
              return _context8.stop();
          }
        }
      }, null, this);
    }
    /**
     * @Syncing
     */

  }, {
    key: "sync",
    value: function sync(_ref7) {
      var _this$params3,
          _this6 = this;

      var payloads, lastSyncToken, paginationToken, limit, checkIntegrity, contentType, customEvent, url, params, response;
      return regeneratorRuntime.async(function sync$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              payloads = _ref7.payloads, lastSyncToken = _ref7.lastSyncToken, paginationToken = _ref7.paginationToken, limit = _ref7.limit, checkIntegrity = _ref7.checkIntegrity, contentType = _ref7.contentType, customEvent = _ref7.customEvent;
              _context9.next = 3;
              return regeneratorRuntime.awrap(this.path(REQUEST_PATH_SYNC));

            case 3:
              url = _context9.sent;
              params = this.params((_this$params3 = {}, _defineProperty(_this$params3, _Services_api_keys__WEBPACK_IMPORTED_MODULE_1__["ApiEndpointParams"].SyncPayloads, payloads), _defineProperty(_this$params3, _Services_api_keys__WEBPACK_IMPORTED_MODULE_1__["ApiEndpointParams"].LastSyncToken, lastSyncToken), _defineProperty(_this$params3, _Services_api_keys__WEBPACK_IMPORTED_MODULE_1__["ApiEndpointParams"].PaginationToken, paginationToken), _defineProperty(_this$params3, _Services_api_keys__WEBPACK_IMPORTED_MODULE_1__["ApiEndpointParams"].IntegrityCheck, checkIntegrity), _defineProperty(_this$params3, _Services_api_keys__WEBPACK_IMPORTED_MODULE_1__["ApiEndpointParams"].SyncDlLimit, limit), _defineProperty(_this$params3, "content_type", contentType), _defineProperty(_this$params3, "event", customEvent), _this$params3));
              _context9.next = 7;
              return regeneratorRuntime.awrap(this.httpService.postAbsolute({
                url: url,
                params: params,
                authentication: this.sessionToken
              }).catch(function (errorResponse) {
                return _this6.errorResponse(errorResponse, _Services_api_messages__WEBPACK_IMPORTED_MODULE_2__["API_MESSAGE_GENERIC_SYNC_FAIL"]);
              }));

            case 7:
              response = _context9.sent;
              return _context9.abrupt("return", response);

            case 9:
            case "end":
              return _context9.stop();
          }
        }
      }, null, this);
    }
  }]);

  return SNApiService;
}(_Services_pure_service__WEBPACK_IMPORTED_MODULE_3__["PureService"]);

/***/ }),

/***/ "./lib/services/api/keys.js":
/*!**********************************!*\
  !*** ./lib/services/api/keys.js ***!
  \**********************************/
/*! exports provided: ApiEndpointParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApiEndpointParams", function() { return ApiEndpointParams; });
var ApiEndpointParams = {
  LastSyncToken: 'sync_token',
  PaginationToken: 'cursor_token',
  IntegrityCheck: 'compute_integrity',
  IntegrityResult: 'integrity_hash',
  SyncDlLimit: 'limit',
  SyncPayloads: 'items',
  ApiVersion: 'api'
};

/***/ }),

/***/ "./lib/services/api/messages.js":
/*!**************************************!*\
  !*** ./lib/services/api/messages.js ***!
  \**************************************/
/*! exports provided: API_MESSAGE_GENERIC_INVALID_LOGIN, API_MESSAGE_GENERIC_REGISTRATION_FAIL, API_MESSAGE_GENERIC_CHANGE_PW_FAIL, API_MESSAGE_GENERIC_SYNC_FAIL, API_MESSAGE_REGISTRATION_IN_PROGRESS, API_MESSAGE_LOGIN_IN_PROGRESS, API_MESSAGE_CHANGE_PW_IN_PROGRESS, API_MESSAGE_FAILBACK_LOGIN_FAIL, UNSUPPORTED_PROTOCOL_VERSION, EXPIRED_PROTOCOL_VERSION, OUTDATED_PROTOCOL_VERSION, UNSUPPORTED_PASSWORD_COST, INVALID_PASSWORD_COST, OUTDATED_PROTOCOL_ALERT_TITLE, OUTDATED_PROTOCOL_ALERT_IGNORE, InsufficientPasswordMessage, StrictSignInFailed */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "API_MESSAGE_GENERIC_INVALID_LOGIN", function() { return API_MESSAGE_GENERIC_INVALID_LOGIN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "API_MESSAGE_GENERIC_REGISTRATION_FAIL", function() { return API_MESSAGE_GENERIC_REGISTRATION_FAIL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "API_MESSAGE_GENERIC_CHANGE_PW_FAIL", function() { return API_MESSAGE_GENERIC_CHANGE_PW_FAIL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "API_MESSAGE_GENERIC_SYNC_FAIL", function() { return API_MESSAGE_GENERIC_SYNC_FAIL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "API_MESSAGE_REGISTRATION_IN_PROGRESS", function() { return API_MESSAGE_REGISTRATION_IN_PROGRESS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "API_MESSAGE_LOGIN_IN_PROGRESS", function() { return API_MESSAGE_LOGIN_IN_PROGRESS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "API_MESSAGE_CHANGE_PW_IN_PROGRESS", function() { return API_MESSAGE_CHANGE_PW_IN_PROGRESS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "API_MESSAGE_FAILBACK_LOGIN_FAIL", function() { return API_MESSAGE_FAILBACK_LOGIN_FAIL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UNSUPPORTED_PROTOCOL_VERSION", function() { return UNSUPPORTED_PROTOCOL_VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EXPIRED_PROTOCOL_VERSION", function() { return EXPIRED_PROTOCOL_VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OUTDATED_PROTOCOL_VERSION", function() { return OUTDATED_PROTOCOL_VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UNSUPPORTED_PASSWORD_COST", function() { return UNSUPPORTED_PASSWORD_COST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "INVALID_PASSWORD_COST", function() { return INVALID_PASSWORD_COST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OUTDATED_PROTOCOL_ALERT_TITLE", function() { return OUTDATED_PROTOCOL_ALERT_TITLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OUTDATED_PROTOCOL_ALERT_IGNORE", function() { return OUTDATED_PROTOCOL_ALERT_IGNORE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InsufficientPasswordMessage", function() { return InsufficientPasswordMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StrictSignInFailed", function() { return StrictSignInFailed; });
var API_MESSAGE_GENERIC_INVALID_LOGIN = "A server error occurred while trying to sign in. Please try again.";
var API_MESSAGE_GENERIC_REGISTRATION_FAIL = "A server error occurred while trying to register. Please try again.";
var API_MESSAGE_GENERIC_CHANGE_PW_FAIL = "Something went wrong while changing your password.\n                                                      Your password was not changed. Please try again.";
var API_MESSAGE_GENERIC_SYNC_FAIL = "Could not connect to server.";
var API_MESSAGE_REGISTRATION_IN_PROGRESS = "An existing registration request is already in progress.";
var API_MESSAGE_LOGIN_IN_PROGRESS = "An existing sign in request is already in progress.";
var API_MESSAGE_CHANGE_PW_IN_PROGRESS = "An existing change password request is already in progress.";
var API_MESSAGE_FAILBACK_LOGIN_FAIL = "Invalid email or password.";
var UNSUPPORTED_PROTOCOL_VERSION = "This version of the application does not support your\n                                                      newer account type. Please upgrade to the latest version\n                                                      of Standard Notes to sign in.";
var EXPIRED_PROTOCOL_VERSION = "The protocol version associated with your account is\n                                                      outdated and no longer supported by this application.\n                                                      Please visit standardnotes.org/help/security for more\n                                                      information.";
var OUTDATED_PROTOCOL_VERSION = "The encryption version for your account is outdated and\n                                                      requires upgrade. You may proceed with login, but are\n                                                      advised to perform a security update using the web or\n                                                      desktop application. Please visit\n                                                      standardnotes.org/help/security for more information.";
var UNSUPPORTED_PASSWORD_COST = "Your account was created on a platform with higher security\n                                                      capabilities than this browser supports. If we attempted\n                                                      to generate your login keys here, it would take hours. Please\n                                                      use a browser with more up to date security capabilities,\n                                                      like Google Chrome or Firefox, to log in.";
var INVALID_PASSWORD_COST = "Unable to login due to insecure password parameters.\n                                                      Please visit standardnotes.org/help/security for\n                                                      more information.";
var OUTDATED_PROTOCOL_ALERT_TITLE = "Update Recommended";
var OUTDATED_PROTOCOL_ALERT_IGNORE = "Sign In";
function InsufficientPasswordMessage(minimum) {
  return "\n          Your password must be at least ".concat(minimum, " characters in length.\n          For your security, please choose a longer password or,\n          ideally, a passphrase, and try again.\n         ");
}
function StrictSignInFailed(current, latest) {
  return "\n          Strict sign in refused server sign in parameters.\n          The latest security version is ".concat(latest, ", but your account is\n          reported to have version ").concat(current, ". If you'd like to proceed\n          with sign in anyway, please disable strict sign in and try again.\n          ");
}

/***/ }),

/***/ "./lib/services/api/session_manager.js":
/*!*********************************************!*\
  !*** ./lib/services/api/session_manager.js ***!
  \*********************************************/
/*! exports provided: SNSessionManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNSessionManager", function() { return SNSessionManager; });
/* harmony import */ var _Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/services/pure_service */ "./lib/services/pure_service.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Services_alert_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Services/alert_service */ "./lib/services/alert_service.js");
/* harmony import */ var _Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Lib/storage_keys */ "./lib/storage_keys.js");
/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./messages */ "./lib/services/api/messages.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }






var MINIMUM_PASSWORD_LENGTH = 8;
var SNSessionManager =
/*#__PURE__*/
function (_PureService) {
  _inherits(SNSessionManager, _PureService);

  function SNSessionManager(_ref) {
    var _this;

    var storageService = _ref.storageService,
        apiService = _ref.apiService,
        alertService = _ref.alertService,
        protocolService = _ref.protocolService,
        timeout = _ref.timeout;

    _classCallCheck(this, SNSessionManager);

    if (!storageService || !protocolService) {
      throw 'Invalid SessionManager construction';
    }

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNSessionManager).call(this));
    _this.protocolService = protocolService;
    _this.storageService = storageService;
    _this.apiService = apiService;
    _this.alertService = alertService || new _Services_alert_service__WEBPACK_IMPORTED_MODULE_2__["SNAlertService"]();
    _this.timeout = timeout || setTimeout.bind(window);
    return _this;
  }

  _createClass(SNSessionManager, [{
    key: "initializeFromDisk",
    value: function initializeFromDisk() {
      var uuid, token;
      return regeneratorRuntime.async(function initializeFromDisk$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return regeneratorRuntime.awrap(this.storageService.getValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__["StorageKeys"].User));

            case 2:
              this.user = _context.sent;

              if (this.user) {
                _context.next = 8;
                break;
              }

              _context.next = 6;
              return regeneratorRuntime.awrap(this.storageService.getValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__["StorageKeys"].LegacyUuid));

            case 6:
              uuid = _context.sent;

              if (uuid) {
                this.user = {
                  uuid: uuid
                };
              }

            case 8:
              _context.next = 10;
              return regeneratorRuntime.awrap(this.storageService.getValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__["StorageKeys"].Jwt));

            case 10:
              token = _context.sent;

              if (token) {
                this.apiService.setSessionAuthentication({
                  token: token
                });
              }

            case 12:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "online",
    value: function online() {
      return !this.offline();
    }
  }, {
    key: "offline",
    value: function offline() {
      return Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_1__["isNullOrUndefined"])(this.user);
    }
  }, {
    key: "getUser",
    value: function getUser() {
      return this.user;
    }
  }, {
    key: "returnAfterTimeout",
    value: function returnAfterTimeout(value) {
      var _this2 = this;

      return regeneratorRuntime.async(function returnAfterTimeout$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              return _context2.abrupt("return", new Promise(function (resolve, reject) {
                _this2.timeout(function () {
                  resolve(value);
                });
              }));

            case 1:
            case "end":
              return _context2.stop();
          }
        }
      });
    }
  }, {
    key: "signOut",
    value: function signOut() {
      return regeneratorRuntime.async(function signOut$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              this.user = null;

            case 1:
            case "end":
              return _context3.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "register",
    value: function register(_ref2) {
      var _this3 = this;

      var email, password, result, serverPassword, keyParams, rootKey;
      return regeneratorRuntime.async(function register$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              email = _ref2.email, password = _ref2.password;

              if (!(password.length < MINIMUM_PASSWORD_LENGTH)) {
                _context5.next = 3;
                break;
              }

              return _context5.abrupt("return", this.apiService.error(_messages__WEBPACK_IMPORTED_MODULE_4__["InsufficientPasswordMessage"](MINIMUM_PASSWORD_LENGTH)));

            case 3:
              _context5.next = 5;
              return regeneratorRuntime.awrap(this.protocolService.createRootKey({
                identifier: email,
                password: password
              }));

            case 5:
              result = _context5.sent;
              serverPassword = result.key.serverPassword;
              keyParams = result.keyParams;
              rootKey = result.key;
              return _context5.abrupt("return", this.apiService.register({
                email: email,
                serverPassword: serverPassword,
                keyParams: keyParams
              }).then(function _callee(response) {
                return regeneratorRuntime.async(function _callee$(_context4) {
                  while (1) {
                    switch (_context4.prev = _context4.next) {
                      case 0:
                        _context4.next = 2;
                        return regeneratorRuntime.awrap(_this3.handleAuthResponse(response));

                      case 2:
                        return _context4.abrupt("return", _this3.returnAfterTimeout({
                          response: response,
                          keyParams: keyParams,
                          rootKey: rootKey
                        }));

                      case 3:
                      case "end":
                        return _context4.stop();
                    }
                  }
                });
              }));

            case 10:
            case "end":
              return _context5.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "signIn",
    value: function signIn(_ref3) {
      var _this4 = this;

      var email, password, strict, mfaKeyPath, mfaCode, paramsResponse, keyParams, message, confirmed, minimum, latest, _ref4, rootKey, serverPassword;

      return regeneratorRuntime.async(function signIn$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              email = _ref3.email, password = _ref3.password, strict = _ref3.strict, mfaKeyPath = _ref3.mfaKeyPath, mfaCode = _ref3.mfaCode;
              _context7.next = 3;
              return regeneratorRuntime.awrap(this.apiService.getAccountKeyParams({
                email: email,
                mfaKeyPath: mfaKeyPath,
                mfaCode: mfaCode
              }).then(function (response) {
                var keyParams = _this4.protocolService.createKeyParams(response);

                return {
                  keyParams: keyParams
                };
              }));

            case 3:
              paramsResponse = _context7.sent;

              if (!paramsResponse.error) {
                _context7.next = 6;
                break;
              }

              return _context7.abrupt("return", paramsResponse);

            case 6:
              keyParams = paramsResponse.keyParams;

              if (!(!keyParams || !keyParams.kdfIterations)) {
                _context7.next = 9;
                break;
              }

              return _context7.abrupt("return", this.apiService.error(_messages__WEBPACK_IMPORTED_MODULE_4__["API_MESSAGE_FAILBACK_LOGIN_FAIL"]));

            case 9:
              if (this.protocolService.supportedVersions().includes(keyParams.version)) {
                _context7.next = 15;
                break;
              }

              if (!this.protocolService.isVersionNewerThanLibraryVersion(keyParams.version)) {
                _context7.next = 14;
                break;
              }

              return _context7.abrupt("return", this.apiService.error(_messages__WEBPACK_IMPORTED_MODULE_4__["UNSUPPORTED_PROTOCOL_VERSION"]));

            case 14:
              return _context7.abrupt("return", this.apiService.error(_messages__WEBPACK_IMPORTED_MODULE_4__["EXPIRED_PROTOCOL_VERSION"]));

            case 15:
              if (!this.protocolService.isProtocolVersionOutdated(keyParams.version)) {
                _context7.next = 22;
                break;
              }

              message = _messages__WEBPACK_IMPORTED_MODULE_4__["OUTDATED_PROTOCOL_VERSION"];
              _context7.next = 19;
              return regeneratorRuntime.awrap(this.alertService.confirm({
                title: _messages__WEBPACK_IMPORTED_MODULE_4__["OUTDATED_PROTOCOL_ALERT_TITLE"],
                text: message,
                confirmButtonText: _messages__WEBPACK_IMPORTED_MODULE_4__["OUTDATED_PROTOCOL_ALERT_IGNORE"] // eslint-disable-next-line handle-callback-err

              }).catch(function (error) {}));

            case 19:
              confirmed = _context7.sent;

              if (confirmed) {
                _context7.next = 22;
                break;
              }

              return _context7.abrupt("return", this.apiService.error());

            case 22:
              if (this.protocolService.supportsPasswordDerivationCost(keyParams.kdfIterations)) {
                _context7.next = 24;
                break;
              }

              return _context7.abrupt("return", this.apiService.error(_messages__WEBPACK_IMPORTED_MODULE_4__["UNSUPPORTED_PASSWORD_COST"]));

            case 24:
              minimum = this.protocolService.costMinimumForVersion(keyParams.version);

              if (!(keyParams.kdfIterations < minimum)) {
                _context7.next = 27;
                break;
              }

              return _context7.abrupt("return", this.apiService.error(_messages__WEBPACK_IMPORTED_MODULE_4__["INVALID_PASSWORD_COST"]));

            case 27:
              if (!strict) {
                _context7.next = 31;
                break;
              }

              latest = this.protocolService.getLatestVersion();

              if (!(keyParams.version !== latest)) {
                _context7.next = 31;
                break;
              }

              return _context7.abrupt("return", this.apiService.error(_messages__WEBPACK_IMPORTED_MODULE_4__["StrictSignInFailed"](keyParams.version, latest)));

            case 31:
              _context7.next = 33;
              return regeneratorRuntime.awrap(this.protocolService.computeRootKey({
                password: password,
                keyParams: keyParams
              }).then(function (rootKey) {
                return {
                  rootKey: rootKey,
                  serverPassword: rootKey.serverPassword
                };
              }));

            case 33:
              _ref4 = _context7.sent;
              rootKey = _ref4.rootKey;
              serverPassword = _ref4.serverPassword;
              return _context7.abrupt("return", this.apiService.signIn({
                email: email,
                serverPassword: serverPassword,
                mfaKeyPath: mfaKeyPath,
                mfaCode: mfaCode
              }).then(function _callee2(response) {
                return regeneratorRuntime.async(function _callee2$(_context6) {
                  while (1) {
                    switch (_context6.prev = _context6.next) {
                      case 0:
                        _context6.next = 2;
                        return regeneratorRuntime.awrap(_this4.handleAuthResponse(response));

                      case 2:
                        return _context6.abrupt("return", _this4.returnAfterTimeout({
                          response: response,
                          keyParams: keyParams,
                          rootKey: rootKey
                        }));

                      case 3:
                      case "end":
                        return _context6.stop();
                    }
                  }
                });
              }));

            case 37:
            case "end":
              return _context7.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "changePassword",
    value: function changePassword(_ref5) {
      var _this5 = this;

      var email, currentPassword, currentKeyParams, newPassword, currentServerPassword, _ref6, newServerPassword, newRootKey, newKeyParams;

      return regeneratorRuntime.async(function changePassword$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              email = _ref5.email, currentPassword = _ref5.currentPassword, currentKeyParams = _ref5.currentKeyParams, newPassword = _ref5.newPassword;
              _context9.next = 3;
              return regeneratorRuntime.awrap(this.protocolService.computeRootKey({
                password: currentPassword,
                keyParams: currentKeyParams
              }).then(function (key) {
                return key.serverPassword;
              }));

            case 3:
              currentServerPassword = _context9.sent;
              _context9.next = 6;
              return regeneratorRuntime.awrap(this.protocolService.createRootKey({
                identifier: email,
                password: newPassword
              }).then(function (result) {
                return {
                  newRootKey: result.key,
                  newServerPassword: result.key.serverPassword,
                  newKeyParams: result.keyParams
                };
              }));

            case 6:
              _ref6 = _context9.sent;
              newServerPassword = _ref6.newServerPassword;
              newRootKey = _ref6.newRootKey;
              newKeyParams = _ref6.newKeyParams;
              return _context9.abrupt("return", this.apiService.changePassword({
                email: email,
                currentServerPassword: currentServerPassword,
                newServerPassword: newServerPassword,
                newKeyParams: newKeyParams
              }).then(function _callee3(response) {
                return regeneratorRuntime.async(function _callee3$(_context8) {
                  while (1) {
                    switch (_context8.prev = _context8.next) {
                      case 0:
                        _context8.next = 2;
                        return regeneratorRuntime.awrap(_this5.handleAuthResponse(response));

                      case 2:
                        return _context8.abrupt("return", _this5.returnAfterTimeout({
                          response: response,
                          keyParams: newKeyParams,
                          rootKey: newRootKey
                        }));

                      case 3:
                      case "end":
                        return _context8.stop();
                    }
                  }
                });
              }));

            case 11:
            case "end":
              return _context9.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "handleAuthResponse",
    value: function handleAuthResponse(response) {
      var user;
      return regeneratorRuntime.async(function handleAuthResponse$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              user = response.user;
              this.user = user;
              _context10.next = 4;
              return regeneratorRuntime.awrap(this.storageService.setValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__["StorageKeys"].User, user));

            case 4:
              _context10.next = 6;
              return regeneratorRuntime.awrap(this.setSessionAuthentication({
                token: response.token
              }));

            case 6:
            case "end":
              return _context10.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "setSessionAuthentication",
    value: function setSessionAuthentication(_ref7) {
      var token;
      return regeneratorRuntime.async(function setSessionAuthentication$(_context11) {
        while (1) {
          switch (_context11.prev = _context11.next) {
            case 0:
              token = _ref7.token;
              _context11.next = 3;
              return regeneratorRuntime.awrap(this.storageService.setValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__["StorageKeys"].Jwt, token));

            case 3:
              this.apiService.setSessionAuthentication({
                token: token
              });

            case 4:
            case "end":
              return _context11.stop();
          }
        }
      }, null, this);
    }
  }]);

  return SNSessionManager;
}(_Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__["PureService"]);

/***/ }),

/***/ "./lib/services/component_manager.js":
/*!*******************************************!*\
  !*** ./lib/services/component_manager.js ***!
  \*******************************************/
/*! exports provided: SNComponentManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNComponentManager", function() { return SNComponentManager; });
/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/find */ "./node_modules/lodash/find.js");
/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_find__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_pull__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/pull */ "./node_modules/lodash/pull.js");
/* harmony import */ var lodash_pull__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_pull__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_uniq__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/uniq */ "./node_modules/lodash/uniq.js");
/* harmony import */ var lodash_uniq__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_uniq__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash_remove__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/remove */ "./node_modules/lodash/remove.js");
/* harmony import */ var lodash_remove__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_remove__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Lib/services/pure_service */ "./lib/services/pure_service.js");
/* harmony import */ var _Payloads__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Payloads */ "./lib/protocol/payloads/index.js");
/* harmony import */ var _Models__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @Models */ "./lib/models/index.js");
/* harmony import */ var _Lib_uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @Lib/uuid */ "./lib/uuid.js");
/* harmony import */ var _platforms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../platforms */ "./lib/platforms.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }










var DESKTOP_URL_PREFIX = 'sn://';
var SNComponentManager =
/*#__PURE__*/
function (_PureService) {
  _inherits(SNComponentManager, _PureService);

  function SNComponentManager(_ref) {
    var _this;

    var modelManager = _ref.modelManager,
        syncService = _ref.syncService,
        alertService = _ref.alertService,
        timeout = _ref.timeout,
        environment = _ref.environment,
        platform = _ref.platform;

    _classCallCheck(this, SNComponentManager);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNComponentManager).call(this));
    /* This domain will be used to save context item client data */

    _defineProperty(_assertThisInitialized(_this), "detectFocusChange", function () {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        var _loop = function _loop() {
          var component = _step.value;

          if (document.activeElement === _this.iframeForComponent(component)) {
            _this.timeout(function () {
              _this.focusChangedForComponent(component);
            });

            return "break";
          }
        };

        for (var _iterator = _this.activeComponents[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var _ret = _loop();

          if (_ret === "break") break;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    });

    _defineProperty(_assertThisInitialized(_this), "onWindowMessage", function (event) {
      _this.log('Web app: received message', event);
      /* Make sure this message is for us */


      if (event.data.sessionKey) {
        _this.handleMessage(_this.componentForSessionKey(event.data.sessionKey), event.data);
      }
    });

    SNComponentManager.ClientDataDomain = "org.standardnotes.sn.components";
    _this.timeout = timeout || setTimeout.bind(window);
    _this.modelManager = modelManager;
    _this.syncService = syncService;
    _this.alertService = alertService;
    _this.environment = environment;
    _this.platform = platform;
    _this.isDesktop = _this.environment === _platforms__WEBPACK_IMPORTED_MODULE_8__["Environments"].Desktop;
    _this.isMobile = _this.environment === _platforms__WEBPACK_IMPORTED_MODULE_8__["Environments"].Mobile;
    _this.streamObservers = [];
    _this.contextStreamObservers = [];
    _this.activeComponents = [];
    _this.permissionDialogs = [];
    _this.handlers = [];

    _this.configureForGeneralUsage();

    if (environment !== _platforms__WEBPACK_IMPORTED_MODULE_8__["Environments"].Mobile) {
      _this.configureForNonMobileUsage();
    }

    return _this;
  }

  _createClass(SNComponentManager, [{
    key: "setDesktopManager",
    value: function setDesktopManager(desktopManager) {
      this.desktopManager = desktopManager;
      this.configureForDesktop();
    }
  }, {
    key: "configureForGeneralUsage",
    value: function configureForGeneralUsage() {
      var _this2 = this;

      this.modelManager.addMappingObserver("*", function _callee(allItems, validItems, deletedItems, source, sourceKey) {
        var syncedComponents, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, component, activeComponent, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _loop2, _iterator3, _step3, _ret2, requiredContextPermissions, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _loop3, _iterator4, _step4, _ret3;

        return regeneratorRuntime.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                syncedComponents = allItems.filter(function (item) {
                  return item.content_type === _Models__WEBPACK_IMPORTED_MODULE_6__["ContentTypes"].Component || item.content_type === _Models__WEBPACK_IMPORTED_MODULE_6__["ContentTypes"].Theme;
                });
                /* We only want to sync if the item source is Retrieved, not PayloadSourceRemoteSaved to avoid
                  recursion caused by the component being modified and saved after it is updated.
                */

                if (syncedComponents.length > 0 && source !== _Payloads__WEBPACK_IMPORTED_MODULE_5__["PayloadSources"].RemoteSaved) {
                  // Ensure any component in our data is installed by the system
                  if (_this2.isDesktop) {
                    _this2.desktopManager.syncComponentsInstallation(syncedComponents);
                  }
                }

                _iteratorNormalCompletion2 = true;
                _didIteratorError2 = false;
                _iteratorError2 = undefined;
                _context.prev = 5;
                _iterator2 = syncedComponents[Symbol.iterator]();

              case 7:
                if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
                  _context.next = 21;
                  break;
                }

                component = _step2.value;
                activeComponent = lodash_find__WEBPACK_IMPORTED_MODULE_0___default()(_this2.activeComponents, {
                  uuid: component.uuid
                });

                if (!(component.active && !component.deleted && !activeComponent)) {
                  _context.next = 15;
                  break;
                }

                _context.next = 13;
                return regeneratorRuntime.awrap(_this2.activateComponent(component));

              case 13:
                _context.next = 18;
                break;

              case 15:
                if (!(!component.active && activeComponent)) {
                  _context.next = 18;
                  break;
                }

                _context.next = 18;
                return regeneratorRuntime.awrap(_this2.deactivateComponent(component));

              case 18:
                _iteratorNormalCompletion2 = true;
                _context.next = 7;
                break;

              case 21:
                _context.next = 27;
                break;

              case 23:
                _context.prev = 23;
                _context.t0 = _context["catch"](5);
                _didIteratorError2 = true;
                _iteratorError2 = _context.t0;

              case 27:
                _context.prev = 27;
                _context.prev = 28;

                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                  _iterator2.return();
                }

              case 30:
                _context.prev = 30;

                if (!_didIteratorError2) {
                  _context.next = 33;
                  break;
                }

                throw _iteratorError2;

              case 33:
                return _context.finish(30);

              case 34:
                return _context.finish(27);

              case 35:
                _iteratorNormalCompletion3 = true;
                _didIteratorError3 = false;
                _iteratorError3 = undefined;
                _context.prev = 38;

                _loop2 = function _loop2() {
                  var observer = _step3.value;

                  if (sourceKey && sourceKey === observer.component.uuid) {
                    // Don't notify source of change, as it is the originator, doesn't need duplicate event.
                    return "continue";
                  }

                  var relevantItems = allItems.filter(function (item) {
                    return observer.contentTypes.indexOf(item.content_type) !== -1;
                  });

                  if (relevantItems.length === 0) {
                    return "continue";
                  }

                  var requiredPermissions = [{
                    name: "stream-items",
                    content_types: observer.contentTypes.sort()
                  }];

                  _this2.runWithPermissions(observer.component, requiredPermissions, function () {
                    _this2.sendItemsInReply(observer.component, relevantItems, observer.originalMessage);
                  });
                };

                _iterator3 = _this2.streamObservers[Symbol.iterator]();

              case 41:
                if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {
                  _context.next = 48;
                  break;
                }

                _ret2 = _loop2();

                if (!(_ret2 === "continue")) {
                  _context.next = 45;
                  break;
                }

                return _context.abrupt("continue", 45);

              case 45:
                _iteratorNormalCompletion3 = true;
                _context.next = 41;
                break;

              case 48:
                _context.next = 54;
                break;

              case 50:
                _context.prev = 50;
                _context.t1 = _context["catch"](38);
                _didIteratorError3 = true;
                _iteratorError3 = _context.t1;

              case 54:
                _context.prev = 54;
                _context.prev = 55;

                if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
                  _iterator3.return();
                }

              case 57:
                _context.prev = 57;

                if (!_didIteratorError3) {
                  _context.next = 60;
                  break;
                }

                throw _iteratorError3;

              case 60:
                return _context.finish(57);

              case 61:
                return _context.finish(54);

              case 62:
                requiredContextPermissions = [{
                  name: "stream-context-item"
                }];
                _iteratorNormalCompletion4 = true;
                _didIteratorError4 = false;
                _iteratorError4 = undefined;
                _context.prev = 66;

                _loop3 = function _loop3() {
                  var observer = _step4.value;

                  if (sourceKey && sourceKey === observer.component.uuid) {
                    // Don't notify source of change, as it is the originator, doesn't need duplicate event.
                    return "continue";
                  }

                  var _iteratorNormalCompletion5 = true;
                  var _didIteratorError5 = false;
                  var _iteratorError5 = undefined;

                  try {
                    for (var _iterator5 = _this2.handlers[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
                      var handler = _step5.value;

                      if (!handler.areas.includes(observer.component.area) && !handler.areas.includes("*")) {
                        continue;
                      }

                      if (handler.contextRequestHandler) {
                        var itemInContext = handler.contextRequestHandler(observer.component);

                        if (itemInContext) {
                          (function () {
                            var matchingItem = lodash_find__WEBPACK_IMPORTED_MODULE_0___default()(allItems, {
                              uuid: itemInContext.uuid
                            });

                            if (matchingItem) {
                              _this2.runWithPermissions(observer.component, requiredContextPermissions, function () {
                                _this2.sendContextItemInReply(observer.component, matchingItem, observer.originalMessage, source);
                              });
                            }
                          })();
                        }
                      }
                    }
                  } catch (err) {
                    _didIteratorError5 = true;
                    _iteratorError5 = err;
                  } finally {
                    try {
                      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {
                        _iterator5.return();
                      }
                    } finally {
                      if (_didIteratorError5) {
                        throw _iteratorError5;
                      }
                    }
                  }
                };

                _iterator4 = _this2.contextStreamObservers[Symbol.iterator]();

              case 69:
                if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {
                  _context.next = 76;
                  break;
                }

                _ret3 = _loop3();

                if (!(_ret3 === "continue")) {
                  _context.next = 73;
                  break;
                }

                return _context.abrupt("continue", 73);

              case 73:
                _iteratorNormalCompletion4 = true;
                _context.next = 69;
                break;

              case 76:
                _context.next = 82;
                break;

              case 78:
                _context.prev = 78;
                _context.t2 = _context["catch"](66);
                _didIteratorError4 = true;
                _iteratorError4 = _context.t2;

              case 82:
                _context.prev = 82;
                _context.prev = 83;

                if (!_iteratorNormalCompletion4 && _iterator4.return != null) {
                  _iterator4.return();
                }

              case 85:
                _context.prev = 85;

                if (!_didIteratorError4) {
                  _context.next = 88;
                  break;
                }

                throw _iteratorError4;

              case 88:
                return _context.finish(85);

              case 89:
                return _context.finish(82);

              case 90:
              case "end":
                return _context.stop();
            }
          }
        }, null, null, [[5, 23, 27, 35], [28,, 30, 34], [38, 50, 54, 62], [55,, 57, 61], [66, 78, 82, 90], [83,, 85, 89]]);
      });
    }
  }, {
    key: "isNativeExtension",
    value: function isNativeExtension(component) {
      var nativeUrls = [window._extensions_manager_location, window._batch_manager_location];
      var hostedUrl = component.content.hosted_url;
      var localUrl = component.content.local_url && component.content.local_url.replace(DESKTOP_URL_PREFIX, '');
      return nativeUrls.includes(hostedUrl) || nativeUrls.includes(localUrl);
    }
    /** @override */

  }, {
    key: "deinit",
    value: function deinit() {
      return regeneratorRuntime.async(function deinit$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _get(_getPrototypeOf(SNComponentManager.prototype), "deinit", this).call(this);

              if (window) {
                window.removeEventListener('focus', this.detectFocusChange, true);
                window.removeEventListener('blur', this.detectFocusChange, true);
                window.removeEventListener('message', this.onWindowMessage);
              }

            case 2:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "configureForNonMobileUsage",
    value: function configureForNonMobileUsage() {
      window.addEventListener ? window.addEventListener('focus', this.detectFocusChange, true) : window.attachEvent('onfocusout', this.detectFocusChange);
      window.addEventListener ? window.addEventListener('blur', this.detectFocusChange, true) : window.attachEvent('onblur', this.detectFocusChange);
      /* On mobile, events listeners are handled by a respective component */

      window.addEventListener('message', this.onWindowMessage);
    }
  }, {
    key: "configureForDesktop",
    value: function configureForDesktop() {
      var _this3 = this;

      this.desktopManager.registerUpdateObserver(function (component) {
        // Reload theme if active
        if (component.active && component.isTheme()) {
          _this3.postActiveThemesToAllComponents();
        }
      });
    }
  }, {
    key: "postActiveThemesToAllComponents",
    value: function postActiveThemesToAllComponents() {
      var _iteratorNormalCompletion6 = true;
      var _didIteratorError6 = false;
      var _iteratorError6 = undefined;

      try {
        for (var _iterator6 = this.components[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
          var component = _step6.value;

          // Skip over components that are themes themselves,
          // or components that are not active, or components that don't have a window
          if (component.isTheme() || !component.active || !component.window) {
            continue;
          }

          this.postActiveThemesToComponent(component);
        }
      } catch (err) {
        _didIteratorError6 = true;
        _iteratorError6 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {
            _iterator6.return();
          }
        } finally {
          if (_didIteratorError6) {
            throw _iteratorError6;
          }
        }
      }
    }
  }, {
    key: "getActiveThemes",
    value: function getActiveThemes() {
      return this.componentsForArea("themes").filter(function (theme) {
        return theme.active;
      });
    }
  }, {
    key: "urlsForActiveThemes",
    value: function urlsForActiveThemes() {
      var _this4 = this;

      var themes = this.getActiveThemes();
      return themes.map(function (theme) {
        return _this4.urlForComponent(theme);
      });
    }
  }, {
    key: "postActiveThemesToComponent",
    value: function postActiveThemesToComponent(component) {
      var urls = this.urlsForActiveThemes();
      var data = {
        themes: urls
      };
      this.sendMessageToComponent(component, {
        action: "themes",
        data: data
      });
    }
  }, {
    key: "contextItemDidChangeInArea",
    value: function contextItemDidChangeInArea(area) {
      var _iteratorNormalCompletion7 = true;
      var _didIteratorError7 = false;
      var _iteratorError7 = undefined;

      try {
        for (var _iterator7 = this.handlers[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {
          var handler = _step7.value;

          if (handler.areas.includes(area) === false && !handler.areas.includes("*")) {
            continue;
          }

          var observers = this.contextStreamObservers.filter(function (observer) {
            return observer.component.area === area;
          });
          var _iteratorNormalCompletion8 = true;
          var _didIteratorError8 = false;
          var _iteratorError8 = undefined;

          try {
            for (var _iterator8 = observers[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {
              var observer = _step8.value;

              if (handler.contextRequestHandler) {
                var itemInContext = handler.contextRequestHandler(observer.component);

                if (itemInContext) {
                  this.sendContextItemInReply(observer.component, itemInContext, observer.originalMessage);
                }
              }
            }
          } catch (err) {
            _didIteratorError8 = true;
            _iteratorError8 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion8 && _iterator8.return != null) {
                _iterator8.return();
              }
            } finally {
              if (_didIteratorError8) {
                throw _iteratorError8;
              }
            }
          }
        }
      } catch (err) {
        _didIteratorError7 = true;
        _iteratorError7 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {
            _iterator7.return();
          }
        } finally {
          if (_didIteratorError7) {
            throw _iteratorError7;
          }
        }
      }
    }
  }, {
    key: "setComponentHidden",
    value: function setComponentHidden(component, hidden) {
      /*
        A hidden component will not receive messages.
        However, when a component is unhidden, we need to send it any items it may have
        registered streaming for.
      */
      if (hidden) {
        component.hidden = true;
      } else if (component.hidden) {
        // Only enter this condition if component is hidden to make this note have double side effects.
        component.hidden = false; // streamContextItem

        var contextObserver = lodash_find__WEBPACK_IMPORTED_MODULE_0___default()(this.contextStreamObservers, {
          identifier: component.uuid
        });

        if (contextObserver) {
          this.handleStreamContextItemMessage(component, contextObserver.originalMessage);
        } // streamItems


        var streamObserver = lodash_find__WEBPACK_IMPORTED_MODULE_0___default()(this.streamObservers, {
          identifier: component.uuid
        });

        if (streamObserver) {
          this.handleStreamItemsMessage(component, streamObserver.originalMessage);
        }
      }
    }
  }, {
    key: "jsonForItem",
    value: function jsonForItem(item, component, source) {
      var params = {
        uuid: item.uuid,
        content_type: item.content_type,
        created_at: item.created_at,
        updated_at: item.updated_at,
        deleted: item.deleted
      };
      params.content = item.collapseContent();
      params.clientData = item.getDomainDataItem(component.getClientDataKey(), SNComponentManager.ClientDataDomain) || {}; // isMetadataUpdate implies that the extension should make reference of updated metadata,
      // but not update content values as they may be stale relative to what the extension currently has
      // Changes are always metadata updates if the mapping source is PayloadSources.RemoteSaved || source === PayloadSources.LocalSaved.
      //

      if (source && (source === _Payloads__WEBPACK_IMPORTED_MODULE_5__["PayloadSources"].RemoteSaved || source === _Payloads__WEBPACK_IMPORTED_MODULE_5__["PayloadSources"].LocalSaved)) {
        params.isMetadataUpdate = true;
      }

      this.removePrivatePropertiesFromResponseItems([params], component, {
        type: "outgoing"
      });
      return params;
    }
  }, {
    key: "sendItemsInReply",
    value: function sendItemsInReply(component, items, message, source) {
      var _this5 = this;

      this.log("Web|componentManager|sendItemsInReply", component, items, message);
      var response = {
        items: {}
      };
      var mapped = items.map(function (item) {
        return _this5.jsonForItem(item, component, source);
      });
      response.items = mapped;
      this.replyToMessage(component, message, response);
    }
  }, {
    key: "sendContextItemInReply",
    value: function sendContextItemInReply(component, item, originalMessage, source) {
      this.log("Web|componentManager|sendContextItemInReply", component, item, originalMessage);
      var response = {
        item: this.jsonForItem(item, component, source)
      };
      this.replyToMessage(component, originalMessage, response);
    }
  }, {
    key: "replyToMessage",
    value: function replyToMessage(component, originalMessage, replyData) {
      var reply = {
        action: "reply",
        original: originalMessage,
        data: replyData
      };
      this.sendMessageToComponent(component, reply);
    }
  }, {
    key: "sendMessageToComponent",
    value: function sendMessageToComponent(component, message) {
      var permissibleActionsWhileHidden = ["component-registered", "themes"];

      if (component.hidden && !permissibleActionsWhileHidden.includes(message.action)) {
        this.log("Component disabled for current item, not sending any messages.", component.name);
        return;
      }

      this.log("Web|sendMessageToComponent", component, message);
      var origin = this.urlForComponent(component);

      if (!origin.startsWith("http") && !origin.startsWith("file")) {
        // Native extension running in web, prefix current host
        origin = window.location.href + origin;
      }

      if (!component.window) {
        this.alertService.alert({
          text: "Standard Notes is trying to communicate with ".concat(component.name, ", but an error is occurring. Please restart this extension and try again.")
        });
      } // Mobile messaging requires json


      if (this.isMobile) {
        message = JSON.stringify(message);
      }

      component.window.postMessage(message, origin);
    }
  }, {
    key: "componentsForArea",
    value: function componentsForArea(area) {
      return this.components.filter(function (component) {
        return component.area === area;
      });
    }
  }, {
    key: "urlForComponent",
    value: function urlForComponent(component) {
      // offlineOnly is available only on desktop, and not on web or mobile.
      if (component.offlineOnly && !this.isDesktop) {
        return null;
      }

      if (component.offlineOnly || this.isDesktop && component.local_url) {
        return component.local_url && component.local_url.replace(DESKTOP_URL_PREFIX, this.desktopManager.getExtServerHost());
      } else {
        var url = component.hosted_url || component.legacy_url;

        if (this.isMobile) {
          var localReplacement = this.platform === "ios" ? "localhost" : "10.0.2.2";
          url = url.replace("localhost", localReplacement).replace("sn.local", localReplacement);
        }

        return url;
      }
    }
  }, {
    key: "componentForUrl",
    value: function componentForUrl(url) {
      return this.components.filter(function (component) {
        return component.hosted_url === url || component.legacy_url === url;
      })[0];
    }
  }, {
    key: "componentForSessionKey",
    value: function componentForSessionKey(key) {
      var component = lodash_find__WEBPACK_IMPORTED_MODULE_0___default()(this.components, {
        sessionKey: key
      });

      if (!component) {
        var _iteratorNormalCompletion9 = true;
        var _didIteratorError9 = false;
        var _iteratorError9 = undefined;

        try {
          for (var _iterator9 = this.handlers[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {
            var handler = _step9.value;

            if (handler.componentForSessionKeyHandler) {
              component = handler.componentForSessionKeyHandler(key);

              if (component) {
                break;
              }
            }
          }
        } catch (err) {
          _didIteratorError9 = true;
          _iteratorError9 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion9 && _iterator9.return != null) {
              _iterator9.return();
            }
          } finally {
            if (_didIteratorError9) {
              throw _iteratorError9;
            }
          }
        }
      }

      return component;
    }
  }, {
    key: "handleMessage",
    value: function handleMessage(component, message) {
      var _this6 = this;

      if (!component) {
        this.log("Component not defined for message, returning", message);
        this.alertService.alert({
          text: "An extension is trying to communicate with Standard Notes, but there is an error establishing a bridge. Please restart the app and try again."
        });
        return;
      } // Actions that won't succeeed with readonly mode


      var readwriteActions = ["save-items", "associate-item", "deassociate-item", "create-item", "create-items", "delete-items", "set-component-data"];

      if (component.readonly && readwriteActions.includes(message.action)) {
        // A component can be marked readonly if changes should not be saved.
        // Particullary used for revision preview windows where the notes should not be savable.
        this.alertService.alert({
          text: "The extension ".concat(component.name, " is trying to save, but it is in a locked state and cannot accept changes.")
        });
        return;
      }
      /**
      Possible Messages:
        set-size
        stream-items
        stream-context-item
        save-items
        select-item
        associate-item
        deassociate-item
        clear-selection
        create-item
        create-items
        delete-items
        set-component-data
        install-local-component
        toggle-activate-component
        request-permissions
        present-conflict-resolution
      */


      if (message.action === "stream-items") {
        this.handleStreamItemsMessage(component, message);
      } else if (message.action === "stream-context-item") {
        this.handleStreamContextItemMessage(component, message);
      } else if (message.action === "set-component-data") {
        this.handleSetComponentDataMessage(component, message);
      } else if (message.action === "delete-items") {
        this.handleDeleteItemsMessage(component, message);
      } else if (message.action === "create-items" || message.action === "create-item") {
        this.handleCreateItemsMessage(component, message);
      } else if (message.action === "save-items") {
        this.handleSaveItemsMessage(component, message);
      } else if (message.action === "toggle-activate-component") {
        var componentToToggle = this.modelManager.findItem(message.data.uuid);
        this.handleToggleComponentMessage(component, componentToToggle, message);
      } else if (message.action === "request-permissions") {
        this.handleRequestPermissionsMessage(component, message);
      } else if (message.action === "install-local-component") {
        this.handleInstallLocalComponentMessage(component, message);
      } else if (message.action === "duplicate-item") {
        this.handleDuplicateItemMessage(component, message);
      } // Notify observers


      var _iteratorNormalCompletion10 = true;
      var _didIteratorError10 = false;
      var _iteratorError10 = undefined;

      try {
        var _loop4 = function _loop4() {
          var handler = _step10.value;

          if (handler.actionHandler && (handler.areas.includes(component.area) || handler.areas.includes("*"))) {
            _this6.timeout(function () {
              handler.actionHandler(component, message.action, message.data);
            });
          }
        };

        for (var _iterator10 = this.handlers[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {
          _loop4();
        }
      } catch (err) {
        _didIteratorError10 = true;
        _iteratorError10 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion10 && _iterator10.return != null) {
            _iterator10.return();
          }
        } finally {
          if (_didIteratorError10) {
            throw _iteratorError10;
          }
        }
      }
    }
  }, {
    key: "removePrivatePropertiesFromResponseItems",
    value: function removePrivatePropertiesFromResponseItems(responseItems, component) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      // can be 'incoming' or 'outgoing'. We want to remove updated_at if incoming, but keep it if outgoing
      if (options.type === "incoming") {
        var privateTopLevelProperties = ["updated_at"]; // Maintaining our own updated_at value is imperative for sync to work properly, we ignore any incoming value.

        var _iteratorNormalCompletion11 = true;
        var _didIteratorError11 = false;
        var _iteratorError11 = undefined;

        try {
          for (var _iterator11 = responseItems[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {
            var responseItem = _step11.value;

            if (responseItem.isItem) {
              console.error("Attempting to pass object. Use JSON.");
              continue;
            }

            var _iteratorNormalCompletion12 = true;
            var _didIteratorError12 = false;
            var _iteratorError12 = undefined;

            try {
              for (var _iterator12 = privateTopLevelProperties[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {
                var privateProperty = _step12.value;
                delete responseItem[privateProperty];
              }
            } catch (err) {
              _didIteratorError12 = true;
              _iteratorError12 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion12 && _iterator12.return != null) {
                  _iterator12.return();
                }
              } finally {
                if (_didIteratorError12) {
                  throw _iteratorError12;
                }
              }
            }
          }
        } catch (err) {
          _didIteratorError11 = true;
          _iteratorError11 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion11 && _iterator11.return != null) {
              _iterator11.return();
            }
          } finally {
            if (_didIteratorError11) {
              throw _iteratorError11;
            }
          }
        }
      }

      if (component) {
        // System extensions can bypass this step
        if (this.isNativeExtension(component)) {
          return;
        }
      } // Don't allow component to overwrite these properties.


      var privateContentProperties = ["autoupdateDisabled", "permissions", "active"];

      if (options) {
        if (options.includeUrls) {
          privateContentProperties = privateContentProperties.concat(["url", "hosted_url", "local_url"]);
        }
      }

      var _iteratorNormalCompletion13 = true;
      var _didIteratorError13 = false;
      var _iteratorError13 = undefined;

      try {
        for (var _iterator13 = responseItems[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {
          var _responseItem = _step13.value;

          // Do not pass in actual items here, otherwise that would be destructive.
          // Instead, generic JS/JSON objects should be passed.
          if (_responseItem.isItem) {
            console.error("Attempting to pass object. Use JSON.");
            continue;
          }

          var _iteratorNormalCompletion14 = true;
          var _didIteratorError14 = false;
          var _iteratorError14 = undefined;

          try {
            for (var _iterator14 = privateContentProperties[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {
              var prop = _step14.value;
              delete _responseItem.content[prop];
            }
          } catch (err) {
            _didIteratorError14 = true;
            _iteratorError14 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion14 && _iterator14.return != null) {
                _iterator14.return();
              }
            } finally {
              if (_didIteratorError14) {
                throw _iteratorError14;
              }
            }
          }
        }
      } catch (err) {
        _didIteratorError13 = true;
        _iteratorError13 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion13 && _iterator13.return != null) {
            _iterator13.return();
          }
        } finally {
          if (_didIteratorError13) {
            throw _iteratorError13;
          }
        }
      }
    }
  }, {
    key: "handleStreamItemsMessage",
    value: function handleStreamItemsMessage(component, message) {
      var _this7 = this;

      var requiredPermissions = [{
        name: "stream-items",
        content_types: message.data.content_types.sort()
      }];
      this.runWithPermissions(component, requiredPermissions, function () {
        if (!lodash_find__WEBPACK_IMPORTED_MODULE_0___default()(_this7.streamObservers, {
          identifier: component.uuid
        })) {
          // for pushing laster as changes come in
          _this7.streamObservers.push({
            identifier: component.uuid,
            component: component,
            originalMessage: message,
            contentTypes: message.data.content_types
          });
        } // push immediately now


        var items = [];
        var _iteratorNormalCompletion15 = true;
        var _didIteratorError15 = false;
        var _iteratorError15 = undefined;

        try {
          for (var _iterator15 = message.data.content_types[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {
            var contentType = _step15.value;
            items = items.concat(_this7.modelManager.validItemsForContentType(contentType));
          }
        } catch (err) {
          _didIteratorError15 = true;
          _iteratorError15 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion15 && _iterator15.return != null) {
              _iterator15.return();
            }
          } finally {
            if (_didIteratorError15) {
              throw _iteratorError15;
            }
          }
        }

        _this7.sendItemsInReply(component, items, message);
      });
    }
  }, {
    key: "handleStreamContextItemMessage",
    value: function handleStreamContextItemMessage(component, message) {
      var _this8 = this;

      var requiredPermissions = [{
        name: "stream-context-item"
      }];
      this.runWithPermissions(component, requiredPermissions, function () {
        if (!lodash_find__WEBPACK_IMPORTED_MODULE_0___default()(_this8.contextStreamObservers, {
          identifier: component.uuid
        })) {
          // for pushing laster as changes come in
          _this8.contextStreamObservers.push({
            identifier: component.uuid,
            component: component,
            originalMessage: message
          });
        } // push immediately now


        var _iteratorNormalCompletion16 = true;
        var _didIteratorError16 = false;
        var _iteratorError16 = undefined;

        try {
          for (var _iterator16 = _this8.handlersForArea(component.area)[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {
            var handler = _step16.value;

            if (handler.contextRequestHandler) {
              var itemInContext = handler.contextRequestHandler(component);

              if (itemInContext) {
                _this8.sendContextItemInReply(component, itemInContext, message);
              }
            }
          }
        } catch (err) {
          _didIteratorError16 = true;
          _iteratorError16 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion16 && _iterator16.return != null) {
              _iterator16.return();
            }
          } finally {
            if (_didIteratorError16) {
              throw _iteratorError16;
            }
          }
        }
      });
    }
  }, {
    key: "isItemIdWithinComponentContextJurisdiction",
    value: function isItemIdWithinComponentContextJurisdiction(uuid, component) {
      var itemIdsInJurisdiction = this.itemIdsInContextJurisdictionForComponent(component);
      return itemIdsInJurisdiction.includes(uuid);
    }
    /* Returns items that given component has context permissions for */

  }, {
    key: "itemIdsInContextJurisdictionForComponent",
    value: function itemIdsInContextJurisdictionForComponent(component) {
      var itemIds = [];
      var _iteratorNormalCompletion17 = true;
      var _didIteratorError17 = false;
      var _iteratorError17 = undefined;

      try {
        for (var _iterator17 = this.handlersForArea(component.area)[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {
          var handler = _step17.value;

          if (handler.contextRequestHandler) {
            var itemInContext = handler.contextRequestHandler(component);

            if (itemInContext) {
              itemIds.push(itemInContext.uuid);
            }
          }
        }
      } catch (err) {
        _didIteratorError17 = true;
        _iteratorError17 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion17 && _iterator17.return != null) {
            _iterator17.return();
          }
        } finally {
          if (_didIteratorError17) {
            throw _iteratorError17;
          }
        }
      }

      return itemIds;
    }
  }, {
    key: "handlersForArea",
    value: function handlersForArea(area) {
      return this.handlers.filter(function (candidate) {
        return candidate.areas.includes(area);
      });
    }
  }, {
    key: "handleSaveItemsMessage",
    value: function handleSaveItemsMessage(component, message) {
      var _this9 = this;

      var responseItems, requiredPermissions, itemIdsInContextJurisdiction, pendingResponseItems, _iteratorNormalCompletion18, _didIteratorError18, _iteratorError18, _iterator18, _step18, responseItem, requiredContentTypes;

      return regeneratorRuntime.async(function handleSaveItemsMessage$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              responseItems = message.data.items;
              requiredPermissions = [];
              itemIdsInContextJurisdiction = this.itemIdsInContextJurisdictionForComponent(component); // Pending as in needed to be accounted for in permissions.

              pendingResponseItems = responseItems.slice();
              _iteratorNormalCompletion18 = true;
              _didIteratorError18 = false;
              _iteratorError18 = undefined;
              _context4.prev = 7;
              _iterator18 = responseItems.slice()[Symbol.iterator]();

            case 9:
              if (_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done) {
                _context4.next = 18;
                break;
              }

              responseItem = _step18.value;

              if (!itemIdsInContextJurisdiction.includes(responseItem.uuid)) {
                _context4.next = 15;
                break;
              }

              requiredPermissions.push({
                name: "stream-context-item"
              });
              lodash_pull__WEBPACK_IMPORTED_MODULE_1___default()(pendingResponseItems, responseItem); // We break because there can only be one context item

              return _context4.abrupt("break", 18);

            case 15:
              _iteratorNormalCompletion18 = true;
              _context4.next = 9;
              break;

            case 18:
              _context4.next = 24;
              break;

            case 20:
              _context4.prev = 20;
              _context4.t0 = _context4["catch"](7);
              _didIteratorError18 = true;
              _iteratorError18 = _context4.t0;

            case 24:
              _context4.prev = 24;
              _context4.prev = 25;

              if (!_iteratorNormalCompletion18 && _iterator18.return != null) {
                _iterator18.return();
              }

            case 27:
              _context4.prev = 27;

              if (!_didIteratorError18) {
                _context4.next = 30;
                break;
              }

              throw _iteratorError18;

            case 30:
              return _context4.finish(27);

            case 31:
              return _context4.finish(24);

            case 32:
              // Check to see if additional privileges are required
              if (pendingResponseItems.length > 0) {
                requiredContentTypes = lodash_uniq__WEBPACK_IMPORTED_MODULE_2___default()(pendingResponseItems.map(function (i) {
                  return i.content_type;
                })).sort();
                requiredPermissions.push({
                  name: "stream-items",
                  content_types: requiredContentTypes
                });
              }

              this.runWithPermissions(component, requiredPermissions, function _callee2() {
                var ids, items, lockedCount, _iteratorNormalCompletion19, _didIteratorError19, _iteratorError19, _iterator19, _step19, item, itemNoun, auxVerb, payloads, localItems, _iteratorNormalCompletion20, _didIteratorError20, _iteratorError20, _iterator20, _step20, responseItem, _item;

                return regeneratorRuntime.async(function _callee2$(_context3) {
                  while (1) {
                    switch (_context3.prev = _context3.next) {
                      case 0:
                        _this9.removePrivatePropertiesFromResponseItems(responseItems, component, {
                          includeUrls: true,
                          type: "incoming"
                        });
                        /*
                        We map the items here because modelManager is what updates the UI. If you were to instead get the items directly,
                        this would update them server side via sync, but would never make its way back to the UI.
                        */
                        // Filter locked items


                        ids = responseItems.map(function (i) {
                          return i.uuid;
                        });
                        items = _this9.modelManager.findItems(ids);
                        lockedCount = 0;
                        _iteratorNormalCompletion19 = true;
                        _didIteratorError19 = false;
                        _iteratorError19 = undefined;
                        _context3.prev = 7;

                        for (_iterator19 = items[Symbol.iterator](); !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {
                          item = _step19.value;

                          if (item.locked) {
                            lodash_remove__WEBPACK_IMPORTED_MODULE_3___default()(responseItems, {
                              uuid: item.uuid
                            });
                            lockedCount++;
                          }
                        }

                        _context3.next = 15;
                        break;

                      case 11:
                        _context3.prev = 11;
                        _context3.t0 = _context3["catch"](7);
                        _didIteratorError19 = true;
                        _iteratorError19 = _context3.t0;

                      case 15:
                        _context3.prev = 15;
                        _context3.prev = 16;

                        if (!_iteratorNormalCompletion19 && _iterator19.return != null) {
                          _iterator19.return();
                        }

                      case 18:
                        _context3.prev = 18;

                        if (!_didIteratorError19) {
                          _context3.next = 21;
                          break;
                        }

                        throw _iteratorError19;

                      case 21:
                        return _context3.finish(18);

                      case 22:
                        return _context3.finish(15);

                      case 23:
                        if (lockedCount > 0) {
                          itemNoun = lockedCount === 1 ? "item" : "items";
                          auxVerb = lockedCount === 1 ? "is" : "are";

                          _this9.alertService.alert({
                            title: 'Items Locked',
                            text: "".concat(lockedCount, " ").concat(itemNoun, " you are attempting to save ").concat(auxVerb, " locked and cannot be edited.")
                          });
                        }

                        payloads = responseItems.map(function (responseItem) {
                          return Object(_Payloads__WEBPACK_IMPORTED_MODULE_5__["CreateMaxPayloadFromAnyObject"])({
                            object: responseItem
                          });
                        });
                        _context3.next = 27;
                        return regeneratorRuntime.awrap(_this9.modelManager.mapPayloadsToLocalItems({
                          paylods: payloads,
                          source: _Payloads__WEBPACK_IMPORTED_MODULE_5__["PayloadSources"].ComponentRetrieved,
                          sourceKey: component.uuid
                        }));

                      case 27:
                        localItems = _context3.sent;
                        _iteratorNormalCompletion20 = true;
                        _didIteratorError20 = false;
                        _iteratorError20 = undefined;
                        _context3.prev = 31;
                        _iterator20 = responseItems[Symbol.iterator]();

                      case 33:
                        if (_iteratorNormalCompletion20 = (_step20 = _iterator20.next()).done) {
                          _context3.next = 46;
                          break;
                        }

                        responseItem = _step20.value;
                        _item = lodash_find__WEBPACK_IMPORTED_MODULE_0___default()(localItems, {
                          uuid: responseItem.uuid
                        });

                        if (_item) {
                          _context3.next = 39;
                          break;
                        }

                        // An item this extension is trying to save was possibly removed locally, notify user
                        _this9.alertService.alert({
                          text: "The extension ".concat(component.name, " is trying to save an item with type ").concat(responseItem.content_type, ", but that item does not exist. Please restart this extension and try again.")
                        });

                        return _context3.abrupt("continue", 43);

                      case 39:
                        if (_item.locked) {
                          _context3.next = 43;
                          break;
                        }

                        if (responseItem.clientData) {
                          _item.setDomainDataItem(component.getClientDataKey(), responseItem.clientData, SNComponentManager.ClientDataDomain);
                        }

                        _context3.next = 43;
                        return regeneratorRuntime.awrap(_this9.modelManager.setItemDirty(_item, true, true, _Payloads__WEBPACK_IMPORTED_MODULE_5__["PayloadSources"].ComponentRetrieved, component.uuid));

                      case 43:
                        _iteratorNormalCompletion20 = true;
                        _context3.next = 33;
                        break;

                      case 46:
                        _context3.next = 52;
                        break;

                      case 48:
                        _context3.prev = 48;
                        _context3.t1 = _context3["catch"](31);
                        _didIteratorError20 = true;
                        _iteratorError20 = _context3.t1;

                      case 52:
                        _context3.prev = 52;
                        _context3.prev = 53;

                        if (!_iteratorNormalCompletion20 && _iterator20.return != null) {
                          _iterator20.return();
                        }

                      case 55:
                        _context3.prev = 55;

                        if (!_didIteratorError20) {
                          _context3.next = 58;
                          break;
                        }

                        throw _iteratorError20;

                      case 58:
                        return _context3.finish(55);

                      case 59:
                        return _context3.finish(52);

                      case 60:
                        _this9.syncService.sync().then(function (response) {
                          // Allow handlers to be notified when a save begins and ends, to update the UI
                          var saveMessage = Object.assign({}, message);
                          saveMessage.action = response && response.error ? "save-error" : "save-success";

                          _this9.replyToMessage(component, message, {
                            error: response && response.error
                          });

                          _this9.handleMessage(component, saveMessage);
                        });

                      case 61:
                      case "end":
                        return _context3.stop();
                    }
                  }
                }, null, null, [[7, 11, 15, 23], [16,, 18, 22], [31, 48, 52, 60], [53,, 55, 59]]);
              });

            case 34:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this, [[7, 20, 24, 32], [25,, 27, 31]]);
    }
  }, {
    key: "handleDuplicateItemMessage",
    value: function handleDuplicateItemMessage(component, message) {
      var _this10 = this;

      var itemParams = message.data.item;
      var item = this.modelManager.findItem(itemParams.uuid);
      var requiredPermissions = [{
        name: "stream-items",
        content_types: [item.content_type]
      }];
      this.runWithPermissions(component, requiredPermissions, function _callee3() {
        var duplicate;
        return regeneratorRuntime.async(function _callee3$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return regeneratorRuntime.awrap(_this10.modelManager.duplicateItem({
                  item: item
                }));

              case 2:
                duplicate = _context5.sent;

                _this10.syncService.sync();

                _this10.replyToMessage(component, message, {
                  item: _this10.jsonForItem(duplicate, component)
                });

              case 5:
              case "end":
                return _context5.stop();
            }
          }
        });
      });
    }
  }, {
    key: "handleCreateItemsMessage",
    value: function handleCreateItemsMessage(component, message) {
      var _this11 = this;

      var responseItems = message.data.item ? [message.data.item] : message.data.items;
      var uniqueContentTypes = lodash_uniq__WEBPACK_IMPORTED_MODULE_2___default()(responseItems.map(function (item) {
        return item.content_type;
      }));
      var requiredPermissions = [{
        name: "stream-items",
        content_types: uniqueContentTypes
      }];
      this.runWithPermissions(component, requiredPermissions, function _callee4() {
        var processedItems, _iteratorNormalCompletion21, _didIteratorError21, _iteratorError21, _iterator21, _step21, responseItem, payload, item, reply;

        return regeneratorRuntime.async(function _callee4$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _this11.removePrivatePropertiesFromResponseItems(responseItems, component, {
                  type: "incoming"
                });

                processedItems = [];
                _iteratorNormalCompletion21 = true;
                _didIteratorError21 = false;
                _iteratorError21 = undefined;
                _context6.prev = 5;
                _iterator21 = responseItems[Symbol.iterator]();

              case 7:
                if (_iteratorNormalCompletion21 = (_step21 = _iterator21.next()).done) {
                  _context6.next = 21;
                  break;
                }

                responseItem = _step21.value;
                payload = Object(_Payloads__WEBPACK_IMPORTED_MODULE_5__["CreateSourcedPayloadFromObject"])({
                  object: responseItem,
                  source: _Payloads__WEBPACK_IMPORTED_MODULE_5__["PayloadSources"].RemoteRetrieved
                });
                item = Object(_Models__WEBPACK_IMPORTED_MODULE_6__["CreateItemFromPayload"])(payload);

                if (responseItem.clientData) {
                  item.setDomainDataItem(component.getClientDataKey(), responseItem.clientData, SNComponentManager.ClientDataDomain);
                }

                _this11.modelManager.addItem(item);

                _context6.next = 15;
                return regeneratorRuntime.awrap(_this11.modelManager.resolveReferencesForItem(item, true));

              case 15:
                _context6.next = 17;
                return regeneratorRuntime.awrap(_this11.modelManager.setItemDirty(item, true));

              case 17:
                processedItems.push(item);

              case 18:
                _iteratorNormalCompletion21 = true;
                _context6.next = 7;
                break;

              case 21:
                _context6.next = 27;
                break;

              case 23:
                _context6.prev = 23;
                _context6.t0 = _context6["catch"](5);
                _didIteratorError21 = true;
                _iteratorError21 = _context6.t0;

              case 27:
                _context6.prev = 27;
                _context6.prev = 28;

                if (!_iteratorNormalCompletion21 && _iterator21.return != null) {
                  _iterator21.return();
                }

              case 30:
                _context6.prev = 30;

                if (!_didIteratorError21) {
                  _context6.next = 33;
                  break;
                }

                throw _iteratorError21;

              case 33:
                return _context6.finish(30);

              case 34:
                return _context6.finish(27);

              case 35:
                _this11.syncService.sync(); // "create-item" or "create-items" are possible messages handled here


                reply = message.action === "create-item" ? {
                  item: _this11.jsonForItem(processedItems[0], component)
                } : {
                  items: processedItems.map(function (item) {
                    return _this11.jsonForItem(item, component);
                  })
                };

                _this11.replyToMessage(component, message, reply);

              case 38:
              case "end":
                return _context6.stop();
            }
          }
        }, null, null, [[5, 23, 27, 35], [28,, 30, 34]]);
      });
    }
  }, {
    key: "handleDeleteItemsMessage",
    value: function handleDeleteItemsMessage(component, message) {
      var _this12 = this;

      var requiredContentTypes = lodash_uniq__WEBPACK_IMPORTED_MODULE_2___default()(message.data.items.map(function (i) {
        return i.content_type;
      })).sort();
      var requiredPermissions = [{
        name: "stream-items",
        content_types: requiredContentTypes
      }];
      this.runWithPermissions(component, requiredPermissions, function _callee5() {
        var itemsData, noun, reply, didConfirm, _iteratorNormalCompletion22, _didIteratorError22, _iteratorError22, _iterator22, _step22, itemData, model;

        return regeneratorRuntime.async(function _callee5$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                itemsData = message.data.items;
                noun = itemsData.length === 1 ? "item" : "items";
                reply = null;
                didConfirm = true;
                _context7.next = 6;
                return regeneratorRuntime.awrap(_this12.alertService.confirm({
                  text: "Are you sure you want to delete ".concat(itemsData.length, " ").concat(noun, "?")
                }).catch(function () {
                  didConfirm = false;
                }));

              case 6:
                if (!didConfirm) {
                  _context7.next = 45;
                  break;
                }

                // Filter for any components and deactivate before deleting
                _iteratorNormalCompletion22 = true;
                _didIteratorError22 = false;
                _iteratorError22 = undefined;
                _context7.prev = 10;
                _iterator22 = itemsData[Symbol.iterator]();

              case 12:
                if (_iteratorNormalCompletion22 = (_step22 = _iterator22.next()).done) {
                  _context7.next = 27;
                  break;
                }

                itemData = _step22.value;
                model = _this12.modelManager.findItem(itemData.uuid);

                if (model) {
                  _context7.next = 18;
                  break;
                }

                _this12.alertService.alert({
                  text: "The item you are trying to delete cannot be found."
                });

                return _context7.abrupt("continue", 24);

              case 18:
                if (![_Models__WEBPACK_IMPORTED_MODULE_6__["ContentTypes"].Component, _Models__WEBPACK_IMPORTED_MODULE_6__["ContentTypes"].Theme].includes(model.content_type)) {
                  _context7.next = 21;
                  break;
                }

                _context7.next = 21;
                return regeneratorRuntime.awrap(_this12.deactivateComponent(model, true));

              case 21:
                _context7.next = 23;
                return regeneratorRuntime.awrap(_this12.modelManager.setItemToBeDeleted(model));

              case 23:
                // Currently extensions are not notified of association until a full server sync completes.
                // We manually notify observers.
                _this12.modelManager.notifyMappingObservers([model], _Payloads__WEBPACK_IMPORTED_MODULE_5__["PayloadSources"].RemoteSaved);

              case 24:
                _iteratorNormalCompletion22 = true;
                _context7.next = 12;
                break;

              case 27:
                _context7.next = 33;
                break;

              case 29:
                _context7.prev = 29;
                _context7.t0 = _context7["catch"](10);
                _didIteratorError22 = true;
                _iteratorError22 = _context7.t0;

              case 33:
                _context7.prev = 33;
                _context7.prev = 34;

                if (!_iteratorNormalCompletion22 && _iterator22.return != null) {
                  _iterator22.return();
                }

              case 36:
                _context7.prev = 36;

                if (!_didIteratorError22) {
                  _context7.next = 39;
                  break;
                }

                throw _iteratorError22;

              case 39:
                return _context7.finish(36);

              case 40:
                return _context7.finish(33);

              case 41:
                _this12.syncService.sync();

                reply = {
                  deleted: true
                };
                _context7.next = 46;
                break;

              case 45:
                // Rejected by user
                reply = {
                  deleted: false
                };

              case 46:
                _this12.replyToMessage(component, message, reply);

              case 47:
              case "end":
                return _context7.stop();
            }
          }
        }, null, null, [[10, 29, 33, 41], [34,, 36, 40]]);
      });
    }
  }, {
    key: "handleRequestPermissionsMessage",
    value: function handleRequestPermissionsMessage(component, message) {
      var _this13 = this;

      this.runWithPermissions(component, message.data.permissions, function () {
        _this13.replyToMessage(component, message, {
          approved: true
        });
      });
    }
  }, {
    key: "handleSetComponentDataMessage",
    value: function handleSetComponentDataMessage(component, message) {
      var _this14 = this;

      // A component setting its own data does not require special permissions
      this.runWithPermissions(component, [], function _callee6() {
        return regeneratorRuntime.async(function _callee6$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                component.componentData = message.data.componentData;
                _context8.next = 3;
                return regeneratorRuntime.awrap(_this14.modelManager.setItemDirty(component, true));

              case 3:
                _this14.syncService.sync();

              case 4:
              case "end":
                return _context8.stop();
            }
          }
        });
      });
    }
  }, {
    key: "handleToggleComponentMessage",
    value: function handleToggleComponentMessage(sourceComponent, targetComponent, message) {
      this.toggleComponent(targetComponent);
    }
  }, {
    key: "toggleComponent",
    value: function toggleComponent(component) {
      var _this15 = this;

      var activeThemes;
      return regeneratorRuntime.async(function toggleComponent$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              if (!(component.area === 'modal')) {
                _context10.next = 4;
                break;
              }

              this.openModalComponent(component);
              _context10.next = 18;
              break;

            case 4:
              if (!component.active) {
                _context10.next = 9;
                break;
              }

              _context10.next = 7;
              return regeneratorRuntime.awrap(this.deactivateComponent(component));

            case 7:
              _context10.next = 18;
              break;

            case 9:
              if (!(component.content_type === _Models__WEBPACK_IMPORTED_MODULE_6__["ContentTypes"].Theme)) {
                _context10.next = 16;
                break;
              }

              // Deactive currently active theme if new theme is not layerable
              activeThemes = this.getActiveThemes(); // Activate current before deactivating others, so as not to flicker

              _context10.next = 13;
              return regeneratorRuntime.awrap(this.activateComponent(component));

            case 13:
              if (!component.isLayerable()) {
                setTimeout(function _callee7() {
                  var _iteratorNormalCompletion23, _didIteratorError23, _iteratorError23, _iterator23, _step23, theme;

                  return regeneratorRuntime.async(function _callee7$(_context9) {
                    while (1) {
                      switch (_context9.prev = _context9.next) {
                        case 0:
                          _iteratorNormalCompletion23 = true;
                          _didIteratorError23 = false;
                          _iteratorError23 = undefined;
                          _context9.prev = 3;
                          _iterator23 = activeThemes[Symbol.iterator]();

                        case 5:
                          if (_iteratorNormalCompletion23 = (_step23 = _iterator23.next()).done) {
                            _context9.next = 13;
                            break;
                          }

                          theme = _step23.value;

                          if (!(theme && !theme.isLayerable())) {
                            _context9.next = 10;
                            break;
                          }

                          _context9.next = 10;
                          return regeneratorRuntime.awrap(_this15.deactivateComponent(theme));

                        case 10:
                          _iteratorNormalCompletion23 = true;
                          _context9.next = 5;
                          break;

                        case 13:
                          _context9.next = 19;
                          break;

                        case 15:
                          _context9.prev = 15;
                          _context9.t0 = _context9["catch"](3);
                          _didIteratorError23 = true;
                          _iteratorError23 = _context9.t0;

                        case 19:
                          _context9.prev = 19;
                          _context9.prev = 20;

                          if (!_iteratorNormalCompletion23 && _iterator23.return != null) {
                            _iterator23.return();
                          }

                        case 22:
                          _context9.prev = 22;

                          if (!_didIteratorError23) {
                            _context9.next = 25;
                            break;
                          }

                          throw _iteratorError23;

                        case 25:
                          return _context9.finish(22);

                        case 26:
                          return _context9.finish(19);

                        case 27:
                        case "end":
                          return _context9.stop();
                      }
                    }
                  }, null, null, [[3, 15, 19, 27], [20,, 22, 26]]);
                }, 10);
              }

              _context10.next = 18;
              break;

            case 16:
              _context10.next = 18;
              return regeneratorRuntime.awrap(this.activateComponent(component));

            case 18:
            case "end":
              return _context10.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "handleInstallLocalComponentMessage",
    value: function handleInstallLocalComponentMessage(sourceComponent, message) {
      // Only extensions manager has this permission
      if (!this.isNativeExtension(sourceComponent)) {
        return;
      }

      var targetComponent = this.modelManager.findItem(message.data.uuid);
      this.desktopManager.installComponent(targetComponent);
    }
  }, {
    key: "runWithPermissions",
    value: function runWithPermissions(component, requiredPermissions, runFunction) {
      if (!component.permissions) {
        component.permissions = [];
      } // Make copy as not to mutate input values


      requiredPermissions = JSON.parse(JSON.stringify(requiredPermissions));
      var acquiredPermissions = component.permissions;
      var _iteratorNormalCompletion24 = true;
      var _didIteratorError24 = false;
      var _iteratorError24 = undefined;

      try {
        var _loop5 = function _loop5() {
          var required = _step24.value;
          // Remove anything we already have
          var respectiveAcquired = acquiredPermissions.find(function (candidate) {
            return candidate.name === required.name;
          });

          if (!respectiveAcquired) {
            return "continue";
          } // We now match on name, lets substract from required.content_types anything we have in acquired.


          var requiredContentTypes = required.content_types;

          if (!requiredContentTypes) {
            // If this permission does not require any content types (i.e stream-context-item)
            // then we can remove this from required since we match by name (respectiveAcquired.name === required.name)
            lodash_pull__WEBPACK_IMPORTED_MODULE_1___default()(requiredPermissions, required);
            return "continue";
          }

          var _iteratorNormalCompletion25 = true;
          var _didIteratorError25 = false;
          var _iteratorError25 = undefined;

          try {
            for (var _iterator25 = respectiveAcquired.content_types[Symbol.iterator](), _step25; !(_iteratorNormalCompletion25 = (_step25 = _iterator25.next()).done); _iteratorNormalCompletion25 = true) {
              var acquiredContentType = _step25.value;
              lodash_pull__WEBPACK_IMPORTED_MODULE_1___default()(requiredContentTypes, acquiredContentType);
            }
          } catch (err) {
            _didIteratorError25 = true;
            _iteratorError25 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion25 && _iterator25.return != null) {
                _iterator25.return();
              }
            } finally {
              if (_didIteratorError25) {
                throw _iteratorError25;
              }
            }
          }

          if (requiredContentTypes.length === 0) {
            // We've removed all acquired and end up with zero, means we already have all these permissions
            lodash_pull__WEBPACK_IMPORTED_MODULE_1___default()(requiredPermissions, required);
          }
        };

        for (var _iterator24 = requiredPermissions.slice()[Symbol.iterator](), _step24; !(_iteratorNormalCompletion24 = (_step24 = _iterator24.next()).done); _iteratorNormalCompletion24 = true) {
          var _ret4 = _loop5();

          if (_ret4 === "continue") continue;
        }
      } catch (err) {
        _didIteratorError24 = true;
        _iteratorError24 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion24 && _iterator24.return != null) {
            _iterator24.return();
          }
        } finally {
          if (_didIteratorError24) {
            throw _iteratorError24;
          }
        }
      }

      if (requiredPermissions.length > 0) {
        this.promptForPermissions(component, requiredPermissions, function (approved) {
          if (approved) {
            runFunction();
          }
        });
      } else {
        runFunction();
      }
    }
  }, {
    key: "promptForPermissions",
    value: function promptForPermissions(component, permissions, callback) {
      var _this16 = this;

      var params = {};
      params.component = component;
      params.permissions = permissions;
      params.permissionsString = this.permissionsStringForPermissions(permissions, component);
      params.actionBlock = callback;

      params.callback = function _callee8(approved) {
        var _iteratorNormalCompletion26, _didIteratorError26, _iteratorError26, _loop6, _iterator26, _step26;

        return regeneratorRuntime.async(function _callee8$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                if (!approved) {
                  _context11.next = 24;
                  break;
                }

                _iteratorNormalCompletion26 = true;
                _didIteratorError26 = false;
                _iteratorError26 = undefined;
                _context11.prev = 4;

                _loop6 = function _loop6() {
                  var permission = _step26.value;
                  var matchingPermission = component.permissions.find(function (candidate) {
                    return candidate.name === permission.name;
                  });

                  if (!matchingPermission) {
                    component.permissions.push(permission);
                  } else {
                    // Permission already exists, but content_types may have been expanded
                    var contentTypes = matchingPermission.content_types || [];
                    matchingPermission.content_types = lodash_uniq__WEBPACK_IMPORTED_MODULE_2___default()(contentTypes.concat(permission.content_types));
                  }
                };

                for (_iterator26 = permissions[Symbol.iterator](); !(_iteratorNormalCompletion26 = (_step26 = _iterator26.next()).done); _iteratorNormalCompletion26 = true) {
                  _loop6();
                }

                _context11.next = 13;
                break;

              case 9:
                _context11.prev = 9;
                _context11.t0 = _context11["catch"](4);
                _didIteratorError26 = true;
                _iteratorError26 = _context11.t0;

              case 13:
                _context11.prev = 13;
                _context11.prev = 14;

                if (!_iteratorNormalCompletion26 && _iterator26.return != null) {
                  _iterator26.return();
                }

              case 16:
                _context11.prev = 16;

                if (!_didIteratorError26) {
                  _context11.next = 19;
                  break;
                }

                throw _iteratorError26;

              case 19:
                return _context11.finish(16);

              case 20:
                return _context11.finish(13);

              case 21:
                _context11.next = 23;
                return regeneratorRuntime.awrap(_this16.modelManager.setItemDirty(component, true));

              case 23:
                _this16.syncService.sync();

              case 24:
                _this16.permissionDialogs = _this16.permissionDialogs.filter(function (pendingDialog) {
                  // Remove self
                  if (pendingDialog === params) {
                    pendingDialog.actionBlock && pendingDialog.actionBlock(approved);
                    return false;
                  }

                  var containsObjectSubset = function containsObjectSubset(source, target) {
                    return !target.some(function (val) {
                      return !source.find(function (candidate) {
                        return JSON.stringify(candidate) === JSON.stringify(val);
                      });
                    });
                  };

                  if (pendingDialog.component === component) {
                    // remove pending dialogs that are encapsulated by already approved permissions, and run its function
                    if (pendingDialog.permissions === permissions || containsObjectSubset(permissions, pendingDialog.permissions)) {
                      // If approved, run the action block. Otherwise, if canceled, cancel any pending ones as well, since the user was
                      // explicit in their intentions
                      if (approved) {
                        pendingDialog.actionBlock && pendingDialog.actionBlock(approved);
                      }

                      return false;
                    }
                  }

                  return true;
                });

                if (_this16.permissionDialogs.length > 0) {
                  _this16.presentPermissionsDialog(_this16.permissionDialogs[0]);
                }

              case 26:
              case "end":
                return _context11.stop();
            }
          }
        }, null, null, [[4, 9, 13, 21], [14,, 16, 20]]);
      }; // since these calls are asyncronous, multiple dialogs may be requested at the same time. We only want to present one and trigger all callbacks based on one modal result


      var existingDialog = lodash_find__WEBPACK_IMPORTED_MODULE_0___default()(this.permissionDialogs, {
        component: component
      });
      this.permissionDialogs.push(params);

      if (!existingDialog) {
        this.presentPermissionsDialog(params);
      } else {
        this.log("Existing dialog, not presenting.");
      }
    }
  }, {
    key: "presentPermissionsDialog",
    value: function presentPermissionsDialog(dialog) {
      throw 'Must override SNComponentManager.presentPermissionsDialog';
    }
  }, {
    key: "openModalComponent",
    value: function openModalComponent(component) {
      throw 'Must override SNComponentManager.presentPermissionsDialog';
    }
  }, {
    key: "registerHandler",
    value: function registerHandler(handler) {
      this.handlers.push(handler);
    }
  }, {
    key: "deregisterHandler",
    value: function deregisterHandler(identifier) {
      var handler = lodash_find__WEBPACK_IMPORTED_MODULE_0___default()(this.handlers, {
        identifier: identifier
      });

      if (!handler) {
        this.log("Attempting to deregister non-existing handler");
        return;
      }

      this.handlers.splice(this.handlers.indexOf(handler), 1);
    } // Called by other views when the iframe is ready

  }, {
    key: "registerComponentWindow",
    value: function registerComponentWindow(component, componentWindow) {
      return regeneratorRuntime.async(function registerComponentWindow$(_context12) {
        while (1) {
          switch (_context12.prev = _context12.next) {
            case 0:
              if (component.window === componentWindow) {
                this.log("Web|componentManager", "attempting to re-register same component window.");
              }

              this.log("Web|componentManager|registerComponentWindow", component);
              component.window = componentWindow;
              _context12.next = 5;
              return regeneratorRuntime.awrap(_Lib_uuid__WEBPACK_IMPORTED_MODULE_7__["Uuid"].GenerateUuid());

            case 5:
              component.sessionKey = _context12.sent;
              this.sendMessageToComponent(component, {
                action: "component-registered",
                sessionKey: component.sessionKey,
                componentData: component.componentData,
                data: {
                  uuid: component.uuid,
                  environment: this.environment,
                  platform: this.platform,
                  activeThemeUrls: this.urlsForActiveThemes()
                }
              });
              this.postActiveThemesToComponent(component);

              if (this.desktopManager) {
                this.desktopManager.notifyComponentActivation(component);
              }

            case 9:
            case "end":
              return _context12.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "activateComponent",
    value: function activateComponent(component) {
      var dontSync,
          didChange,
          _iteratorNormalCompletion27,
          _didIteratorError27,
          _iteratorError27,
          _iterator27,
          _step27,
          handler,
          _args13 = arguments;

      return regeneratorRuntime.async(function activateComponent$(_context13) {
        while (1) {
          switch (_context13.prev = _context13.next) {
            case 0:
              dontSync = _args13.length > 1 && _args13[1] !== undefined ? _args13[1] : false;
              didChange = component.active !== true;
              component.active = true;
              _iteratorNormalCompletion27 = true;
              _didIteratorError27 = false;
              _iteratorError27 = undefined;
              _context13.prev = 6;

              for (_iterator27 = this.handlers[Symbol.iterator](); !(_iteratorNormalCompletion27 = (_step27 = _iterator27.next()).done); _iteratorNormalCompletion27 = true) {
                handler = _step27.value;

                if (handler.areas.includes(component.area) || handler.areas.includes("*")) {
                  handler.activationHandler && handler.activationHandler(component);
                }
              }

              _context13.next = 14;
              break;

            case 10:
              _context13.prev = 10;
              _context13.t0 = _context13["catch"](6);
              _didIteratorError27 = true;
              _iteratorError27 = _context13.t0;

            case 14:
              _context13.prev = 14;
              _context13.prev = 15;

              if (!_iteratorNormalCompletion27 && _iterator27.return != null) {
                _iterator27.return();
              }

            case 17:
              _context13.prev = 17;

              if (!_didIteratorError27) {
                _context13.next = 20;
                break;
              }

              throw _iteratorError27;

            case 20:
              return _context13.finish(17);

            case 21:
              return _context13.finish(14);

            case 22:
              if (!(didChange && !dontSync)) {
                _context13.next = 26;
                break;
              }

              _context13.next = 25;
              return regeneratorRuntime.awrap(this.modelManager.setItemDirty(component, true));

            case 25:
              this.syncService.sync();

            case 26:
              if (!this.activeComponents.includes(component)) {
                this.activeComponents.push(component);
              }

              if (component.area === "themes") {
                this.postActiveThemesToAllComponents();
              }

            case 28:
            case "end":
              return _context13.stop();
          }
        }
      }, null, this, [[6, 10, 14, 22], [15,, 17, 21]]);
    }
  }, {
    key: "deactivateComponent",
    value: function deactivateComponent(component) {
      var dontSync,
          didChange,
          _iteratorNormalCompletion28,
          _didIteratorError28,
          _iteratorError28,
          _iterator28,
          _step28,
          handler,
          _args14 = arguments;

      return regeneratorRuntime.async(function deactivateComponent$(_context14) {
        while (1) {
          switch (_context14.prev = _context14.next) {
            case 0:
              dontSync = _args14.length > 1 && _args14[1] !== undefined ? _args14[1] : false;
              didChange = component.active !== false;
              component.active = false;
              component.sessionKey = null;
              _iteratorNormalCompletion28 = true;
              _didIteratorError28 = false;
              _iteratorError28 = undefined;
              _context14.prev = 7;

              for (_iterator28 = this.handlers[Symbol.iterator](); !(_iteratorNormalCompletion28 = (_step28 = _iterator28.next()).done); _iteratorNormalCompletion28 = true) {
                handler = _step28.value;

                if (handler.areas.includes(component.area) || handler.areas.includes("*")) {
                  handler.activationHandler && handler.activationHandler(component);
                }
              }

              _context14.next = 15;
              break;

            case 11:
              _context14.prev = 11;
              _context14.t0 = _context14["catch"](7);
              _didIteratorError28 = true;
              _iteratorError28 = _context14.t0;

            case 15:
              _context14.prev = 15;
              _context14.prev = 16;

              if (!_iteratorNormalCompletion28 && _iterator28.return != null) {
                _iterator28.return();
              }

            case 18:
              _context14.prev = 18;

              if (!_didIteratorError28) {
                _context14.next = 21;
                break;
              }

              throw _iteratorError28;

            case 21:
              return _context14.finish(18);

            case 22:
              return _context14.finish(15);

            case 23:
              if (!(didChange && !dontSync)) {
                _context14.next = 27;
                break;
              }

              _context14.next = 26;
              return regeneratorRuntime.awrap(this.modelManager.setItemDirty(component, true));

            case 26:
              this.syncService.sync();

            case 27:
              lodash_pull__WEBPACK_IMPORTED_MODULE_1___default()(this.activeComponents, component);
              this.streamObservers = this.streamObservers.filter(function (o) {
                return o.component !== component;
              });
              this.contextStreamObservers = this.contextStreamObservers.filter(function (o) {
                return o.component !== component;
              });

              if (component.area === "themes") {
                this.postActiveThemesToAllComponents();
              }

            case 31:
            case "end":
              return _context14.stop();
          }
        }
      }, null, this, [[7, 11, 15, 23], [16,, 18, 22]]);
    }
  }, {
    key: "reloadComponent",
    value: function reloadComponent(component) {
      var _this17 = this;

      var _iteratorNormalCompletion29, _didIteratorError29, _iteratorError29, _iterator29, _step29, handler;

      return regeneratorRuntime.async(function reloadComponent$(_context15) {
        while (1) {
          switch (_context15.prev = _context15.next) {
            case 0:
              //
              // Do soft deactivate
              //
              component.active = false;
              _iteratorNormalCompletion29 = true;
              _didIteratorError29 = false;
              _iteratorError29 = undefined;
              _context15.prev = 4;

              for (_iterator29 = this.handlers[Symbol.iterator](); !(_iteratorNormalCompletion29 = (_step29 = _iterator29.next()).done); _iteratorNormalCompletion29 = true) {
                handler = _step29.value;

                if (handler.areas.includes(component.area) || handler.areas.includes("*")) {
                  handler.activationHandler && handler.activationHandler(component);
                }
              }

              _context15.next = 12;
              break;

            case 8:
              _context15.prev = 8;
              _context15.t0 = _context15["catch"](4);
              _didIteratorError29 = true;
              _iteratorError29 = _context15.t0;

            case 12:
              _context15.prev = 12;
              _context15.prev = 13;

              if (!_iteratorNormalCompletion29 && _iterator29.return != null) {
                _iterator29.return();
              }

            case 15:
              _context15.prev = 15;

              if (!_didIteratorError29) {
                _context15.next = 18;
                break;
              }

              throw _iteratorError29;

            case 18:
              return _context15.finish(15);

            case 19:
              return _context15.finish(12);

            case 20:
              this.streamObservers = this.streamObservers.filter(function (o) {
                return o.component !== component;
              });
              this.contextStreamObservers = this.contextStreamObservers.filter(function (o) {
                return o.component !== component;
              });

              if (component.area === "themes") {
                this.postActiveThemesToAllComponents();
              } //
              // Do soft activate
              //


              return _context15.abrupt("return", new Promise(function (resolve, reject) {
                _this17.timeout(function () {
                  component.active = true;
                  var _iteratorNormalCompletion30 = true;
                  var _didIteratorError30 = false;
                  var _iteratorError30 = undefined;

                  try {
                    for (var _iterator30 = _this17.handlers[Symbol.iterator](), _step30; !(_iteratorNormalCompletion30 = (_step30 = _iterator30.next()).done); _iteratorNormalCompletion30 = true) {
                      var handler = _step30.value;

                      if (handler.areas.includes(component.area) || handler.areas.includes("*")) {
                        handler.activationHandler && handler.activationHandler(component);
                        resolve();
                      }
                    }
                  } catch (err) {
                    _didIteratorError30 = true;
                    _iteratorError30 = err;
                  } finally {
                    try {
                      if (!_iteratorNormalCompletion30 && _iterator30.return != null) {
                        _iterator30.return();
                      }
                    } finally {
                      if (_didIteratorError30) {
                        throw _iteratorError30;
                      }
                    }
                  }

                  if (!_this17.activeComponents.includes(component)) {
                    _this17.activeComponents.push(component);
                  }

                  if (component.area === "themes") {
                    _this17.postActiveThemesToAllComponents();
                  } // Resolve again in case first resolve in for loop isn't reached.
                  // Should be no effect if resolved twice, only first will be used.


                  resolve();
                });
              }));

            case 24:
            case "end":
              return _context15.stop();
          }
        }
      }, null, this, [[4, 8, 12, 20], [13,, 15, 19]]);
    }
  }, {
    key: "deleteComponent",
    value: function deleteComponent(component) {
      return regeneratorRuntime.async(function deleteComponent$(_context16) {
        while (1) {
          switch (_context16.prev = _context16.next) {
            case 0:
              _context16.next = 2;
              return regeneratorRuntime.awrap(this.modelManager.setItemToBeDeleted(component));

            case 2:
              this.syncService.sync();

            case 3:
            case "end":
              return _context16.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "isComponentActive",
    value: function isComponentActive(component) {
      return component.active;
    }
  }, {
    key: "iframeForComponent",
    value: function iframeForComponent(component) {
      for (var _i = 0, _Array$from = Array.from(document.getElementsByTagName("iframe")); _i < _Array$from.length; _i++) {
        var frame = _Array$from[_i];
        var componentId = frame.dataset.componentId;

        if (componentId === component.uuid) {
          return frame;
        }
      }
    }
  }, {
    key: "focusChangedForComponent",
    value: function focusChangedForComponent(component) {
      var focused = document.activeElement === this.iframeForComponent(component);
      var _iteratorNormalCompletion31 = true;
      var _didIteratorError31 = false;
      var _iteratorError31 = undefined;

      try {
        for (var _iterator31 = this.handlers[Symbol.iterator](), _step31; !(_iteratorNormalCompletion31 = (_step31 = _iterator31.next()).done); _iteratorNormalCompletion31 = true) {
          var handler = _step31.value;
          // Notify all handlers, and not just ones that match this component type
          handler.focusHandler && handler.focusHandler(component, focused);
        }
      } catch (err) {
        _didIteratorError31 = true;
        _iteratorError31 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion31 && _iterator31.return != null) {
            _iterator31.return();
          }
        } finally {
          if (_didIteratorError31) {
            throw _iteratorError31;
          }
        }
      }
    }
  }, {
    key: "handleSetSizeEvent",
    value: function handleSetSizeEvent(component, data) {
      var setSize = function setSize(element, size) {
        var widthString = typeof size.width === 'string' ? size.width : "".concat(data.width, "px");
        var heightString = typeof size.height === 'string' ? size.height : "".concat(data.height, "px");

        if (element) {
          element.setAttribute("style", "width:".concat(widthString, "; height:").concat(heightString, ";"));
        }
      };

      if (component.area === "rooms" || component.area === "modal") {
        var selector = component.area === "rooms" ? "inner" : "outer";
        var content = document.getElementById("component-content-".concat(selector, "-").concat(component.uuid));

        if (content) {
          setSize(content, data);
        }
      } else {
        var iframe = this.iframeForComponent(component);

        if (!iframe) {
          return;
        }

        setSize(iframe, data); // On Firefox, resizing a component iframe does not seem to have an effect with editor-stack extensions.
        // Sizing the parent does the trick, however, we can't do this globally, otherwise, areas like the note-tags will
        // not be able to expand outside of the bounds (to display autocomplete, for example).

        if (component.area === "editor-stack") {
          var parent = iframe.parentElement;

          if (parent) {
            setSize(parent, data);
          }
        } // content object in this case is === to the iframe object above. This is probably
        // legacy code from when we would size content and container individually, which we no longer do.
        // const content = document.getElementById(`component-iframe-${component.uuid}`);
        // if(content) {
        //   setSize(content, data);
        // }

      }
    }
  }, {
    key: "editorForNote",
    value: function editorForNote(note) {
      var editors = this.componentsForArea("editor-editor");
      var _iteratorNormalCompletion32 = true;
      var _didIteratorError32 = false;
      var _iteratorError32 = undefined;

      try {
        for (var _iterator32 = editors[Symbol.iterator](), _step32; !(_iteratorNormalCompletion32 = (_step32 = _iterator32.next()).done); _iteratorNormalCompletion32 = true) {
          var editor = _step32.value;

          if (editor.isExplicitlyEnabledForItem(note)) {
            return editor;
          }
        } // No editor found for note. Use default editor, if note does not prefer system editor

      } catch (err) {
        _didIteratorError32 = true;
        _iteratorError32 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion32 && _iterator32.return != null) {
            _iterator32.return();
          }
        } finally {
          if (_didIteratorError32) {
            throw _iteratorError32;
          }
        }
      }

      if (this.isMobile) {
        if (!note.content.mobilePrefersPlainEditor) {
          return this.getDefaultEditor();
        }
      } else {
        if (!note.getAppDataItem("prefersPlainEditor")) {
          return editors.filter(function (e) {
            return e.isDefaultEditor();
          })[0];
        }
      }
    }
  }, {
    key: "permissionsStringForPermissions",
    value: function permissionsStringForPermissions(permissions, component) {
      var finalString = "";
      var permissionsCount = permissions.length;

      var addSeparator = function addSeparator(index, length) {
        if (index > 0) {
          if (index === length - 1) {
            if (length === 2) {
              return " and ";
            } else {
              return ", and ";
            }
          } else {
            return ", ";
          }
        }

        return "";
      };

      permissions.forEach(function (permission, index) {
        if (permission.name === "stream-items") {
          var types = permission.content_types.map(function (type) {
            var desc = Object(_Models__WEBPACK_IMPORTED_MODULE_6__["displayStringForContentType"])(type);

            if (desc) {
              return desc + "s";
            } else {
              return "items of type " + type;
            }
          });
          var typesString = "";

          for (var i = 0; i < types.length; i++) {
            var type = types[i];
            typesString += addSeparator(i, types.length + permissionsCount - index - 1);
            typesString += type;
          }

          finalString += addSeparator(index, permissionsCount);
          finalString += typesString;

          if (types.length >= 2 && index < permissionsCount - 1) {
            // If you have a list of types, and still an additional root-level permission coming up, add a comma
            finalString += ", ";
          }
        } else if (permission.name === "stream-context-item") {
          var mapping = {
            "editor-stack": "working note",
            "note-tags": "working note",
            "editor-editor": "working note"
          };
          finalString += addSeparator(index, permissionsCount, true);
          finalString += mapping[component.area];
        }
      });
      return finalString + ".";
    }
  }, {
    key: "components",
    get: function get() {
      return this.modelManager.getItems([_Models__WEBPACK_IMPORTED_MODULE_6__["ContentTypes"].Component, _Models__WEBPACK_IMPORTED_MODULE_6__["ContentTypes"].Theme]);
    }
  }]);

  return SNComponentManager;
}(_Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_4__["PureService"]);

/***/ }),

/***/ "./lib/services/device_auth/device_auth_service.js":
/*!*********************************************************!*\
  !*** ./lib/services/device_auth/device_auth_service.js ***!
  \*********************************************************/
/*! exports provided: DeviceAuthService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeviceAuthService", function() { return DeviceAuthService; });
/* harmony import */ var _Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/services/pure_service */ "./lib/services/pure_service.js");
/* harmony import */ var _Lib_storage_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Lib/storage_keys */ "./lib/storage_keys.js");
/* harmony import */ var _Services_storage_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Services/storage_service */ "./lib/services/storage_service.js");
/* harmony import */ var _Lib_challenges__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Lib/challenges */ "./lib/challenges.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }





var DeviceAuthService =
/*#__PURE__*/
function (_PureService) {
  _inherits(DeviceAuthService, _PureService);

  function DeviceAuthService(_ref) {
    var _this;

    var storageService = _ref.storageService,
        keyManager = _ref.keyManager,
        protocolService = _ref.protocolService;

    _classCallCheck(this, DeviceAuthService);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(DeviceAuthService).call(this));
    _this.storageService = storageService;
    _this.keyManager = keyManager;
    _this.protocolService = protocolService;
    return _this;
  }
  /** @public */


  _createClass(DeviceAuthService, [{
    key: "isPasscodeLocked",
    value: function isPasscodeLocked() {
      return this.keyManager.rootKeyNeedsUnwrapping();
    }
  }, {
    key: "getLaunchChallenges",
    value: function getLaunchChallenges() {
      var challenges, hasPasscode, biometricPrefs, biometricEnabled;
      return regeneratorRuntime.async(function getLaunchChallenges$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              challenges = [];
              _context.next = 3;
              return regeneratorRuntime.awrap(this.keyManager.hasPasscode());

            case 3:
              hasPasscode = _context.sent;

              if (hasPasscode) {
                challenges.push(_Lib_challenges__WEBPACK_IMPORTED_MODULE_3__["Challenges"].LocalPasscode);
              }

              _context.next = 7;
              return regeneratorRuntime.awrap(this.storageService.getValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_1__["StorageKeys"].BiometricPrefs, _Services_storage_service__WEBPACK_IMPORTED_MODULE_2__["StorageValueModes"].Nonwrapped));

            case 7:
              biometricPrefs = _context.sent;
              biometricEnabled = biometricPrefs && biometricPrefs.enabled;

              if (biometricEnabled) {
                challenges.push(_Lib_challenges__WEBPACK_IMPORTED_MODULE_3__["Challenges"].Biometric);
              }

              return _context.abrupt("return", challenges);

            case 11:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "enableBiometrics",
    value: function enableBiometrics() {
      return regeneratorRuntime.async(function enableBiometrics$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return regeneratorRuntime.awrap(this.storageService.setValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_1__["StorageKeys"].BiometricPrefs, {
                enabled: true
              }, _Services_storage_service__WEBPACK_IMPORTED_MODULE_2__["StorageValueModes"].Nonwrapped));

            case 2:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "validateChallengeResponse",
    value: function validateChallengeResponse(response) {
      return regeneratorRuntime.async(function validateChallengeResponse$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              if (!(response.challenge === _Lib_challenges__WEBPACK_IMPORTED_MODULE_3__["Challenges"].LocalPasscode)) {
                _context3.next = 4;
                break;
              }

              return _context3.abrupt("return", this.keyManager.validatePasscode(response.value));

            case 4:
              if (!(response.challenge === _Lib_challenges__WEBPACK_IMPORTED_MODULE_3__["Challenges"].AccountPassword)) {
                _context3.next = 8;
                break;
              }

              return _context3.abrupt("return", this.keyManager.validateAccountPassword(response.value));

            case 8:
              if (!(response.challenge === _Lib_challenges__WEBPACK_IMPORTED_MODULE_3__["Challenges"].Biometric)) {
                _context3.next = 10;
                break;
              }

              return _context3.abrupt("return", response.value === true);

            case 10:
              throw "Cannot validate challenge type ".concat(response.challenge);

            case 11:
            case "end":
              return _context3.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "handleChallengeResponse",
    value: function handleChallengeResponse(response) {
      var key;
      return regeneratorRuntime.async(function handleChallengeResponse$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              if (!(response.challenge === _Lib_challenges__WEBPACK_IMPORTED_MODULE_3__["Challenges"].LocalPasscode)) {
                _context4.next = 8;
                break;
              }

              _context4.next = 3;
              return regeneratorRuntime.awrap(this.keyManager.computeWrappingKey({
                passcode: response.value
              }));

            case 3:
              key = _context4.sent;
              _context4.next = 6;
              return regeneratorRuntime.awrap(this.keyManager.unwrapRootKey({
                wrappingKey: key
              }));

            case 6:
              _context4.next = 8;
              break;

            case 8:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this);
    }
  }]);

  return DeviceAuthService;
}(_Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__["PureService"]);

/***/ }),

/***/ "./lib/services/device_auth/response.js":
/*!**********************************************!*\
  !*** ./lib/services/device_auth/response.js ***!
  \**********************************************/
/*! exports provided: ChallengeResponse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChallengeResponse", function() { return ChallengeResponse; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ChallengeResponse = function ChallengeResponse(_ref) {
  var challenge = _ref.challenge,
      value = _ref.value;

  _classCallCheck(this, ChallengeResponse);

  this.challenge = challenge;
  this.value = value;
  Object.freeze(this);
};

/***/ }),

/***/ "./lib/services/history/functions.js":
/*!*******************************************!*\
  !*** ./lib/services/history/functions.js ***!
  \*******************************************/
/*! exports provided: CreateHistoryEntryForItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateHistoryEntryForItem", function() { return CreateHistoryEntryForItem; });
/* harmony import */ var _note_history_entry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./note_history_entry */ "./lib/services/history/note_history_entry.js");
/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



function CreateHistoryEntryForItem(item) {
  var mapping = _defineProperty({}, _Models_content_types__WEBPACK_IMPORTED_MODULE_1__["ContentTypes"].Note, _note_history_entry__WEBPACK_IMPORTED_MODULE_0__["NoteHistoryEntry"]);

  var historyItemClass = mapping[item.content_type];

  if (!historyItemClass) {
    throw 'Invalid item history class';
  } // eslint-disable-next-line new-cap


  var entry = new historyItemClass(item);
  return entry;
}

/***/ }),

/***/ "./lib/services/history/history_manager.js":
/*!*************************************************!*\
  !*** ./lib/services/history/history_manager.js ***!
  \*************************************************/
/*! exports provided: SNHistoryManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNHistoryManager", function() { return SNHistoryManager; });
/* harmony import */ var _Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/services/pure_service */ "./lib/services/pure_service.js");
/* harmony import */ var _Services_history_history_session__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Services/history/history_session */ "./lib/services/history/history_session.js");
/* harmony import */ var _Payloads_sources__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads/sources */ "./lib/protocol/payloads/sources.js");
/* harmony import */ var _Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Lib/storage_keys */ "./lib/storage_keys.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }






var SNHistoryManager =
/*#__PURE__*/
function (_PureService) {
  _inherits(SNHistoryManager, _PureService);

  function SNHistoryManager(_ref) {
    var _this;

    var modelManager = _ref.modelManager,
        storageService = _ref.storageService,
        contentTypes = _ref.contentTypes,
        timeout = _ref.timeout;

    _classCallCheck(this, SNHistoryManager);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNHistoryManager).call(this));
    _this.modelManager = modelManager;
    _this.storageService = storageService;
    _this.contentTypes = contentTypes;
    _this.timeout = timeout;
    return _this;
  }

  _createClass(SNHistoryManager, [{
    key: "initializeFromDisk",
    value: function initializeFromDisk() {
      var autoOptimize;
      return regeneratorRuntime.async(function initializeFromDisk$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return regeneratorRuntime.awrap(this.storageService.getValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__["StorageKeys"].SessionHistoryPersistable));

            case 2:
              this.persistable = _context.sent;
              _context.next = 5;
              return regeneratorRuntime.awrap(this.storageService.getValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__["StorageKeys"].SessionHistoryRevisions).then(function (historyValue) {
                return new _Services_history_history_session__WEBPACK_IMPORTED_MODULE_1__["HistorySession"](historyValue);
              }));

            case 5:
              this.historySession = _context.sent;
              _context.next = 8;
              return regeneratorRuntime.awrap(this.storageService.getValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__["StorageKeys"].SessionHistoryOptimize));

            case 8:
              autoOptimize = _context.sent;

              if (Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_4__["isNullOrUndefined"])(autoOptimize)) {
                /** Default to true */
                this.autoOptimize = true;
              } else {
                this.autoOptimize = autoOptimize;
              }

              this.addMappingObserver();

            case 11:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "addMappingObserver",
    value: function addMappingObserver() {
      var _this2 = this;

      this.modelManager.addMappingObserver(this.contentTypes, function (allItems, validItems, deletedItems, source, sourceKey) {
        if (source === _Payloads_sources__WEBPACK_IMPORTED_MODULE_2__["PayloadSources"].LocalDirtied) {
          return;
        }

        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = allItems[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var item = _step.value;

            try {
              if (!item.deleted) {
                _this2.addHistoryEntryForItem(item);
              }
            } catch (e) {
              console.error('Unable to add item history entry:', e);
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      });
    }
  }, {
    key: "isDiskEnabled",
    value: function isDiskEnabled() {
      return this.persistable;
    }
  }, {
    key: "isAutoOptimizeEnabled",
    value: function isAutoOptimizeEnabled() {
      return this.autoOptimize;
    }
  }, {
    key: "saveToDisk",
    value: function saveToDisk() {
      return regeneratorRuntime.async(function saveToDisk$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              if (this.persistable) {
                _context2.next = 2;
                break;
              }

              return _context2.abrupt("return");

            case 2:
              this.storageService.setValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__["StorageKeys"].SessionHistoryRevisions, this.historySession);

            case 3:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "setSessionItemRevisionThreshold",
    value: function setSessionItemRevisionThreshold(threshold) {
      this.historySession.setItemRevisionThreshold(threshold);
    }
  }, {
    key: "addHistoryEntryForItem",
    value: function addHistoryEntryForItem(item) {
      var _this3 = this;

      var persistableItemParams, entry, PERSIST_TIMEOUT;
      return regeneratorRuntime.async(function addHistoryEntryForItem$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              persistableItemParams = {
                uuid: item.uuid,
                content_type: item.content_type,
                updated_at: item.updated_at,
                content: item.getContentCopy()
              };
              entry = this.historySession.addEntryForItem(persistableItemParams);

              if (this.autoOptimize) {
                this.historySession.optimizeHistoryForItem(item);
              }

              PERSIST_TIMEOUT = 2000;

              if (entry && this.persistable) {
                /** Debounce, clear existing timeout */
                if (this.diskTimeout) {
                  if (this.timeout.hasOwnProperty('cancel')) {
                    this.timeout.cancel(this.diskTimeout);
                  } else {
                    clearTimeout(this.diskTimeout);
                  }
                }

                ;
                this.diskTimeout = this.timeout(function () {
                  _this3.saveToDisk();
                }, PERSIST_TIMEOUT);
              }

            case 5:
            case "end":
              return _context3.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "historyForItem",
    value: function historyForItem(item) {
      return this.historySession.historyForItem(item);
    }
  }, {
    key: "clearHistoryForItem",
    value: function clearHistoryForItem(item) {
      return regeneratorRuntime.async(function clearHistoryForItem$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              this.historySession.clearItemHistory(item);
              return _context4.abrupt("return", this.saveToDisk());

            case 2:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "clearAllHistory",
    value: function clearAllHistory() {
      return regeneratorRuntime.async(function clearAllHistory$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              this.historySession.clearAllHistory();
              return _context5.abrupt("return", this.storageService.removeValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__["StorageKeys"].SessionHistoryRevisions));

            case 2:
            case "end":
              return _context5.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "toggleDiskSaving",
    value: function toggleDiskSaving() {
      return regeneratorRuntime.async(function toggleDiskSaving$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              this.persistable = !this.persistable;

              if (!this.persistable) {
                _context6.next = 6;
                break;
              }

              this.storageService.setValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__["StorageKeys"].SessionHistoryPersistable, true);
              this.saveToDisk();
              _context6.next = 8;
              break;

            case 6:
              this.storageService.setValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__["StorageKeys"].SessionHistoryPersistable, false);
              return _context6.abrupt("return", this.storageService.removeValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__["StorageKeys"].SessionHistoryRevisions));

            case 8:
            case "end":
              return _context6.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "toggleAutoOptimize",
    value: function toggleAutoOptimize() {
      return regeneratorRuntime.async(function toggleAutoOptimize$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              this.autoOptimize = !this.autoOptimize;

              if (this.autoOptimize) {
                this.storageService.setValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__["StorageKeys"].SessionHistoryOptimize, true);
              } else {
                this.storageService.setValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__["StorageKeys"].SessionHistoryOptimize, false);
              }

            case 2:
            case "end":
              return _context7.stop();
          }
        }
      }, null, this);
    }
  }]);

  return SNHistoryManager;
}(_Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__["PureService"]);

/***/ }),

/***/ "./lib/services/history/history_session.js":
/*!*************************************************!*\
  !*** ./lib/services/history/history_session.js ***!
  \*************************************************/
/*! exports provided: HistorySession */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HistorySession", function() { return HistorySession; });
/* harmony import */ var _Services_history_item_history__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Services/history/item_history */ "./lib/services/history/item_history.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


/** The amount of revisions which above, call for an optimization. */

var DEFAULT_ITEM_REVISIONS_THRESHOLD = 60;
/**
 * HistorySession is the only object in the session history domain that is
 * persistable. A history session contains one main content object: the
 * itemUUIDToItemHistoryMapping. This is a dictionary whose keys are item uuids,
 * and each value is an ItemHistory object.
 *
 * Each ItemHistory object contains an array called `entries` which contain
 * `ItemHistory` (or subclasses thereof) entries.
 */

var HistorySession =
/*#__PURE__*/
function () {
  function HistorySession(raw) {
    var _this = this;

    _classCallCheck(this, HistorySession);

    Object.assign(this, raw);

    if (!this.content) {
      this.content = {};
    }

    if (!this.content.itemUUIDToItemHistoryMapping) {
      this.content.itemUUIDToItemHistoryMapping = {};
    }

    var uuids = Object.keys(this.content.itemUUIDToItemHistoryMapping);
    uuids.forEach(function (itemUUID) {
      var itemHistory = _this.content.itemUUIDToItemHistoryMapping[itemUUID];
      _this.content.itemUUIDToItemHistoryMapping[itemUUID] = new _Services_history_item_history__WEBPACK_IMPORTED_MODULE_0__["ItemHistory"](itemHistory);
    });
    this.setItemRevisionThreshold(DEFAULT_ITEM_REVISIONS_THRESHOLD);
  }

  _createClass(HistorySession, [{
    key: "addEntryForItem",
    value: function addEntryForItem(item) {
      var itemHistory = this.historyForItem(item);
      return itemHistory.addHistoryEntryForItem(item);
    }
  }, {
    key: "historyForItem",
    value: function historyForItem(item) {
      var history = this.content.itemUUIDToItemHistoryMapping[item.uuid];

      if (!history) {
        history = new _Services_history_item_history__WEBPACK_IMPORTED_MODULE_0__["ItemHistory"]();
        this.content.itemUUIDToItemHistoryMapping[item.uuid] = history;
      }

      return history;
    }
  }, {
    key: "clearItemHistory",
    value: function clearItemHistory(item) {
      this.historyForItem(item).clear();
    }
  }, {
    key: "clearAllHistory",
    value: function clearAllHistory() {
      this.content.itemUUIDToItemHistoryMapping = {};
    }
  }, {
    key: "setItemRevisionThreshold",
    value: function setItemRevisionThreshold(threshold) {
      this.itemRevisionThreshold = threshold;
    }
  }, {
    key: "optimizeHistoryForItem",
    value: function optimizeHistoryForItem(item) {
      /**
       * Clean up if there are too many revisions. Note itemRevisionThreshold
       * is the amount of revisions which above, call for an optimization. An
       * optimization may not remove entries above this threshold. It will
       * determine what it should keep and what it shouldn't. So, it is possible
       * to have a threshold of 60 but have 600 entries, if the item history deems
       * those worth keeping.
       */
      var itemHistory = this.historyForItem(item);

      if (itemHistory.entries.length > this.itemRevisionThreshold) {
        itemHistory.optimize();
      }
    }
  }]);

  return HistorySession;
}();

/***/ }),

/***/ "./lib/services/history/item_history.js":
/*!**********************************************!*\
  !*** ./lib/services/history/item_history.js ***!
  \**********************************************/
/*! exports provided: ItemHistory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ItemHistory", function() { return ItemHistory; });
/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./functions */ "./lib/services/history/functions.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


/**
 * The amount of characters added or removed that
 * constitute a keepable entry after optimization.
 */

var LARGE_ENTRY_DELTA_THRESHOLD = 15;
var ItemHistory =
/*#__PURE__*/
function () {
  function ItemHistory() {
    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, ItemHistory);

    if (!this.entries) {
      this.entries = [];
    }
    /** Deserialize the entries into entry objects. */


    if (params.entries) {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = params.entries[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var entryParams = _step.value;
          var entry = this.createEntryForItem(entryParams.item);
          entry.setPreviousEntry(this.getLastEntry());
          this.entries.push(entry);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
  }

  _createClass(ItemHistory, [{
    key: "createEntryForItem",
    value: function createEntryForItem(item) {
      return Object(_functions__WEBPACK_IMPORTED_MODULE_0__["CreateHistoryEntryForItem"])(item);
    }
  }, {
    key: "getLastEntry",
    value: function getLastEntry() {
      return this.entries[this.entries.length - 1];
    }
  }, {
    key: "addHistoryEntryForItem",
    value: function addHistoryEntryForItem(item) {
      var prospectiveEntry = this.createEntryForItem(item);
      var previousEntry = this.getLastEntry();
      prospectiveEntry.setPreviousEntry(previousEntry);

      if (prospectiveEntry.isSameAsEntry(previousEntry)) {
        return;
      }

      this.entries.push(prospectiveEntry);
      return prospectiveEntry;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.entries.length = 0;
    }
  }, {
    key: "optimize",
    value: function optimize() {
      var _this = this;

      var keepEntries = [];

      var isEntrySignificant = function isEntrySignificant(entry) {
        return entry.deltaSize() > LARGE_ENTRY_DELTA_THRESHOLD;
      };

      var processEntry = function processEntry(entry, index, keep) {
        /**
         * Entries may be processed retrospectively, meaning it can be
         * decided to be deleted, then an upcoming processing can change that.
         */
        if (keep) {
          keepEntries.push(entry);
        } else {
          /** Remove if in keep */
          var _index = keepEntries.indexOf(entry);

          if (_index !== -1) {
            keepEntries.splice(_index, 1);
          }
        }

        if (keep && isEntrySignificant(entry) && entry.operationVector() === -1) {
          /** This is a large negative change. Hang on to the previous entry. */
          var previousEntry = _this.entries[index - 1];

          if (previousEntry) {
            keepEntries.push(previousEntry);
          }
        }
      };

      this.entries.forEach(function (entry, index) {
        if (index === 0 || index === _this.entries.length - 1) {
          /** Keep the first and last */
          processEntry(entry, index, true);
        } else {
          var significant = isEntrySignificant(entry);
          processEntry(entry, index, significant);
        }
      });
      this.entries = this.entries.filter(function (entry, index) {
        return keepEntries.indexOf(entry) !== -1;
      });
    }
  }]);

  return ItemHistory;
}();

/***/ }),

/***/ "./lib/services/history/item_history_entry.js":
/*!****************************************************!*\
  !*** ./lib/services/history/item_history_entry.js ***!
  \****************************************************/
/*! exports provided: ItemHistoryEntry */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ItemHistoryEntry", function() { return ItemHistoryEntry; });
/* harmony import */ var _Models_core_item__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Models/core/item */ "./lib/models/core/item.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Payloads_generator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads/generator */ "./lib/protocol/payloads/generator.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }




var ItemHistoryEntry =
/*#__PURE__*/
function () {
  function ItemHistoryEntry(item) {
    _classCallCheck(this, ItemHistoryEntry);

    /**
     * Whatever values `item` has will be persisted,
     * so be sure that the values are picked beforehand.
     */
    this.item = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_1__["deepMerge"])({}, item);
    /**
     * We'll assume a `text` content value to diff on.
     * If it doesn't exist, no problem.
     */

    this.defaultContentKeyToDiffOn = 'text';
    /** Default value */

    this.textCharDiffLength = 0;

    if (Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_1__["isString"])(this.item.updated_at)) {
      this.item.updated_at = new Date(this.item.updated_at);
    }
  }

  _createClass(ItemHistoryEntry, [{
    key: "setPreviousEntry",
    value: function setPreviousEntry(previousEntry) {
      this.hasPreviousEntry = previousEntry != null;
      /** We'll try to compute the delta based on an assumed
       * content property of `text`, if it exists.
       */

      if (this.item.content[this.defaultContentKeyToDiffOn]) {
        if (previousEntry) {
          this.textCharDiffLength = this.item.content[this.defaultContentKeyToDiffOn].length - previousEntry.item.content[this.defaultContentKeyToDiffOn].length;
        } else {
          this.textCharDiffLength = this.item.content[this.defaultContentKeyToDiffOn].length;
        }
      }
    }
  }, {
    key: "operationVector",
    value: function operationVector() {
      /**
       * We'll try to use the value of `textCharDiffLength`
       * to help determine this, if it's set
       */
      if (this.textCharDiffLength !== undefined) {
        if (!this.hasPreviousEntry || this.textCharDiffLength === 0) {
          return 0;
        } else if (this.textCharDiffLength < 0) {
          return -1;
        } else {
          return 1;
        }
      }
      /** Otherwise use a default value of 1 */


      return 1;
    }
  }, {
    key: "deltaSize",
    value: function deltaSize() {
      /**
       * Up to the subclass to determine how large the delta was,
       * i.e number of characters changed.
       * But this general class won't be able to determine which property it
       * should diff on, or even its format.
       */

      /**
       * We can return the `textCharDiffLength` if it's set,
       * otherwise, just return 1;
       */
      if (this.textCharDiffLength !== undefined) {
        return Math.abs(this.textCharDiffLength);
      }
      /**
       * Otherwise return 1 here to constitute a basic positive delta.
       * The value returned should always be positive. Override `operationVector`
       * to return the direction of the delta.
       */


      return 1;
    }
  }, {
    key: "isSameAsEntry",
    value: function isSameAsEntry(entry) {
      if (!entry) {
        return false;
      }

      var lhs = new _Models_core_item__WEBPACK_IMPORTED_MODULE_0__["SFItem"](Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_2__["CreateMaxPayloadFromAnyObject"])({
        object: this.item
      }));
      var rhs = new _Models_core_item__WEBPACK_IMPORTED_MODULE_0__["SFItem"](Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_2__["CreateMaxPayloadFromAnyObject"])({
        object: entry.item
      }));
      return lhs.isItemContentEqualWith(rhs);
    }
  }]);

  return ItemHistoryEntry;
}();

/***/ }),

/***/ "./lib/services/history/note_history_entry.js":
/*!****************************************************!*\
  !*** ./lib/services/history/note_history_entry.js ***!
  \****************************************************/
/*! exports provided: NoteHistoryEntry */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NoteHistoryEntry", function() { return NoteHistoryEntry; });
/* harmony import */ var _Services_history_item_history_entry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Services/history/item_history_entry */ "./lib/services/history/item_history_entry.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }


var NoteHistoryEntry =
/*#__PURE__*/
function (_ItemHistoryEntry) {
  _inherits(NoteHistoryEntry, _ItemHistoryEntry);

  function NoteHistoryEntry() {
    _classCallCheck(this, NoteHistoryEntry);

    return _possibleConstructorReturn(this, _getPrototypeOf(NoteHistoryEntry).apply(this, arguments));
  }

  _createClass(NoteHistoryEntry, [{
    key: "previewTitle",
    value: function previewTitle() {
      return this.item.updated_at.toLocaleString();
    }
  }, {
    key: "previewSubTitle",
    value: function previewSubTitle() {
      if (!this.hasPreviousEntry) {
        return "".concat(this.textCharDiffLength, " characters loaded");
      } else if (this.textCharDiffLength < 0) {
        return "".concat(this.textCharDiffLength * -1, " characters removed");
      } else if (this.textCharDiffLength > 0) {
        return "".concat(this.textCharDiffLength, " characters added");
      } else {
        return "Title or metadata changed";
      }
    }
  }]);

  return NoteHistoryEntry;
}(_Services_history_item_history_entry__WEBPACK_IMPORTED_MODULE_0__["ItemHistoryEntry"]);

/***/ }),

/***/ "./lib/services/http_service.js":
/*!**************************************!*\
  !*** ./lib/services/http_service.js ***!
  \**************************************/
/*! exports provided: SNHttpService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNHttpService", function() { return SNHttpService; });
/* harmony import */ var _Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/services/pure_service */ "./lib/services/pure_service.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var HTTP_VERB_GET = 'get';
var HTTP_VERB_POST = 'post';
var HTTP_VERB_PATCH = 'patch';
var REQUEST_READY_STATE_COMPLETED = 4;
var HTTP_STATUS_MIN_SUCCESS = 200;
var HTTP_STATUS_MAX_SUCCESS = 299;
var SNHttpService =
/*#__PURE__*/
function (_PureService) {
  _inherits(SNHttpService, _PureService);

  function SNHttpService() {
    _classCallCheck(this, SNHttpService);

    return _possibleConstructorReturn(this, _getPrototypeOf(SNHttpService).apply(this, arguments));
  }

  _createClass(SNHttpService, [{
    key: "getAbsolute",
    value: function getAbsolute(_ref) {
      var url, params, authentication;
      return regeneratorRuntime.async(function getAbsolute$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              url = _ref.url, params = _ref.params, authentication = _ref.authentication;
              return _context.abrupt("return", this.runHttp({
                verb: HTTP_VERB_GET,
                url: url,
                params: params,
                authentication: authentication
              }));

            case 2:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "postAbsolute",
    value: function postAbsolute(_ref2) {
      var url, params, authentication;
      return regeneratorRuntime.async(function postAbsolute$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              url = _ref2.url, params = _ref2.params, authentication = _ref2.authentication;
              return _context2.abrupt("return", this.runHttp({
                verb: HTTP_VERB_POST,
                url: url,
                params: params,
                authentication: authentication
              }));

            case 2:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "patchAbsolute",
    value: function patchAbsolute(_ref3) {
      var url, params, authentication;
      return regeneratorRuntime.async(function patchAbsolute$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              url = _ref3.url, params = _ref3.params, authentication = _ref3.authentication;
              return _context3.abrupt("return", this.runHttp({
                verb: HTTP_VERB_PATCH,
                url: url,
                params: params,
                authentication: authentication
              }));

            case 2:
            case "end":
              return _context3.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "runHttp",
    value: function runHttp(_ref4) {
      var verb, url, params, authentication, request;
      return regeneratorRuntime.async(function runHttp$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              verb = _ref4.verb, url = _ref4.url, params = _ref4.params, authentication = _ref4.authentication;
              request = this.createRequest({
                verb: verb,
                url: url,
                params: params,
                authentication: authentication
              });
              return _context4.abrupt("return", this.runRequest({
                request: request,
                verb: verb,
                params: params
              }));

            case 3:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "createRequest",
    value: function createRequest(_ref5) {
      var verb = _ref5.verb,
          url = _ref5.url,
          params = _ref5.params,
          authentication = _ref5.authentication;
      var request = new XMLHttpRequest();

      if (verb === HTTP_VERB_GET && Object.keys(params).length > 0) {
        url = this.urlForUrlAndParams(url, params);
      }

      request.open(verb, url, true);
      request.setRequestHeader('Content-type', 'application/json');

      if (authentication) {
        request.setRequestHeader('Authorization', 'Bearer ' + authentication);
      }

      return request;
    }
  }, {
    key: "runRequest",
    value: function runRequest(_ref6) {
      var _this = this;

      var request, verb, params;
      return regeneratorRuntime.async(function runRequest$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              request = _ref6.request, verb = _ref6.verb, params = _ref6.params;
              return _context5.abrupt("return", new Promise(function (resolve, reject) {
                request.onreadystatechange = function () {
                  _this.stateChangeHandlerForRequest(request, resolve, reject);
                };

                if (verb === HTTP_VERB_POST || verb === HTTP_VERB_PATCH) {
                  request.send(JSON.stringify(params));
                } else {
                  request.send();
                }
              }));

            case 2:
            case "end":
              return _context5.stop();
          }
        }
      });
    }
  }, {
    key: "stateChangeHandlerForRequest",
    value: function stateChangeHandlerForRequest(request, resolve, reject) {
      if (request.readyState !== REQUEST_READY_STATE_COMPLETED) {
        return;
      }

      var response = request.responseText;

      if (response) {
        try {
          response = JSON.parse(response); // eslint-disable-next-line no-empty
        } catch (e) {}
      }

      if (!Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_1__["isObject"])(response)) {
        response = {};
      }

      var httpStatus = request.status;

      if (httpStatus >= HTTP_STATUS_MIN_SUCCESS && httpStatus <= HTTP_STATUS_MAX_SUCCESS) {
        response.status = httpStatus;
        resolve(response);
      } else {
        console.error('Request error:', response);

        if (Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_1__["isString"])(response)) {
          response = {
            error: {
              message: response
            }
          };
        }

        response.status = httpStatus;
        reject(response);
      }
    }
  }, {
    key: "urlForUrlAndParams",
    value: function urlForUrlAndParams(url, params) {
      var keyValueString = Object.keys(params).map(function (key) {
        return key + '=' + encodeURIComponent(params[key]);
      }).join('&');

      if (url.includes('?')) {
        return url + '&' + keyValueString;
      } else {
        return url + '?' + keyValueString;
      }
    }
  }]);

  return SNHttpService;
}(_Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__["PureService"]);

/***/ }),

/***/ "./lib/services/index.js":
/*!*******************************!*\
  !*** ./lib/services/index.js ***!
  \*******************************/
/*! exports provided: SNAlertService, SNSessionManager, SNApiService, SNComponentManager, SNHttpService, SNModelManager, SNSingletonManager, SNActionsService, SNMigrationService, SNProtocolService, SNHistoryManager, SNPrivilegesService, SNKeyManager, KEY_MODE_ROOT_KEY_NONE, ItemsKeyManager, SyncEvents, SNSyncManager, SyncModes, DeviceAuthService, SNStorageService, StorageEncryptionPolicies, StoragePersistencePolicies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Services_alert_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Services/alert_service */ "./lib/services/alert_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNAlertService", function() { return _Services_alert_service__WEBPACK_IMPORTED_MODULE_0__["SNAlertService"]; });

/* harmony import */ var _Services_api_session_manager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Services/api/session_manager */ "./lib/services/api/session_manager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNSessionManager", function() { return _Services_api_session_manager__WEBPACK_IMPORTED_MODULE_1__["SNSessionManager"]; });

/* harmony import */ var _Services_api_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Services/api/api_service */ "./lib/services/api/api_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNApiService", function() { return _Services_api_api_service__WEBPACK_IMPORTED_MODULE_2__["SNApiService"]; });

/* harmony import */ var _Services_component_manager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Services/component_manager */ "./lib/services/component_manager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNComponentManager", function() { return _Services_component_manager__WEBPACK_IMPORTED_MODULE_3__["SNComponentManager"]; });

/* harmony import */ var _Services_http_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Services/http_service */ "./lib/services/http_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNHttpService", function() { return _Services_http_service__WEBPACK_IMPORTED_MODULE_4__["SNHttpService"]; });

/* harmony import */ var _Services_model_manager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Services/model_manager */ "./lib/services/model_manager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNModelManager", function() { return _Services_model_manager__WEBPACK_IMPORTED_MODULE_5__["SNModelManager"]; });

/* harmony import */ var _Services_singleton_manager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @Services/singleton_manager */ "./lib/services/singleton_manager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNSingletonManager", function() { return _Services_singleton_manager__WEBPACK_IMPORTED_MODULE_6__["SNSingletonManager"]; });

/* harmony import */ var _Services_actions_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @Services/actions_service */ "./lib/services/actions_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNActionsService", function() { return _Services_actions_service__WEBPACK_IMPORTED_MODULE_7__["SNActionsService"]; });

/* harmony import */ var _Lib_migration_migration_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @Lib/migration/migration_service */ "./lib/migration/migration_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNMigrationService", function() { return _Lib_migration_migration_service__WEBPACK_IMPORTED_MODULE_8__["SNMigrationService"]; });

/* harmony import */ var _Services_protocol_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @Services/protocol_service */ "./lib/services/protocol_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNProtocolService", function() { return _Services_protocol_service__WEBPACK_IMPORTED_MODULE_9__["SNProtocolService"]; });

/* harmony import */ var _Services_history_history_manager__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @Services/history/history_manager */ "./lib/services/history/history_manager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNHistoryManager", function() { return _Services_history_history_manager__WEBPACK_IMPORTED_MODULE_10__["SNHistoryManager"]; });

/* harmony import */ var _Services_privileges_privileges_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @Services/privileges/privileges_service */ "./lib/services/privileges/privileges_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNPrivilegesService", function() { return _Services_privileges_privileges_service__WEBPACK_IMPORTED_MODULE_11__["SNPrivilegesService"]; });

/* harmony import */ var _Services_key_manager__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @Services/key_manager */ "./lib/services/key_manager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNKeyManager", function() { return _Services_key_manager__WEBPACK_IMPORTED_MODULE_12__["SNKeyManager"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "KEY_MODE_ROOT_KEY_NONE", function() { return _Services_key_manager__WEBPACK_IMPORTED_MODULE_12__["KEY_MODE_ROOT_KEY_NONE"]; });

/* harmony import */ var _Services_items_key_manager__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @Services/items_key_manager */ "./lib/services/items_key_manager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ItemsKeyManager", function() { return _Services_items_key_manager__WEBPACK_IMPORTED_MODULE_13__["ItemsKeyManager"]; });

/* harmony import */ var _Services_sync_events__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @Services/sync/events */ "./lib/services/sync/events.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SyncEvents", function() { return _Services_sync_events__WEBPACK_IMPORTED_MODULE_14__["SyncEvents"]; });

/* harmony import */ var _Services_sync_sync_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @Services/sync/sync_service */ "./lib/services/sync/sync_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNSyncManager", function() { return _Services_sync_sync_service__WEBPACK_IMPORTED_MODULE_15__["SNSyncManager"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SyncModes", function() { return _Services_sync_sync_service__WEBPACK_IMPORTED_MODULE_15__["SyncModes"]; });

/* harmony import */ var _Services_device_auth_device_auth_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @Services/device_auth/device_auth_service */ "./lib/services/device_auth/device_auth_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeviceAuthService", function() { return _Services_device_auth_device_auth_service__WEBPACK_IMPORTED_MODULE_18__["DeviceAuthService"]; });

/* harmony import */ var _Services_storage_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @Services/storage_service */ "./lib/services/storage_service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SNStorageService", function() { return _Services_storage_service__WEBPACK_IMPORTED_MODULE_17__["SNStorageService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StorageEncryptionPolicies", function() { return _Services_storage_service__WEBPACK_IMPORTED_MODULE_17__["StorageEncryptionPolicies"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StoragePersistencePolicies", function() { return _Services_storage_service__WEBPACK_IMPORTED_MODULE_17__["StoragePersistencePolicies"]; });




















/***/ }),

/***/ "./lib/services/items_key_manager.js":
/*!*******************************************!*\
  !*** ./lib/services/items_key_manager.js ***!
  \*******************************************/
/*! exports provided: ItemsKeyManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ItemsKeyManager", function() { return ItemsKeyManager; });
/* harmony import */ var _Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/services/pure_service */ "./lib/services/pure_service.js");
/* harmony import */ var _Lib_events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Lib/events */ "./lib/events.js");
/* harmony import */ var _Services_key_manager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Services/key_manager */ "./lib/services/key_manager.js");
/* harmony import */ var _Models__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Models */ "./lib/models/index.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Protocol_versions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Protocol/versions */ "./lib/protocol/versions.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }







/** The last protocol version to not use root-key based items keys */

var LAST_NONROOT_ITEMS_KEY_VERSION = _Protocol_versions__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V003;
var ItemsKeyManager =
/*#__PURE__*/
function (_PureService) {
  _inherits(ItemsKeyManager, _PureService);

  function ItemsKeyManager(_ref) {
    var _this;

    var syncService = _ref.syncService,
        modelManager = _ref.modelManager,
        protocolService = _ref.protocolService;

    _classCallCheck(this, ItemsKeyManager);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(ItemsKeyManager).call(this));
    _this.syncService = syncService;
    _this.modelManager = modelManager;
    _this.protocolService = protocolService;
    _this.keyObservers = [];

    _this.registerSyncObserver();

    _this.modelManager.addMappingObserver([_Models__WEBPACK_IMPORTED_MODULE_3__["ContentTypes"].ItemsKey], function _callee() {
      return regeneratorRuntime.async(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return regeneratorRuntime.awrap(_this.notifyObserversOfChange());

            case 2:
            case "end":
              return _context.stop();
          }
        }
      });
    });

    return _this;
  }
  /** @public */


  _createClass(ItemsKeyManager, [{
    key: "setKeyManager",
    value: function setKeyManager(keyManager) {
      this.keyManager = keyManager;
    }
    /** @public */

  }, {
    key: "addItemsKeyChangeObserver",
    value: function addItemsKeyChangeObserver(callback) {
      var _this2 = this;

      this.keyObservers.push(callback);
      return function () {
        Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_4__["removeFromArray"])(_this2.keyObservers, callback);
      };
    }
  }, {
    key: "notifyObserversOfChange",
    value: function notifyObserversOfChange() {
      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, observer;

      return regeneratorRuntime.async(function notifyObserversOfChange$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context2.prev = 3;
              _iterator = this.keyObservers[Symbol.iterator]();

            case 5:
              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                _context2.next = 12;
                break;
              }

              observer = _step.value;
              _context2.next = 9;
              return regeneratorRuntime.awrap(observer());

            case 9:
              _iteratorNormalCompletion = true;
              _context2.next = 5;
              break;

            case 12:
              _context2.next = 18;
              break;

            case 14:
              _context2.prev = 14;
              _context2.t0 = _context2["catch"](3);
              _didIteratorError = true;
              _iteratorError = _context2.t0;

            case 18:
              _context2.prev = 18;
              _context2.prev = 19;

              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }

            case 21:
              _context2.prev = 21;

              if (!_didIteratorError) {
                _context2.next = 24;
                break;
              }

              throw _iteratorError;

            case 24:
              return _context2.finish(21);

            case 25:
              return _context2.finish(18);

            case 26:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this, [[3, 14, 18, 26], [19,, 21, 25]]);
    }
    /** @private */

  }, {
    key: "registerSyncObserver",
    value: function registerSyncObserver() {
      var _this3 = this;

      this.syncService.addEventObserver(function _callee2(eventName) {
        return regeneratorRuntime.async(function _callee2$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (!(eventName === _Lib_events__WEBPACK_IMPORTED_MODULE_1__["SyncEvents"].FullSyncCompleted)) {
                  _context3.next = 3;
                  break;
                }

                _context3.next = 3;
                return regeneratorRuntime.awrap(_this3.handleFullSyncCompletion());

              case 3:
                if (!(eventName === _Lib_events__WEBPACK_IMPORTED_MODULE_1__["SyncEvents"].DownloadFirstSyncCompleted)) {
                  _context3.next = 6;
                  break;
                }

                _context3.next = 6;
                return regeneratorRuntime.awrap(_this3.handleDownloadFirstSyncCompletion());

              case 6:
              case "end":
                return _context3.stop();
            }
          }
        });
      });
    }
    /** 
     * When a download-first sync completes, it means we've completed a (potentially multipage)
     * sync where we only downloaded what the server had before uploading anything. We will be
     * allowed to make local accomadations here before the server begins with the upload
     * part of the sync (automatically runs after download-first sync completes).
     * We use this to see if the server has any default itemsKeys, and if so, allows us to 
     * delete any never-synced items keys we have here locally.
     */

  }, {
    key: "handleDownloadFirstSyncCompletion",
    value: function handleDownloadFirstSyncCompletion() {
      var allItemsKeys, neverSynced, defaultSyncedKey, hasSyncedItemsKey, rootKey, toDelete;
      return regeneratorRuntime.async(function handleDownloadFirstSyncCompletion$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              /**
              * Find items keys with null or epoch updated_at value, indicating
              * that they haven't been synced yet.
              */
              allItemsKeys = this.allItemsKeys;
              neverSynced = allItemsKeys.filter(function (key) {
                return key.neverSynced;
              });
              /**
              * Find isDefault items key that have been previously synced.
              * If we find one, this means we can delete any non-synced keys.
              */

              defaultSyncedKey = allItemsKeys.find(function (key) {
                return !key.neverSynced && key.isDefault;
              });
              hasSyncedItemsKey = !Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_4__["isNullOrUndefined"])(defaultSyncedKey);

              if (!hasSyncedItemsKey) {
                _context4.next = 9;
                break;
              }

              _context4.next = 7;
              return regeneratorRuntime.awrap(this.modelManager.setItemsToBeDeleted(neverSynced));

            case 7:
              _context4.next = 20;
              break;

            case 9:
              _context4.next = 11;
              return regeneratorRuntime.awrap(this.keyManager.getRootKey());

            case 11:
              rootKey = _context4.sent;

              if (!rootKey) {
                _context4.next = 20;
                break;
              }

              /** If neverSynced.version != rootKey.version, delete. */
              toDelete = neverSynced.filter(function (itemsKey) {
                return itemsKey.version !== rootKey.version;
              });

              if (!(toDelete.length > 0)) {
                _context4.next = 17;
                break;
              }

              _context4.next = 17;
              return regeneratorRuntime.awrap(this.modelManager.setItemsToBeDeleted(toDelete));

            case 17:
              if (!(allItemsKeys.length === 0)) {
                _context4.next = 20;
                break;
              }

              _context4.next = 20;
              return regeneratorRuntime.awrap(this.createNewDefaultItemsKey());

            case 20:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "handleFullSyncCompletion",
    value: function handleFullSyncCompletion() {
      var currentItemsKey;
      return regeneratorRuntime.async(function handleFullSyncCompletion$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              /** Always create a new items key after full sync, if no items key is found */
              currentItemsKey = this.getDefaultItemsKey();

              if (currentItemsKey) {
                _context5.next = 6;
                break;
              }

              _context5.next = 4;
              return regeneratorRuntime.awrap(this.createNewDefaultItemsKey());

            case 4:
              if (!(this.keyManager.keyMode === _Services_key_manager__WEBPACK_IMPORTED_MODULE_2__["KEY_MODE_WRAPPER_ONLY"])) {
                _context5.next = 6;
                break;
              }

              return _context5.abrupt("return", this.syncService.repersistAllItems());

            case 6:
            case "end":
              return _context5.stop();
          }
        }
      }, null, this);
    }
    /**
     * @returns All SN|ItemsKey objects synced to the account.
     */

  }, {
    key: "itemsKeyForPayload",
    value: function itemsKeyForPayload(payload) {
      return this.allItemsKeys.find(function (key) {
        return key.uuid === payload.items_key_id;
      });
    }
    /**
     * @returns The SNItemsKey object to use to encrypt new or updated items.
     */

  }, {
    key: "getDefaultItemsKey",
    value: function getDefaultItemsKey() {
      if (this.allItemsKeys.length === 1) {
        return this.allItemsKeys[0];
      }

      return this.allItemsKeys.find(function (key) {
        return key.isDefault;
      });
    }
    /**
     * @public
     * When the root key changes (non-null only), we must re-encrypt all items
     * keys with this new root key (by simply re-syncing).
     */

  }, {
    key: "reencryptItemsKeys",
    value: function reencryptItemsKeys() {
      var itemsKeys;
      return regeneratorRuntime.async(function reencryptItemsKeys$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              itemsKeys = this.allItemsKeys;

              if (!(itemsKeys.length > 0)) {
                _context6.next = 4;
                break;
              }

              _context6.next = 4;
              return regeneratorRuntime.awrap(this.modelManager.setItemsDirty(itemsKeys));

            case 4:
            case "end":
              return _context6.stop();
          }
        }
      }, null, this);
    }
    /**
     * When migrating from non-SNItemsKey architecture, many items will not have a relationship with any key object.
     * For those items, we can be sure that only 1 key object will correspond to that protocol version.
     * @returns The SNItemsKey object to decrypt items encrypted with previous protocol version.
     */

  }, {
    key: "defaultItemsKeyForItemVersion",
    value: function defaultItemsKeyForItemVersion(version) {
      return regeneratorRuntime.async(function defaultItemsKeyForItemVersion$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              return _context7.abrupt("return", this.allItemsKeys.find(function (key) {
                return key.version === version;
              }));

            case 1:
            case "end":
              return _context7.stop();
          }
        }
      }, null, this);
    }
    /**
     * @public
     * Creates a new random SNItemsKey to use for item encryption, and adds it to model management.
     * Consumer must call sync. If the protocol version <= 003, only one items key should be created,
     * and its .itemsKey value should be equal to the root key masterKey value.
     */

  }, {
    key: "createNewDefaultItemsKey",
    value: function createNewDefaultItemsKey() {
      var rootKey, operatorVersion, itemsKey, currentDefault, payload;
      return regeneratorRuntime.async(function createNewDefaultItemsKey$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              _context8.next = 2;
              return regeneratorRuntime.awrap(this.keyManager.getRootKey());

            case 2:
              rootKey = _context8.sent;
              operatorVersion = rootKey ? rootKey.version : this.protocolService.getLatestVersion();

              if (!(Object(_Protocol_versions__WEBPACK_IMPORTED_MODULE_5__["compareVersions"])(operatorVersion, LAST_NONROOT_ITEMS_KEY_VERSION) <= 0)) {
                _context8.next = 10;
                break;
              }

              /** Create root key based items key */
              itemsKey = _Models__WEBPACK_IMPORTED_MODULE_3__["SNItemsKey"].FromRaw({
                itemsKey: rootKey.masterKey,
                dataAuthenticationKey: rootKey.dataAuthenticationKey,
                version: operatorVersion
              });
              _context8.next = 8;
              return regeneratorRuntime.awrap(itemsKey.initUUID());

            case 8:
              _context8.next = 13;
              break;

            case 10:
              _context8.next = 12;
              return regeneratorRuntime.awrap(this.protocolService.operatorForVersion(operatorVersion).createItemsKey());

            case 12:
              itemsKey = _context8.sent;

            case 13:
              currentDefault = this.getDefaultItemsKey();

              if (!currentDefault) {
                _context8.next = 18;
                break;
              }

              currentDefault.content.isDefault = false;
              _context8.next = 18;
              return regeneratorRuntime.awrap(this.modelManager.setItemDirty(currentDefault));

            case 18:
              itemsKey.content.isDefault = true;
              payload = itemsKey.payloadRepresentation({
                override: {
                  dirty: true
                }
              });
              _context8.next = 22;
              return regeneratorRuntime.awrap(this.modelManager.mapPayloadToLocalItem({
                payload: payload
              }));

            case 22:
            case "end":
              return _context8.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "allItemsKeys",
    get: function get() {
      return this.modelManager.itemsKeys;
    }
  }]);

  return ItemsKeyManager;
}(_Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__["PureService"]);

/***/ }),

/***/ "./lib/services/key_manager.js":
/*!*************************************!*\
  !*** ./lib/services/key_manager.js ***!
  \*************************************/
/*! exports provided: KEY_MODE_ROOT_KEY_NONE, KEY_MODE_ROOT_KEY_ONLY, KEY_MODE_ROOT_KEY_PLUS_WRAPPER, KEY_MODE_WRAPPER_ONLY, SNKeyManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KEY_MODE_ROOT_KEY_NONE", function() { return KEY_MODE_ROOT_KEY_NONE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KEY_MODE_ROOT_KEY_ONLY", function() { return KEY_MODE_ROOT_KEY_ONLY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KEY_MODE_ROOT_KEY_PLUS_WRAPPER", function() { return KEY_MODE_ROOT_KEY_PLUS_WRAPPER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KEY_MODE_WRAPPER_ONLY", function() { return KEY_MODE_WRAPPER_ONLY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNKeyManager", function() { return SNKeyManager; });
/* harmony import */ var _Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/services/pure_service */ "./lib/services/pure_service.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Payloads__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads */ "./lib/protocol/payloads/index.js");
/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
/* harmony import */ var _Lib_storage_keys__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Lib/storage_keys */ "./lib/storage_keys.js");
/* harmony import */ var _Protocol__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Protocol */ "./lib/protocol/index.js");
/* harmony import */ var _Lib_services_storage_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @Lib/services/storage_service */ "./lib/services/storage_service.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }








/** i.e No account and no passcode */

var KEY_MODE_ROOT_KEY_NONE = 0;
/** i.e Account but no passcode */

var KEY_MODE_ROOT_KEY_ONLY = 1;
/** i.e Account plus passcode */

var KEY_MODE_ROOT_KEY_PLUS_WRAPPER = 2;
/** i.e No account, but passcode */

var KEY_MODE_WRAPPER_ONLY = 3;
var SNKeyManager =
/*#__PURE__*/
function (_PureService) {
  _inherits(SNKeyManager, _PureService);

  function SNKeyManager(_ref) {
    var _this;

    var modelManager = _ref.modelManager,
        storageService = _ref.storageService,
        protocolService = _ref.protocolService,
        itemsKeyManager = _ref.itemsKeyManager;

    _classCallCheck(this, SNKeyManager);

    if (!modelManager || !storageService || !protocolService || !itemsKeyManager) {
      throw 'Invalid KeyManager construction';
    }

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNKeyManager).call(this));
    _this.keyMode = KEY_MODE_ROOT_KEY_NONE;
    _this.protocolService = protocolService;
    _this.modelManager = modelManager;
    _this.storageService = storageService;
    _this.itemsKeyManager = itemsKeyManager;
    _this.keyObservers = [];
    /** Hide rootKey enumeration */

    Object.defineProperty(_assertThisInitialized(_this), 'rootKey', {
      enumerable: false,
      writable: true
    });
    return _this;
  }

  _createClass(SNKeyManager, [{
    key: "initialize",
    value: function initialize() {
      var wrappedRootKey, accountKeyParams, hasWrapper, hasRootKey;
      return regeneratorRuntime.async(function initialize$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return regeneratorRuntime.awrap(this.getWrappedRootKeyFromStorage());

            case 2:
              wrappedRootKey = _context.sent;
              _context.next = 5;
              return regeneratorRuntime.awrap(this.getAccountKeyParams());

            case 5:
              accountKeyParams = _context.sent;
              _context.next = 8;
              return regeneratorRuntime.awrap(this.hasRootKeyWrapper());

            case 8:
              hasWrapper = _context.sent;
              hasRootKey = !Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_1__["isNullOrUndefined"])(wrappedRootKey) || !Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_1__["isNullOrUndefined"])(accountKeyParams);

              if (!(hasWrapper && hasRootKey)) {
                _context.next = 14;
                break;
              }

              this.keyMode = KEY_MODE_ROOT_KEY_PLUS_WRAPPER;
              _context.next = 27;
              break;

            case 14:
              if (!(hasWrapper && !hasRootKey)) {
                _context.next = 18;
                break;
              }

              this.keyMode = KEY_MODE_WRAPPER_ONLY;
              _context.next = 27;
              break;

            case 18:
              if (!(!hasWrapper && hasRootKey)) {
                _context.next = 22;
                break;
              }

              this.keyMode = KEY_MODE_ROOT_KEY_ONLY;
              _context.next = 27;
              break;

            case 22:
              if (!(!hasWrapper && !hasRootKey)) {
                _context.next = 26;
                break;
              }

              this.keyMode = KEY_MODE_ROOT_KEY_NONE;
              _context.next = 27;
              break;

            case 26:
              throw 'Invalid key mode condition';

            case 27:
              if (!(this.keyMode === KEY_MODE_ROOT_KEY_ONLY)) {
                _context.next = 33;
                break;
              }

              _context.next = 30;
              return regeneratorRuntime.awrap(this.getRootKeyFromKeychain());

            case 30:
              this.rootKey = _context.sent;
              _context.next = 33;
              return regeneratorRuntime.awrap(this.notifyObserversOfChange());

            case 33:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "hasPasscode",
    value: function hasPasscode() {
      return this.keyMode === KEY_MODE_WRAPPER_ONLY || this.keyMode === KEY_MODE_ROOT_KEY_PLUS_WRAPPER;
    }
    /**
     * @param callback  A function that takes in a content type to call back when root
     *                  key or wrapper status has changed.
     */

  }, {
    key: "onStatusChange",
    value: function onStatusChange(callback) {
      var _this2 = this;

      this.keyObservers.push(callback);
      return function () {
        Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_1__["removeFromArray"])(_this2.keyObservers, callback);
      };
    }
  }, {
    key: "notifyObserversOfChange",
    value: function notifyObserversOfChange() {
      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, observer;

      return regeneratorRuntime.async(function notifyObserversOfChange$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context2.prev = 3;
              _iterator = this.keyObservers[Symbol.iterator]();

            case 5:
              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                _context2.next = 12;
                break;
              }

              observer = _step.value;
              _context2.next = 9;
              return regeneratorRuntime.awrap(observer());

            case 9:
              _iteratorNormalCompletion = true;
              _context2.next = 5;
              break;

            case 12:
              _context2.next = 18;
              break;

            case 14:
              _context2.prev = 14;
              _context2.t0 = _context2["catch"](3);
              _didIteratorError = true;
              _iteratorError = _context2.t0;

            case 18:
              _context2.prev = 18;
              _context2.prev = 19;

              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }

            case 21:
              _context2.prev = 21;

              if (!_didIteratorError) {
                _context2.next = 24;
                break;
              }

              throw _iteratorError;

            case 24:
              return _context2.finish(21);

            case 25:
              return _context2.finish(18);

            case 26:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this, [[3, 14, 18, 26], [19,, 21, 25]]);
    }
    /**
     * Dynamically set a DeviceInterface object
     */

  }, {
    key: "setDeviceInterface",
    value: function setDeviceInterface(deviceInterface) {
      this.deviceInterface = deviceInterface;
    }
    /** @private */

  }, {
    key: "getRootKeyFromKeychain",
    value: function getRootKeyFromKeychain() {
      var rawKey, rootKey;
      return regeneratorRuntime.async(function getRootKeyFromKeychain$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return regeneratorRuntime.awrap(this.deviceInterface.getKeychainValue());

            case 2:
              rawKey = _context3.sent;

              if (!Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_1__["isNullOrUndefined"])(rawKey)) {
                _context3.next = 5;
                break;
              }

              return _context3.abrupt("return", null);

            case 5:
              _context3.next = 7;
              return regeneratorRuntime.awrap(_Protocol__WEBPACK_IMPORTED_MODULE_5__["SNRootKey"].Create({
                content: rawKey
              }));

            case 7:
              rootKey = _context3.sent;
              return _context3.abrupt("return", rootKey);

            case 9:
            case "end":
              return _context3.stop();
          }
        }
      }, null, this);
    }
    /** @private */

  }, {
    key: "saveRootKeyToKeychain",
    value: function saveRootKeyToKeychain() {
      var rawKey;
      return regeneratorRuntime.async(function saveRootKeyToKeychain$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              if (!Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_1__["isNullOrUndefined"])(this.rootKey)) {
                _context4.next = 2;
                break;
              }

              throw 'Attempting to non-existent root key to the keychain.';

            case 2:
              if (!(this.keyMode !== KEY_MODE_ROOT_KEY_ONLY)) {
                _context4.next = 4;
                break;
              }

              throw 'Should not be persisting wrapped key to keychain.';

            case 4:
              rawKey = this.rootKey.getPersistableValue();
              _context4.next = 7;
              return regeneratorRuntime.awrap(this.deviceInterface.setKeychainValue(rawKey));

            case 7:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this);
    }
    /**
     * @public
     * Returns true if a root key wrapper (passcode) is configured.
     */

  }, {
    key: "hasRootKeyWrapper",
    value: function hasRootKeyWrapper() {
      var wrapper;
      return regeneratorRuntime.async(function hasRootKeyWrapper$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return regeneratorRuntime.awrap(this.getRootKeyWrapperKeyParams());

            case 2:
              wrapper = _context5.sent;
              return _context5.abrupt("return", !Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_1__["isNullOrUndefined"])(wrapper));

            case 4:
            case "end":
              return _context5.stop();
          }
        }
      }, null, this);
    }
    /**
    * @public
    * Returns true if the root key has not yet been unwrapped (passcode locked).
    */

  }, {
    key: "rootKeyNeedsUnwrapping",
    value: function rootKeyNeedsUnwrapping() {
      return regeneratorRuntime.async(function rootKeyNeedsUnwrapping$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return regeneratorRuntime.awrap(this.hasRootKeyWrapper());

            case 2:
              _context6.t0 = _context6.sent;

              if (!_context6.t0) {
                _context6.next = 5;
                break;
              }

              _context6.t0 = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_1__["isNullOrUndefined"])(this.rootKey);

            case 5:
              return _context6.abrupt("return", _context6.t0);

            case 6:
            case "end":
              return _context6.stop();
          }
        }
      }, null, this);
    }
    /**
     * @public
     * @returns  Key params object containing root key wrapper key params
    */

  }, {
    key: "getRootKeyWrapperKeyParams",
    value: function getRootKeyWrapperKeyParams() {
      var rawKeyParams;
      return regeneratorRuntime.async(function getRootKeyWrapperKeyParams$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              _context7.next = 2;
              return regeneratorRuntime.awrap(this.storageService.getValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_4__["StorageKeys"].RootKeyWrapperKeyParams, _Lib_services_storage_service__WEBPACK_IMPORTED_MODULE_6__["StorageValueModes"].Nonwrapped));

            case 2:
              rawKeyParams = _context7.sent;

              if (rawKeyParams) {
                _context7.next = 5;
                break;
              }

              return _context7.abrupt("return", null);

            case 5:
              return _context7.abrupt("return", this.protocolService.createKeyParams(rawKeyParams));

            case 6:
            case "end":
              return _context7.stop();
          }
        }
      }, null, this);
    }
    /**
     * @private
     * @returns  Plain object containing persisted wrapped (encrypted) root key
    */

  }, {
    key: "getWrappedRootKeyFromStorage",
    value: function getWrappedRootKeyFromStorage() {
      return regeneratorRuntime.async(function getWrappedRootKeyFromStorage$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              return _context8.abrupt("return", this.storageService.getValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_4__["StorageKeys"].WrappedRootKey, _Lib_services_storage_service__WEBPACK_IMPORTED_MODULE_6__["StorageValueModes"].Nonwrapped));

            case 1:
            case "end":
              return _context8.stop();
          }
        }
      }, null, this);
    }
    /**
     * @public
     * @returns  The keyParams saved to disk for root key.
     */

  }, {
    key: "getRootKeyParams",
    value: function getRootKeyParams() {
      return regeneratorRuntime.async(function getRootKeyParams$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              if (!(this.keyMode === KEY_MODE_WRAPPER_ONLY)) {
                _context9.next = 4;
                break;
              }

              return _context9.abrupt("return", this.getRootKeyWrapperKeyParams());

            case 4:
              if (!(this.keyMode === KEY_MODE_ROOT_KEY_ONLY || this.keyMode === KEY_MODE_ROOT_KEY_PLUS_WRAPPER)) {
                _context9.next = 8;
                break;
              }

              return _context9.abrupt("return", this.getAccountKeyParams());

            case 8:
              throw "Unhandled key mode for getRootKeyParams ".concat(this.keyMode);

            case 9:
            case "end":
              return _context9.stop();
          }
        }
      }, null, this);
    }
    /**
     * @public
     * @returns  getRootKeyParams may return different params based on different
     *           keyMode. This function however strictly returns only account params.
     */

  }, {
    key: "getAccountKeyParams",
    value: function getAccountKeyParams() {
      var rawKeyParams;
      return regeneratorRuntime.async(function getAccountKeyParams$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              _context10.next = 2;
              return regeneratorRuntime.awrap(this.storageService.getValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_4__["StorageKeys"].RootKeyParams, _Lib_services_storage_service__WEBPACK_IMPORTED_MODULE_6__["StorageValueModes"].Nonwrapped));

            case 2:
              rawKeyParams = _context10.sent;

              if (rawKeyParams) {
                _context10.next = 5;
                break;
              }

              return _context10.abrupt("return", null);

            case 5:
              return _context10.abrupt("return", this.protocolService.createKeyParams(rawKeyParams));

            case 6:
            case "end":
              return _context10.stop();
          }
        }
      }, null, this);
    }
    /**
     * @public
     * We know a wrappingKey is correct if it correctly decrypts
     * wrapped root key.
     */

  }, {
    key: "validateWrappingKey",
    value: function validateWrappingKey(wrappingKey) {
      var wrappedRootKey, wrappedKeyPayload, decrypted;
      return regeneratorRuntime.async(function validateWrappingKey$(_context11) {
        while (1) {
          switch (_context11.prev = _context11.next) {
            case 0:
              _context11.next = 2;
              return regeneratorRuntime.awrap(this.getWrappedRootKeyFromStorage());

            case 2:
              wrappedRootKey = _context11.sent;

              if (!(this.keyMode === KEY_MODE_WRAPPER_ONLY)) {
                _context11.next = 7;
                break;
              }

              return _context11.abrupt("return", this.storageService.canDecryptWithKey(wrappingKey));

            case 7:
              if (!(this.keyMode === KEY_MODE_ROOT_KEY_ONLY || this.keyMode === KEY_MODE_ROOT_KEY_PLUS_WRAPPER)) {
                _context11.next = 15;
                break;
              }

              /**
              * In these modes, storage is encrypted with account keys, and
              * account keys are encrypted with wrappingKey. Here we validate
              * by attempting to decrypt account keys.
              */
              wrappedKeyPayload = Object(_Payloads__WEBPACK_IMPORTED_MODULE_2__["CreateMaxPayloadFromAnyObject"])({
                object: wrappedRootKey
              });
              _context11.next = 11;
              return regeneratorRuntime.awrap(this.protocolService.payloadByDecryptingPayload({
                payload: wrappedKeyPayload,
                key: wrappingKey
              }));

            case 11:
              decrypted = _context11.sent;
              return _context11.abrupt("return", !decrypted.errorDecrypting);

            case 15:
              throw 'Unhandled case in validateWrappingKey';

            case 16:
            case "end":
              return _context11.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "computeWrappingKey",
    value: function computeWrappingKey(_ref2) {
      var passcode, keyParams, key;
      return regeneratorRuntime.async(function computeWrappingKey$(_context12) {
        while (1) {
          switch (_context12.prev = _context12.next) {
            case 0:
              passcode = _ref2.passcode;
              _context12.next = 3;
              return regeneratorRuntime.awrap(this.getRootKeyWrapperKeyParams());

            case 3:
              keyParams = _context12.sent;
              _context12.next = 6;
              return regeneratorRuntime.awrap(this.protocolService.computeRootKey({
                password: passcode,
                keyParams: keyParams
              }));

            case 6:
              key = _context12.sent;
              return _context12.abrupt("return", key);

            case 8:
            case "end":
              return _context12.stop();
          }
        }
      }, null, this);
    }
    /**
     * @public
     * Application interfaces must check to see if the root key requires unwrapping on load.
     * If so, they must generate the unwrapping key by getting our saved wrapping key keyParams.
     * After unwrapping, the root key is automatically loaded.
    */

  }, {
    key: "unwrapRootKey",
    value: function unwrapRootKey(_ref3) {
      var wrappingKey, wrappedKey, payload, decrypted;
      return regeneratorRuntime.async(function unwrapRootKey$(_context13) {
        while (1) {
          switch (_context13.prev = _context13.next) {
            case 0:
              wrappingKey = _ref3.wrappingKey;

              if (!(this.keyMode === KEY_MODE_WRAPPER_ONLY)) {
                _context13.next = 4;
                break;
              }

              this.rootKey = wrappingKey;
              return _context13.abrupt("return");

            case 4:
              if (!(this.keyMode !== KEY_MODE_ROOT_KEY_PLUS_WRAPPER)) {
                _context13.next = 6;
                break;
              }

              throw 'Invalid key mode condition for unwrapping.';

            case 6:
              _context13.next = 8;
              return regeneratorRuntime.awrap(this.getWrappedRootKeyFromStorage());

            case 8:
              wrappedKey = _context13.sent;
              payload = Object(_Payloads__WEBPACK_IMPORTED_MODULE_2__["CreateMaxPayloadFromAnyObject"])({
                object: wrappedKey
              });
              _context13.next = 12;
              return regeneratorRuntime.awrap(this.protocolService.payloadByDecryptingPayload({
                payload: payload,
                key: wrappingKey
              }));

            case 12:
              decrypted = _context13.sent;

              if (!decrypted.errorDecrypting) {
                _context13.next = 17;
                break;
              }

              throw 'Unable to decrypt root key with provided wrapping key.';

            case 17:
              _context13.next = 19;
              return regeneratorRuntime.awrap(_Protocol__WEBPACK_IMPORTED_MODULE_5__["SNRootKey"].Create({
                uuid: decrypted.uuid,
                content: decrypted.content
              }));

            case 19:
              this.rootKey = _context13.sent;
              _context13.next = 22;
              return regeneratorRuntime.awrap(this.notifyObserversOfChange());

            case 22:
            case "end":
              return _context13.stop();
          }
        }
      }, null, this);
    }
    /**
     * @public
     * Encrypts rootKey and saves it in storage instead of keychain, and then
     * clears keychain. This is because we don't want to store large encrypted
     * payloads in the keychain. If the root key is not wrapped, it is stored
     * in plain form in the user's secure keychain.
    */

  }, {
    key: "setNewRootKeyWrapper",
    value: function setNewRootKeyWrapper(_ref4) {
      var wrappingKey, keyParams;
      return regeneratorRuntime.async(function setNewRootKeyWrapper$(_context14) {
        while (1) {
          switch (_context14.prev = _context14.next) {
            case 0:
              wrappingKey = _ref4.wrappingKey, keyParams = _ref4.keyParams;

              if (!(this.keyMode === KEY_MODE_ROOT_KEY_NONE)) {
                _context14.next = 5;
                break;
              }

              this.keyMode = KEY_MODE_WRAPPER_ONLY;
              _context14.next = 10;
              break;

            case 5:
              if (!(this.keyMode === KEY_MODE_ROOT_KEY_ONLY)) {
                _context14.next = 9;
                break;
              }

              this.keyMode = KEY_MODE_ROOT_KEY_PLUS_WRAPPER;
              _context14.next = 10;
              break;

            case 9:
              throw 'Attempting to set wrapper on already wrapped key.';

            case 10:
              _context14.next = 12;
              return regeneratorRuntime.awrap(this.deviceInterface.clearKeychainValue());

            case 12:
              if (!(this.keyMode === KEY_MODE_WRAPPER_ONLY || this.keyMode === KEY_MODE_ROOT_KEY_PLUS_WRAPPER)) {
                _context14.next = 26;
                break;
              }

              if (!(this.keyMode === KEY_MODE_WRAPPER_ONLY)) {
                _context14.next = 19;
                break;
              }

              this.rootKey = wrappingKey;
              _context14.next = 17;
              return regeneratorRuntime.awrap(this.itemsKeyManager.reencryptItemsKeys());

            case 17:
              _context14.next = 21;
              break;

            case 19:
              _context14.next = 21;
              return regeneratorRuntime.awrap(this.persistWrappedRootKey({
                wrappingKey: wrappingKey
              }));

            case 21:
              _context14.next = 23;
              return regeneratorRuntime.awrap(this.storageService.setValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_4__["StorageKeys"].RootKeyWrapperKeyParams, keyParams.getPortableValue(), _Lib_services_storage_service__WEBPACK_IMPORTED_MODULE_6__["StorageValueModes"].Nonwrapped));

            case 23:
              _context14.next = 25;
              return regeneratorRuntime.awrap(this.notifyObserversOfChange());

            case 25:
              return _context14.abrupt("return");

            case 26:
              throw 'Invalid keyMode on setNewRootKeyWrapper';

            case 27:
            case "end":
              return _context14.stop();
          }
        }
      }, null, this);
    }
    /** @private */

  }, {
    key: "persistWrappedRootKey",
    value: function persistWrappedRootKey(_ref5) {
      var wrappingKey, payload, wrappedKey;
      return regeneratorRuntime.async(function persistWrappedRootKey$(_context15) {
        while (1) {
          switch (_context15.prev = _context15.next) {
            case 0:
              wrappingKey = _ref5.wrappingKey;
              payload = Object(_Payloads__WEBPACK_IMPORTED_MODULE_2__["CreateMaxPayloadFromAnyObject"])({
                object: this.rootKey,
                override: {
                  content: this.rootKey.getPersistableValue()
                }
              });
              _context15.next = 4;
              return regeneratorRuntime.awrap(this.protocolService.payloadByEncryptingPayload({
                payload: payload,
                key: wrappingKey,
                intent: _Protocol__WEBPACK_IMPORTED_MODULE_5__["EncryptionIntents"].LocalStorageEncrypted
              }));

            case 4:
              wrappedKey = _context15.sent;
              _context15.next = 7;
              return regeneratorRuntime.awrap(this.storageService.setValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_4__["StorageKeys"].WrappedRootKey, wrappedKey, _Lib_services_storage_service__WEBPACK_IMPORTED_MODULE_6__["StorageValueModes"].Nonwrapped));

            case 7:
            case "end":
              return _context15.stop();
          }
        }
      }, null, this);
    }
    /**
     * @public
     * Removes root key wrapper from local storage and stores root keys bare in secure keychain.
     */

  }, {
    key: "removeRootKeyWrapper",
    value: function removeRootKeyWrapper() {
      return regeneratorRuntime.async(function removeRootKeyWrapper$(_context16) {
        while (1) {
          switch (_context16.prev = _context16.next) {
            case 0:
              if (!(this.keyMode !== KEY_MODE_WRAPPER_ONLY && this.keyMode !== KEY_MODE_ROOT_KEY_PLUS_WRAPPER)) {
                _context16.next = 2;
                break;
              }

              throw 'Attempting to remove root key wrapper on unwrapped key.';

            case 2:
              if (this.keyMode === KEY_MODE_WRAPPER_ONLY) {
                this.keyMode = KEY_MODE_ROOT_KEY_NONE;
                this.rootKey = null;
              } else if (this.keyMode === KEY_MODE_ROOT_KEY_PLUS_WRAPPER) {
                this.keyMode = KEY_MODE_ROOT_KEY_ONLY;
              }

              _context16.next = 5;
              return regeneratorRuntime.awrap(this.storageService.removeValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_4__["StorageKeys"].WrappedRootKey, _Lib_services_storage_service__WEBPACK_IMPORTED_MODULE_6__["StorageValueModes"].Nonwrapped));

            case 5:
              _context16.next = 7;
              return regeneratorRuntime.awrap(this.storageService.removeValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_4__["StorageKeys"].RootKeyWrapperKeyParams, _Lib_services_storage_service__WEBPACK_IMPORTED_MODULE_6__["StorageValueModes"].Nonwrapped));

            case 7:
              if (!(this.keyMode === KEY_MODE_ROOT_KEY_ONLY)) {
                _context16.next = 10;
                break;
              }

              _context16.next = 10;
              return regeneratorRuntime.awrap(this.saveRootKeyToKeychain());

            case 10:
              _context16.next = 12;
              return regeneratorRuntime.awrap(this.notifyObserversOfChange());

            case 12:
            case "end":
              return _context16.stop();
          }
        }
      }, null, this);
    }
    /**
     * @public
     * The root key is distinct from regular keys and are only saved locally in the keychain,
     * in non-item form. Applications set root key on sign in, register, or password change.
     * @param key  A SNRootKey object.
     */

  }, {
    key: "setNewRootKey",
    value: function setNewRootKey(_ref6) {
      var key, keyParams, previousRootKey;
      return regeneratorRuntime.async(function setNewRootKey$(_context17) {
        while (1) {
          switch (_context17.prev = _context17.next) {
            case 0:
              key = _ref6.key, keyParams = _ref6.keyParams;

              if (key.isRootKey) {
                _context17.next = 3;
                break;
              }

              throw "Root key must be a ".concat(_Models_content_types__WEBPACK_IMPORTED_MODULE_3__["ContentTypes"].RootKey, " object.");

            case 3:
              if (keyParams) {
                _context17.next = 5;
                break;
              }

              throw 'keyParams must be supplied if setting root key.';

            case 5:
              if (!(this.keyMode === KEY_MODE_WRAPPER_ONLY)) {
                _context17.next = 9;
                break;
              }

              this.keyMode = KEY_MODE_ROOT_KEY_PLUS_WRAPPER;
              _context17.next = 17;
              break;

            case 9:
              if (!(this.keyMode === KEY_MODE_ROOT_KEY_NONE)) {
                _context17.next = 13;
                break;
              }

              this.keyMode = KEY_MODE_ROOT_KEY_ONLY;
              _context17.next = 17;
              break;

            case 13:
              if (!(this.keyMode === KEY_MODE_ROOT_KEY_ONLY || this.keyMode === KEY_MODE_ROOT_KEY_PLUS_WRAPPER)) {
                _context17.next = 16;
                break;
              }

              _context17.next = 17;
              break;

            case 16:
              throw "Unhandled key mode for setNewRootKey ".concat(this.keyMode);

            case 17:
              previousRootKey = this.rootKey;
              this.rootKey = key;

              if (!(previousRootKey === key)) {
                _context17.next = 21;
                break;
              }

              throw 'Attempting to set root key as same current value.';

            case 21:
              _context17.next = 23;
              return regeneratorRuntime.awrap(this.storageService.setValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_4__["StorageKeys"].RootKeyParams, keyParams.getPortableValue(), _Lib_services_storage_service__WEBPACK_IMPORTED_MODULE_6__["StorageValueModes"].Nonwrapped));

            case 23:
              if (!(this.keyMode === KEY_MODE_ROOT_KEY_ONLY)) {
                _context17.next = 28;
                break;
              }

              _context17.next = 26;
              return regeneratorRuntime.awrap(this.saveRootKeyToKeychain());

            case 26:
              _context17.next = 31;
              break;

            case 28:
              if (!(this.keyMode === KEY_MODE_ROOT_KEY_PLUS_WRAPPER)) {
                _context17.next = 31;
                break;
              }

              _context17.next = 31;
              return regeneratorRuntime.awrap(this.persistWrappedRootKey({
                wrappingKey: previousRootKey
              }));

            case 31:
              _context17.next = 33;
              return regeneratorRuntime.awrap(this.notifyObserversOfChange(_Models_content_types__WEBPACK_IMPORTED_MODULE_3__["ContentTypes"].RootKey));

            case 33:
              _context17.next = 35;
              return regeneratorRuntime.awrap(this.itemsKeyManager.reencryptItemsKeys());

            case 35:
            case "end":
              return _context17.stop();
          }
        }
      }, null, this);
    }
    /**
     * @public
     * @returns  SNRootKey object
     */

  }, {
    key: "getRootKey",
    value: function getRootKey() {
      return regeneratorRuntime.async(function getRootKey$(_context18) {
        while (1) {
          switch (_context18.prev = _context18.next) {
            case 0:
              return _context18.abrupt("return", this.rootKey);

            case 1:
            case "end":
              return _context18.stop();
          }
        }
      }, null, this);
    }
    /**
     * @public
     * Deletes root key and wrapper from keychain. Used when signing out of application.
     */

  }, {
    key: "clearLocalKeyState",
    value: function clearLocalKeyState() {
      return regeneratorRuntime.async(function clearLocalKeyState$(_context19) {
        while (1) {
          switch (_context19.prev = _context19.next) {
            case 0:
              _context19.next = 2;
              return regeneratorRuntime.awrap(this.deviceInterface.clearKeychainValue());

            case 2:
              _context19.next = 4;
              return regeneratorRuntime.awrap(this.storageService.removeValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_4__["StorageKeys"].WrappedRootKey, _Lib_services_storage_service__WEBPACK_IMPORTED_MODULE_6__["StorageValueModes"].Nonwrapped));

            case 4:
              _context19.next = 6;
              return regeneratorRuntime.awrap(this.storageService.removeValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_4__["StorageKeys"].RootKeyWrapperKeyParams, _Lib_services_storage_service__WEBPACK_IMPORTED_MODULE_6__["StorageValueModes"].Nonwrapped));

            case 6:
              _context19.next = 8;
              return regeneratorRuntime.awrap(this.storageService.removeValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_4__["StorageKeys"].RootKeyParams, _Lib_services_storage_service__WEBPACK_IMPORTED_MODULE_6__["StorageValueModes"].Nonwrapped));

            case 8:
              this.keyMode = KEY_MODE_ROOT_KEY_NONE;
              this.rootKey = null;
              _context19.next = 12;
              return regeneratorRuntime.awrap(this.notifyObserversOfChange());

            case 12:
            case "end":
              return _context19.stop();
          }
        }
      }, null, this);
    }
    /**
     * @param password {string}: The password string to generate a root key from.
     * @returns key|null: Key if valid password, otherwise null.
     */

  }, {
    key: "validateAccountPassword",
    value: function validateAccountPassword(password) {
      var keyParams, key, success;
      return regeneratorRuntime.async(function validateAccountPassword$(_context20) {
        while (1) {
          switch (_context20.prev = _context20.next) {
            case 0:
              _context20.next = 2;
              return regeneratorRuntime.awrap(this.getRootKeyParams());

            case 2:
              keyParams = _context20.sent;
              _context20.next = 5;
              return regeneratorRuntime.awrap(this.protocolService.computeRootKey({
                password: password,
                keyParams: keyParams
              }));

            case 5:
              key = _context20.sent;
              _context20.next = 8;
              return regeneratorRuntime.awrap(this.protocolService.compareRootKeys(key, this.rootKey));

            case 8:
              success = _context20.sent;
              return _context20.abrupt("return", success ? key : null);

            case 10:
            case "end":
              return _context20.stop();
          }
        }
      }, null, this);
    }
    /**
     * @param passcode {string}: The passcode string to generate a root key from.
     * @returns {boolean}: Whether the input passcode generates wrapping keys equal
     * to the ones saved.
     */

  }, {
    key: "validatePasscode",
    value: function validatePasscode(passcode) {
      var keyParams, key;
      return regeneratorRuntime.async(function validatePasscode$(_context21) {
        while (1) {
          switch (_context21.prev = _context21.next) {
            case 0:
              _context21.next = 2;
              return regeneratorRuntime.awrap(this.getRootKeyWrapperKeyParams());

            case 2:
              keyParams = _context21.sent;
              _context21.next = 5;
              return regeneratorRuntime.awrap(this.protocolService.computeRootKey({
                password: passcode,
                keyParams: keyParams
              }));

            case 5:
              key = _context21.sent;
              return _context21.abrupt("return", this.validateWrappingKey(key));

            case 7:
            case "end":
              return _context21.stop();
          }
        }
      }, null, this);
    }
    /**
     * Only two types of items should be encrypted with a root key:
     * - An SNItemsKey object
     * - An encrypted storage object (local)
     */

  }, {
    key: "contentTypeUsesRootKeyEncryption",
    value: function contentTypeUsesRootKeyEncryption(contentType) {
      return contentType === _Models_content_types__WEBPACK_IMPORTED_MODULE_3__["ContentTypes"].ItemsKey || contentType === _Models_content_types__WEBPACK_IMPORTED_MODULE_3__["ContentTypes"].EncryptedStorage;
    }
    /**
     * @returns  The SNItemsKey object to use for encrypting this item.
                 For regular items, should be equal too this.getDefaultItemsKey.
                 For SNItemsKey items, should be equal to root keys.
    */

  }, {
    key: "keyToUseForEncryptionOfPayload",
    value: function keyToUseForEncryptionOfPayload(_ref7) {
      var payload, intent, rootKey;
      return regeneratorRuntime.async(function keyToUseForEncryptionOfPayload$(_context22) {
        while (1) {
          switch (_context22.prev = _context22.next) {
            case 0:
              payload = _ref7.payload, intent = _ref7.intent;

              if (!Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_1__["isNullOrUndefined"])(intent)) {
                _context22.next = 3;
                break;
              }

              throw 'Intent must be supplied when looking up key for encryption of item.';

            case 3:
              if (!this.contentTypeUsesRootKeyEncryption(payload.content_type)) {
                _context22.next = 16;
                break;
              }

              _context22.next = 6;
              return regeneratorRuntime.awrap(this.getRootKey());

            case 6:
              rootKey = _context22.sent;

              if (rootKey) {
                _context22.next = 13;
                break;
              }

              if (!Object(_Protocol__WEBPACK_IMPORTED_MODULE_5__["intentRequiresEncryption"])(intent)) {
                _context22.next = 12;
                break;
              }

              throw 'Root key encryption is required but no root key is available.';

            case 12:
              return _context22.abrupt("return", null);

            case 13:
              return _context22.abrupt("return", rootKey);

            case 16:
              return _context22.abrupt("return", this.itemsKeyManager.getDefaultItemsKey());

            case 17:
            case "end":
              return _context22.stop();
          }
        }
      }, null, this);
    }
    /**
     * Payloads could have been previously encrypted with any arbitrary SNItemsKey object.
     * If the payload is an items key object, it is always encrypted with the root key,
     * and so return that. Otherwise, we check to see if the payload has an
     * items_key_id and return that key. If it doesn't, this means the payload was
     * encrypted with legacy behavior. We return then the key object corresponding
     * to the version of this payload.
     * @returns  The SNItemsKey object to use for decrypting this payload.
    */

  }, {
    key: "keyToUseForDecryptionOfPayload",
    value: function keyToUseForDecryptionOfPayload(_ref8) {
      var payload, itemsKey, payloadVersion;
      return regeneratorRuntime.async(function keyToUseForDecryptionOfPayload$(_context23) {
        while (1) {
          switch (_context23.prev = _context23.next) {
            case 0:
              payload = _ref8.payload;

              if (!this.contentTypeUsesRootKeyEncryption(payload.content_type)) {
                _context23.next = 3;
                break;
              }

              return _context23.abrupt("return", this.getRootKey());

            case 3:
              if (!payload.items_key_id) {
                _context23.next = 6;
                break;
              }

              itemsKey = this.itemsKeyManager.itemsKeyForPayload(payload);
              return _context23.abrupt("return", itemsKey);

            case 6:
              payloadVersion = this.protocolService.versionForPayload(payload);

              if (!(payloadVersion === this.protocolService.getLatestVersion())) {
                _context23.next = 9;
                break;
              }

              throw 'No associated key found for item encrypted with latest protocol version.';

            case 9:
              return _context23.abrupt("return", this.itemsKeyManager.defaultItemsKeyForItemVersion(payloadVersion));

            case 10:
            case "end":
              return _context23.stop();
          }
        }
      }, null, this);
    }
  }]);

  return SNKeyManager;
}(_Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__["PureService"]);

/***/ }),

/***/ "./lib/services/model_manager.js":
/*!***************************************!*\
  !*** ./lib/services/model_manager.js ***!
  \***************************************/
/*! exports provided: SNModelManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNModelManager", function() { return SNModelManager; });
/* harmony import */ var lodash_remove__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/remove */ "./node_modules/lodash/remove.js");
/* harmony import */ var lodash_remove__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_remove__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_pull__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/pull */ "./node_modules/lodash/pull.js");
/* harmony import */ var lodash_pull__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_pull__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_sortedIndexBy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/sortedIndexBy */ "./node_modules/lodash/sortedIndexBy.js");
/* harmony import */ var lodash_sortedIndexBy__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_sortedIndexBy__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Models__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Models */ "./lib/models/index.js");
/* harmony import */ var _Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Lib/services/pure_service */ "./lib/services/pure_service.js");
/* harmony import */ var _Payloads__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @Payloads */ "./lib/protocol/payloads/index.js");
/* harmony import */ var _Lib_uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @Lib/uuid */ "./lib/uuid.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }









var SNModelManager =
/*#__PURE__*/
function (_PureService) {
  _inherits(SNModelManager, _PureService);

  function SNModelManager(_ref) {
    var _this;

    var timeout = _ref.timeout;

    _classCallCheck(this, SNModelManager);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNModelManager).call(this));
    _this.timeout = timeout;
    _this.mappingObservers = [];
    _this.creationObservers = [];
    _this.items = [];
    _this.itemsKeys = [];
    _this.notes = [];
    _this.tags = [];
    _this.components = [];
    _this.itemsHash = {};
    _this.resolveQueue = {};
    _this.masterCollection = new _Payloads__WEBPACK_IMPORTED_MODULE_6__["PayloadCollection"]();

    _this.buildSystemSmartTags();

    return _this;
  }
  /**
  * Our payload collectionn keeps the latest mapped payload for every payload
  * that passes through our mapping function. Use this to query current state
  * as needed to make decisions, like about duplication or uuid alteration.
  */


  _createClass(SNModelManager, [{
    key: "getMasterCollection",
    value: function getMasterCollection() {
      return this.masterCollection;
    }
  }, {
    key: "deinit",
    value: function deinit() {
      _get(_getPrototypeOf(SNModelManager.prototype), "deinit", this).call(this);

      this.resetState();
    }
  }, {
    key: "resetState",
    value: function resetState() {
      this.items.length = 0;
      this.itemsKeys.length = 0;
      this.notes.length = 0;
      this.tags.length = 0;
      this.components.length = 0;
      this.itemsHash = {};
      this.resolveQueue = {};
      this.masterCollection = new _Payloads__WEBPACK_IMPORTED_MODULE_6__["PayloadCollection"]();
    }
    /**
     * Consumers wanting to modify an item should run it through this block,
     * so that data is properly mapped through our function, and latest state
     * is properly reconciled.
     */

  }, {
    key: "setItemProperties",
    value: function setItemProperties(_ref2) {
      var item, properties;
      return regeneratorRuntime.async(function setItemProperties$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              item = _ref2.item, properties = _ref2.properties;
              return _context.abrupt("return", this.setItemsProperties({
                items: [item],
                properties: properties
              }));

            case 2:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "setItemsProperties",
    value: function setItemsProperties(_ref3) {
      var items, properties, keys, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, item, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, key;

      return regeneratorRuntime.async(function setItemsProperties$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              items = _ref3.items, properties = _ref3.properties;
              keys = Object.keys(properties);
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context2.prev = 5;
              _iterator = items[Symbol.iterator]();

            case 7:
              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                _context2.next = 31;
                break;
              }

              item = _step.value;
              _iteratorNormalCompletion2 = true;
              _didIteratorError2 = false;
              _iteratorError2 = undefined;
              _context2.prev = 12;

              for (_iterator2 = keys[Symbol.iterator](); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                key = _step2.value;
                item[key] = properties[key];
              }

              _context2.next = 20;
              break;

            case 16:
              _context2.prev = 16;
              _context2.t0 = _context2["catch"](12);
              _didIteratorError2 = true;
              _iteratorError2 = _context2.t0;

            case 20:
              _context2.prev = 20;
              _context2.prev = 21;

              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }

            case 23:
              _context2.prev = 23;

              if (!_didIteratorError2) {
                _context2.next = 26;
                break;
              }

              throw _iteratorError2;

            case 26:
              return _context2.finish(23);

            case 27:
              return _context2.finish(20);

            case 28:
              _iteratorNormalCompletion = true;
              _context2.next = 7;
              break;

            case 31:
              _context2.next = 37;
              break;

            case 33:
              _context2.prev = 33;
              _context2.t1 = _context2["catch"](5);
              _didIteratorError = true;
              _iteratorError = _context2.t1;

            case 37:
              _context2.prev = 37;
              _context2.prev = 38;

              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }

            case 40:
              _context2.prev = 40;

              if (!_didIteratorError) {
                _context2.next = 43;
                break;
              }

              throw _iteratorError;

            case 43:
              return _context2.finish(40);

            case 44:
              return _context2.finish(37);

            case 45:
              _context2.next = 47;
              return regeneratorRuntime.awrap(this.mapItems({
                items: items
              }));

            case 47:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this, [[5, 33, 37, 45], [12, 16, 20, 28], [21,, 23, 27], [38,, 40, 44]]);
    }
  }, {
    key: "modifyItem",
    value: function modifyItem(_ref4) {
      var item, modifier;
      return regeneratorRuntime.async(function modifyItem$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              item = _ref4.item, modifier = _ref4.modifier;
              return _context3.abrupt("return", this.modifyItems({
                items: [item],
                modifier: modifier
              }));

            case 2:
            case "end":
              return _context3.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "modifyItems",
    value: function modifyItems(_ref5) {
      var items, modifier;
      return regeneratorRuntime.async(function modifyItems$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              items = _ref5.items, modifier = _ref5.modifier;
              _context4.next = 3;
              return regeneratorRuntime.awrap(modifier());

            case 3:
              _context4.next = 5;
              return regeneratorRuntime.awrap(this.setItemsDirty(items, true));

            case 5:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "mapCollectionToLocalItems",
    value: function mapCollectionToLocalItems(_ref6) {
      var collection, sourceKey;
      return regeneratorRuntime.async(function mapCollectionToLocalItems$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              collection = _ref6.collection, sourceKey = _ref6.sourceKey;
              return _context5.abrupt("return", this.mapPayloadsToLocalItems({
                payloads: collection.allPayloads,
                source: collection.source,
                sourceKey: sourceKey
              }));

            case 2:
            case "end":
              return _context5.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "mapItem",
    value: function mapItem(_ref7) {
      var item, source, sourceKey, items;
      return regeneratorRuntime.async(function mapItem$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              item = _ref7.item, source = _ref7.source, sourceKey = _ref7.sourceKey;
              _context6.next = 3;
              return regeneratorRuntime.awrap(this.mapItems({
                items: [item],
                source: source,
                sourceKey: sourceKey
              }));

            case 3:
              items = _context6.sent;
              return _context6.abrupt("return", items[0]);

            case 5:
            case "end":
              return _context6.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "mapItems",
    value: function mapItems(_ref8) {
      var items, source, sourceKey, payloads;
      return regeneratorRuntime.async(function mapItems$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              items = _ref8.items, source = _ref8.source, sourceKey = _ref8.sourceKey;
              payloads = items.map(function (item) {
                return item.payloadRepresentation();
              });
              return _context7.abrupt("return", this.mapPayloadsToLocalItems({
                payloads: payloads,
                source: source,
                sourceKey: sourceKey
              }));

            case 3:
            case "end":
              return _context7.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "mapPayloadToLocalItem",
    value: function mapPayloadToLocalItem(_ref9) {
      var payload, items;
      return regeneratorRuntime.async(function mapPayloadToLocalItem$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              payload = _ref9.payload;
              _context8.next = 3;
              return regeneratorRuntime.awrap(this.mapPayloadsToLocalItems({
                payloads: [payload]
              }));

            case 3:
              items = _context8.sent;
              return _context8.abrupt("return", items[0]);

            case 5:
            case "end":
              return _context8.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "mapPayloadsToLocalItems",
    value: function mapPayloadsToLocalItems(_ref10) {
      var payloads, source, sourceKey, itemsToNotifyObserversOf, newItems, processed, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, payload, isCorrupt, item, isDirtyDeleted, allPayloads, allItems, _i, _Object$keys, uuid, _processed$uuid, _item, _payload, interestedItems, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, interestedItem, newCollection;

      return regeneratorRuntime.async(function mapPayloadsToLocalItems$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              payloads = _ref10.payloads, source = _ref10.source, sourceKey = _ref10.sourceKey;
              itemsToNotifyObserversOf = [];
              newItems = [];
              processed = {};
              /** First loop should process payloads and add items only; no relationship handling. */

              _iteratorNormalCompletion3 = true;
              _didIteratorError3 = false;
              _iteratorError3 = undefined;
              _context9.prev = 7;
              _iterator3 = payloads[Symbol.iterator]();

            case 9:
              if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {
                _context9.next = 40;
                break;
              }

              payload = _step3.value;

              if (payload) {
                _context9.next = 14;
                break;
              }

              console.error('Payload is null');
              return _context9.abrupt("continue", 37);

            case 14:
              if (payload.isPayload) {
                _context9.next = 16;
                break;
              }

              throw 'Attempting to map non-payload object into local model.';

            case 16:
              isCorrupt = !payload.content_type || !payload.uuid;

              if (!(isCorrupt && !payload.deleted)) {
                _context9.next = 20;
                break;
              }

              console.error('Payload is corrupt:', payload);
              return _context9.abrupt("continue", 37);

            case 20:
              item = this.findItem(payload.uuid);
              isDirtyDeleted = false;

              if (!(payload.deleted === true)) {
                _context9.next = 34;
                break;
              }

              if (!payload.dirty) {
                _context9.next = 28;
                break;
              }

              /**
               * Item was marked as deleted but not yet synced (in offline scenario).
               * Create this item as usual, but do not add it to individual arrays,
               * and remove from individual arrays if neccesary. i.e add to this.items
               * but not this.notes (so that it can be retrieved with getDirtyItems)
               */
              isDirtyDeleted = true;

              if (item) {
                this.removeItemFromRespectiveArray(item);
                item.updateLocalRelationships();
              }

              _context9.next = 34;
              break;

            case 28:
              if (!item) {
                _context9.next = 33;
                break;
              }

              _context9.next = 31;
              return regeneratorRuntime.awrap(this.removeItemLocally(item));

            case 31:
              _context9.next = 34;
              break;

            case 33:
              return _context9.abrupt("continue", 37);

            case 34:
              if (item) {
                item.updateFromPayload(payload);
              } else {
                item = Object(_Models__WEBPACK_IMPORTED_MODULE_4__["CreateItemFromPayload"])(payload);
                this.insertItems({
                  items: [item],
                  globalOnly: isDirtyDeleted
                });
                newItems.push(item);
              }
              /** Observers do not need to handle items that errored while decrypting. */


              if (!item.errorDecrypting) {
                itemsToNotifyObserversOf.push(item);
              }

              processed[item.uuid] = {
                item: item,
                payload: payload
              };

            case 37:
              _iteratorNormalCompletion3 = true;
              _context9.next = 9;
              break;

            case 40:
              _context9.next = 46;
              break;

            case 42:
              _context9.prev = 42;
              _context9.t0 = _context9["catch"](7);
              _didIteratorError3 = true;
              _iteratorError3 = _context9.t0;

            case 46:
              _context9.prev = 46;
              _context9.prev = 47;

              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
                _iterator3.return();
              }

            case 49:
              _context9.prev = 49;

              if (!_didIteratorError3) {
                _context9.next = 52;
                break;
              }

              throw _iteratorError3;

            case 52:
              return _context9.finish(49);

            case 53:
              return _context9.finish(46);

            case 54:
              /** Second loop should process references */
              allPayloads = [];
              allItems = [];
              _i = 0, _Object$keys = Object.keys(processed);

            case 57:
              if (!(_i < _Object$keys.length)) {
                _context9.next = 89;
                break;
              }

              uuid = _Object$keys[_i];
              _processed$uuid = processed[uuid], _item = _processed$uuid.item, _payload = _processed$uuid.payload;
              allPayloads.push(_payload);
              allItems.push(_item);

              if (!_payload.content) {
                _context9.next = 65;
                break;
              }

              _context9.next = 65;
              return regeneratorRuntime.awrap(this.resolveReferencesForItem(_item));

            case 65:
              interestedItems = this.popItemsInterestedInMissingItem({
                item: _item
              });
              _iteratorNormalCompletion4 = true;
              _didIteratorError4 = false;
              _iteratorError4 = undefined;
              _context9.prev = 69;

              for (_iterator4 = interestedItems[Symbol.iterator](); !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
                interestedItem = _step4.value;
                interestedItem.addItemAsRelationship(_item);
              }

              _context9.next = 77;
              break;

            case 73:
              _context9.prev = 73;
              _context9.t1 = _context9["catch"](69);
              _didIteratorError4 = true;
              _iteratorError4 = _context9.t1;

            case 77:
              _context9.prev = 77;
              _context9.prev = 78;

              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {
                _iterator4.return();
              }

            case 80:
              _context9.prev = 80;

              if (!_didIteratorError4) {
                _context9.next = 83;
                break;
              }

              throw _iteratorError4;

            case 83:
              return _context9.finish(80);

            case 84:
              return _context9.finish(77);

            case 85:
              _item.didCompleteMapping(source);

            case 86:
              _i++;
              _context9.next = 57;
              break;

            case 89:
              newCollection = new _Payloads__WEBPACK_IMPORTED_MODULE_6__["PayloadCollection"]({
                payloads: allItems.map(function (item) {
                  return item.payloadRepresentation();
                }),
                source: source
              });
              this.masterCollection = this.masterCollection.concat(newCollection);

              if (!(newItems.length > 0)) {
                _context9.next = 94;
                break;
              }

              _context9.next = 94;
              return regeneratorRuntime.awrap(this.notifyCreationObservers(newItems, source, sourceKey));

            case 94:
              _context9.next = 96;
              return regeneratorRuntime.awrap(this.notifyMappingObservers(itemsToNotifyObserversOf, source, sourceKey));

            case 96:
              return _context9.abrupt("return", allItems);

            case 97:
            case "end":
              return _context9.stop();
          }
        }
      }, null, this, [[7, 42, 46, 54], [47,, 49, 53], [69, 73, 77, 85], [78,, 80, 84]]);
    }
    /** @public */

  }, {
    key: "insertItem",
    value: function insertItem(_ref11) {
      var item = _ref11.item;
      this.insertItems({
        items: [item]
      });
    }
    /** @public */

  }, {
    key: "insertItems",
    value: function insertItems(_ref12) {
      var items = _ref12.items,
          globalOnly = _ref12.globalOnly;
      var _iteratorNormalCompletion5 = true;
      var _didIteratorError5 = false;
      var _iteratorError5 = undefined;

      try {
        for (var _iterator5 = items[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
          var item = _step5.value;

          if (this.itemsHash[item.uuid]) {
            continue;
          }

          this.itemsHash[item.uuid] = item;
          this.items.push(item);
          /**
           * In some cases, you just want to add the item to this.items, and not to
           * the individual arrays This applies when you want to keep an item
           * syncable, but not display it via the individual arrays
           */

          if (globalOnly) {
            continue;
          }

          if (item.content_type === _Models__WEBPACK_IMPORTED_MODULE_4__["ContentTypes"].ItemsKey) {
            this.itemsKeys.unshift(item);
          } else if (item.content_type === _Models__WEBPACK_IMPORTED_MODULE_4__["ContentTypes"].Tag) {
            var index = lodash_sortedIndexBy__WEBPACK_IMPORTED_MODULE_2___default()(this.tags, item, function (item) {
              if (item.title) {
                return item.title.toLowerCase();
              } else {
                return '';
              }
            });
            this.tags.splice(index, 0, item);
          } else if (item.content_type === _Models__WEBPACK_IMPORTED_MODULE_4__["ContentTypes"].Note) {
            this.notes.unshift(item);
          } else if (item.content_type === _Models__WEBPACK_IMPORTED_MODULE_4__["ContentTypes"].Component) {
            this.components.unshift(item);
          }
        }
      } catch (err) {
        _didIteratorError5 = true;
        _iteratorError5 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {
            _iterator5.return();
          }
        } finally {
          if (_didIteratorError5) {
            throw _iteratorError5;
          }
        }
      }
    }
  }, {
    key: "resolveRelationshipWhenItemAvailable",
    value: function resolveRelationshipWhenItemAvailable(_ref13) {
      var interestedItem = _ref13.interestedItem,
          missingItemId = _ref13.missingItemId;
      var interestedItems = this.resolveQueue[missingItemId] || [];
      interestedItems.push(interestedItem);
      this.resolveQueue[missingItemId] = interestedItems;
    }
  }, {
    key: "popItemsInterestedInMissingItem",
    value: function popItemsInterestedInMissingItem(_ref14) {
      var item = _ref14.item;
      var interestedItems = this.resolveQueue[item.uuid];
      delete this.resolveQueue[item.uuid];
      return interestedItems || [];
    }
  }, {
    key: "resolveReferencesForItem",
    value: function resolveReferencesForItem(item) {
      var markReferencesDirty,
          content,
          references,
          referencesIds,
          includeBlanks,
          items,
          _iteratorNormalCompletion6,
          _didIteratorError6,
          _iteratorError6,
          _iterator6,
          _step6,
          _step6$value,
          index,
          referencedItem,
          referenceId,
          _args10 = arguments;

      return regeneratorRuntime.async(function resolveReferencesForItem$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              markReferencesDirty = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : false;

              if (!item.errorDecrypting) {
                _context10.next = 3;
                break;
              }

              return _context10.abrupt("return");

            case 3:
              content = item.content;
              /**
               * If another client removes an item's references, this client won't pick
               * up the removal unless we remove everything not present in the current
               * list of references
               */

              item.updateLocalRelationships();

              if (!(!content.references || item.deleted)) {
                _context10.next = 7;
                break;
              }

              return _context10.abrupt("return");

            case 7:
              /** Make copy, references will be modified in array */
              references = content.references.slice();
              referencesIds = references.map(function (ref) {
                return ref.uuid;
              });
              includeBlanks = true;
              items = this.findItems(referencesIds, includeBlanks);
              _iteratorNormalCompletion6 = true;
              _didIteratorError6 = false;
              _iteratorError6 = undefined;
              _context10.prev = 14;
              _iterator6 = items.entries()[Symbol.iterator]();

            case 16:
              if (_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done) {
                _context10.next = 30;
                break;
              }

              _step6$value = _slicedToArray(_step6.value, 2), index = _step6$value[0], referencedItem = _step6$value[1];

              if (!referencedItem) {
                _context10.next = 25;
                break;
              }

              item.addItemAsRelationship(referencedItem);

              if (!markReferencesDirty) {
                _context10.next = 23;
                break;
              }

              _context10.next = 23;
              return regeneratorRuntime.awrap(this.setItemDirty(referencedItem, true));

            case 23:
              _context10.next = 27;
              break;

            case 25:
              referenceId = referencesIds[index];
              this.resolveRelationshipWhenItemAvailable({
                interestedItem: item,
                missingItemId: referenceId
              });

            case 27:
              _iteratorNormalCompletion6 = true;
              _context10.next = 16;
              break;

            case 30:
              _context10.next = 36;
              break;

            case 32:
              _context10.prev = 32;
              _context10.t0 = _context10["catch"](14);
              _didIteratorError6 = true;
              _iteratorError6 = _context10.t0;

            case 36:
              _context10.prev = 36;
              _context10.prev = 37;

              if (!_iteratorNormalCompletion6 && _iterator6.return != null) {
                _iterator6.return();
              }

            case 39:
              _context10.prev = 39;

              if (!_didIteratorError6) {
                _context10.next = 42;
                break;
              }

              throw _iteratorError6;

            case 42:
              return _context10.finish(39);

            case 43:
              return _context10.finish(36);

            case 44:
            case "end":
              return _context10.stop();
          }
        }
      }, null, this, [[14, 32, 36, 44], [37,, 39, 43]]);
    }
    /**
     * @observers
     */

    /* Notifies observers when an item has been created */

  }, {
    key: "addCreationObserver",
    value: function addCreationObserver(observer) {
      this.creationObservers.push(observer);
      return observer;
    }
  }, {
    key: "removeCreationObserver",
    value: function removeCreationObserver(observer) {
      lodash_remove__WEBPACK_IMPORTED_MODULE_0___default()(this.creationObservers, observer);
    }
  }, {
    key: "notifyCreationObservers",
    value: function notifyCreationObservers(items, source, sourceKey) {
      var _iteratorNormalCompletion7, _didIteratorError7, _iteratorError7, _iterator7, _step7, observer;

      return regeneratorRuntime.async(function notifyCreationObservers$(_context11) {
        while (1) {
          switch (_context11.prev = _context11.next) {
            case 0:
              _iteratorNormalCompletion7 = true;
              _didIteratorError7 = false;
              _iteratorError7 = undefined;
              _context11.prev = 3;
              _iterator7 = this.creationObservers[Symbol.iterator]();

            case 5:
              if (_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done) {
                _context11.next = 12;
                break;
              }

              observer = _step7.value;
              _context11.next = 9;
              return regeneratorRuntime.awrap(observer.callback({
                items: items,
                source: source,
                sourceKey: sourceKey
              }));

            case 9:
              _iteratorNormalCompletion7 = true;
              _context11.next = 5;
              break;

            case 12:
              _context11.next = 18;
              break;

            case 14:
              _context11.prev = 14;
              _context11.t0 = _context11["catch"](3);
              _didIteratorError7 = true;
              _iteratorError7 = _context11.t0;

            case 18:
              _context11.prev = 18;
              _context11.prev = 19;

              if (!_iteratorNormalCompletion7 && _iterator7.return != null) {
                _iterator7.return();
              }

            case 21:
              _context11.prev = 21;

              if (!_didIteratorError7) {
                _context11.next = 24;
                break;
              }

              throw _iteratorError7;

            case 24:
              return _context11.finish(21);

            case 25:
              return _context11.finish(18);

            case 26:
            case "end":
              return _context11.stop();
          }
        }
      }, null, this, [[3, 14, 18, 26], [19,, 21, 25]]);
    }
    /* Notifies observers when an item has been mapped from */

  }, {
    key: "addMappingObserver",
    value: function addMappingObserver(types, callback) {
      return this.addMappingObserverWithPriority({
        types: types,
        callback: callback,
        priority: 1
      });
    }
  }, {
    key: "addMappingObserverWithPriority",
    value: function addMappingObserverWithPriority(_ref15) {
      var _this2 = this;

      var priority = _ref15.priority,
          types = _ref15.types,
          callback = _ref15.callback;

      if (!Array.isArray(types)) {
        types = [types];
      }

      var observer = {
        types: types,
        priority: priority,
        callback: callback
      };
      this.mappingObservers.push(observer);
      return function () {
        lodash_pull__WEBPACK_IMPORTED_MODULE_1___default()(_this2.mappingObservers, observer);
      };
    }
    /* Note that this function is public, and can also be called manually (desktopManager uses it) */

  }, {
    key: "notifyMappingObservers",
    value: function notifyMappingObservers(items, source, sourceKey) {
      var _this3 = this;

      var observers, _iteratorNormalCompletion8, _didIteratorError8, _iteratorError8, _loop, _iterator8, _step8;

      return regeneratorRuntime.async(function notifyMappingObservers$(_context13) {
        while (1) {
          switch (_context13.prev = _context13.next) {
            case 0:
              observers = this.mappingObservers.sort(function (a, b) {
                return a.priority < b.priority ? -1 : 1;
              });
              _iteratorNormalCompletion8 = true;
              _didIteratorError8 = false;
              _iteratorError8 = undefined;
              _context13.prev = 4;

              _loop = function _loop() {
                var observer, allRelevantItems, validItems, deletedItems, _iteratorNormalCompletion9, _didIteratorError9, _iteratorError9, _iterator9, _step9, item;

                return regeneratorRuntime.async(function _loop$(_context12) {
                  while (1) {
                    switch (_context12.prev = _context12.next) {
                      case 0:
                        observer = _step8.value;
                        allRelevantItems = observer.types.includes('*') ? items : items.filter(function (item) {
                          return observer.types.includes(item.content_type);
                        });
                        validItems = [];
                        deletedItems = [];
                        _iteratorNormalCompletion9 = true;
                        _didIteratorError9 = false;
                        _iteratorError9 = undefined;
                        _context12.prev = 7;

                        for (_iterator9 = allRelevantItems[Symbol.iterator](); !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {
                          item = _step9.value;

                          if (item.deleted) {
                            deletedItems.push(item);
                          } else {
                            validItems.push(item);
                          }
                        }

                        _context12.next = 15;
                        break;

                      case 11:
                        _context12.prev = 11;
                        _context12.t0 = _context12["catch"](7);
                        _didIteratorError9 = true;
                        _iteratorError9 = _context12.t0;

                      case 15:
                        _context12.prev = 15;
                        _context12.prev = 16;

                        if (!_iteratorNormalCompletion9 && _iterator9.return != null) {
                          _iterator9.return();
                        }

                      case 18:
                        _context12.prev = 18;

                        if (!_didIteratorError9) {
                          _context12.next = 21;
                          break;
                        }

                        throw _iteratorError9;

                      case 21:
                        return _context12.finish(18);

                      case 22:
                        return _context12.finish(15);

                      case 23:
                        if (!(allRelevantItems.length > 0)) {
                          _context12.next = 26;
                          break;
                        }

                        _context12.next = 26;
                        return regeneratorRuntime.awrap(_this3._callMappingObserver(observer, allRelevantItems, validItems, deletedItems, source, sourceKey));

                      case 26:
                      case "end":
                        return _context12.stop();
                    }
                  }
                }, null, null, [[7, 11, 15, 23], [16,, 18, 22]]);
              };

              _iterator8 = observers[Symbol.iterator]();

            case 7:
              if (_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done) {
                _context13.next = 13;
                break;
              }

              _context13.next = 10;
              return regeneratorRuntime.awrap(_loop());

            case 10:
              _iteratorNormalCompletion8 = true;
              _context13.next = 7;
              break;

            case 13:
              _context13.next = 19;
              break;

            case 15:
              _context13.prev = 15;
              _context13.t0 = _context13["catch"](4);
              _didIteratorError8 = true;
              _iteratorError8 = _context13.t0;

            case 19:
              _context13.prev = 19;
              _context13.prev = 20;

              if (!_iteratorNormalCompletion8 && _iterator8.return != null) {
                _iterator8.return();
              }

            case 22:
              _context13.prev = 22;

              if (!_didIteratorError8) {
                _context13.next = 25;
                break;
              }

              throw _iteratorError8;

            case 25:
              return _context13.finish(22);

            case 26:
              return _context13.finish(19);

            case 27:
            case "end":
              return _context13.stop();
          }
        }
      }, null, this, [[4, 15, 19, 27], [20,, 22, 26]]);
    }
  }, {
    key: "_callMappingObserver",
    value: function _callMappingObserver(observer, allRelevantItems, validItems, deletedItems, source, sourceKey) {
      var _this4 = this;

      return regeneratorRuntime.async(function _callMappingObserver$(_context15) {
        while (1) {
          switch (_context15.prev = _context15.next) {
            case 0:
              return _context15.abrupt("return", new Promise(function (resolve, reject) {
                _this4.timeout(function _callee() {
                  return regeneratorRuntime.async(function _callee$(_context14) {
                    while (1) {
                      switch (_context14.prev = _context14.next) {
                        case 0:
                          _context14.prev = 0;
                          _context14.next = 3;
                          return regeneratorRuntime.awrap(observer.callback(allRelevantItems, validItems, deletedItems, source, sourceKey));

                        case 3:
                          _context14.next = 8;
                          break;

                        case 5:
                          _context14.prev = 5;
                          _context14.t0 = _context14["catch"](0);
                          console.error('Mapping observer exception', _context14.t0);

                        case 8:
                          _context14.prev = 8;
                          resolve();
                          return _context14.finish(8);

                        case 11:
                        case "end":
                          return _context14.stop();
                      }
                    }
                  }, null, null, [[0, 5, 8, 11]]);
                });
              }));

            case 1:
            case "end":
              return _context15.stop();
          }
        }
      });
    }
    /**
     * When a client sets an item as dirty, it means its values has changed,
     * and everyone should know about it. Particularly extensions. For example,
     * if you edit the title of a note, extensions won't be notified until
     * the save sync completes. With this, they'll be notified immediately.
     */

  }, {
    key: "setItemDirty",
    value: function setItemDirty(item) {
      var dirty,
          updateClientDate,
          source,
          sourceKey,
          _args16 = arguments;
      return regeneratorRuntime.async(function setItemDirty$(_context16) {
        while (1) {
          switch (_context16.prev = _context16.next) {
            case 0:
              dirty = _args16.length > 1 && _args16[1] !== undefined ? _args16[1] : true;
              updateClientDate = _args16.length > 2 ? _args16[2] : undefined;
              source = _args16.length > 3 ? _args16[3] : undefined;
              sourceKey = _args16.length > 4 ? _args16[4] : undefined;
              return _context16.abrupt("return", this.setItemsDirty([item], dirty, updateClientDate, source, sourceKey));

            case 5:
            case "end":
              return _context16.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "setItemsDirty",
    value: function setItemsDirty(items) {
      var dirty,
          updateClientDate,
          source,
          sourceKey,
          _iteratorNormalCompletion10,
          _didIteratorError10,
          _iteratorError10,
          _iterator10,
          _step10,
          item,
          _args17 = arguments;

      return regeneratorRuntime.async(function setItemsDirty$(_context17) {
        while (1) {
          switch (_context17.prev = _context17.next) {
            case 0:
              dirty = _args17.length > 1 && _args17[1] !== undefined ? _args17[1] : true;
              updateClientDate = _args17.length > 2 ? _args17[2] : undefined;
              source = _args17.length > 3 ? _args17[3] : undefined;
              sourceKey = _args17.length > 4 ? _args17[4] : undefined;
              _iteratorNormalCompletion10 = true;
              _didIteratorError10 = false;
              _iteratorError10 = undefined;
              _context17.prev = 7;
              _iterator10 = items[Symbol.iterator]();

            case 9:
              if (_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done) {
                _context17.next = 17;
                break;
              }

              item = _step10.value;

              if (item.isItem) {
                _context17.next = 13;
                break;
              }

              throw 'Attempting to dirty non-item object.';

            case 13:
              item.setDirty({
                dirty: dirty,
                updateClientDate: updateClientDate,
                authorized: true
              });

            case 14:
              _iteratorNormalCompletion10 = true;
              _context17.next = 9;
              break;

            case 17:
              _context17.next = 23;
              break;

            case 19:
              _context17.prev = 19;
              _context17.t0 = _context17["catch"](7);
              _didIteratorError10 = true;
              _iteratorError10 = _context17.t0;

            case 23:
              _context17.prev = 23;
              _context17.prev = 24;

              if (!_iteratorNormalCompletion10 && _iterator10.return != null) {
                _iterator10.return();
              }

            case 26:
              _context17.prev = 26;

              if (!_didIteratorError10) {
                _context17.next = 29;
                break;
              }

              throw _iteratorError10;

            case 29:
              return _context17.finish(26);

            case 30:
              return _context17.finish(23);

            case 31:
              return _context17.abrupt("return", this.mapItems({
                items: items,
                source: source || _Payloads__WEBPACK_IMPORTED_MODULE_6__["PayloadSources"].LocalDirtied,
                sourceKey: sourceKey
              }));

            case 32:
            case "end":
              return _context17.stop();
          }
        }
      }, null, this, [[7, 19, 23, 31], [24,, 26, 30]]);
    }
  }, {
    key: "duplicateItem",
    value: function duplicateItem(_ref16) {
      var item, isConflict, payload, payloads, results, copy;
      return regeneratorRuntime.async(function duplicateItem$(_context18) {
        while (1) {
          switch (_context18.prev = _context18.next) {
            case 0:
              item = _ref16.item, isConflict = _ref16.isConflict;

              if (item.isItem) {
                _context18.next = 3;
                break;
              }

              throw 'Attempting to duplicate non-item object.';

            case 3:
              payload = Object(_Payloads__WEBPACK_IMPORTED_MODULE_6__["CreateMaxPayloadFromAnyObject"])({
                object: item
              });
              _context18.next = 6;
              return regeneratorRuntime.awrap(Object(_Payloads__WEBPACK_IMPORTED_MODULE_6__["PayloadsByDuplicating"])({
                payload: payload,
                baseCollection: this.getMasterCollection(),
                isConflict: isConflict
              }));

            case 6:
              payloads = _context18.sent;
              _context18.next = 9;
              return regeneratorRuntime.awrap(this.mapPayloadsToLocalItems({
                payloads: payloads
              }));

            case 9:
              results = _context18.sent;
              copy = results.find(function (p) {
                return p.uuid === payloads[0].uuid;
              });
              return _context18.abrupt("return", copy);

            case 12:
            case "end":
              return _context18.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "createItem",
    value: function createItem(_ref17) {
      var contentType, content, add, needsSync, payload, item;
      return regeneratorRuntime.async(function createItem$(_context19) {
        while (1) {
          switch (_context19.prev = _context19.next) {
            case 0:
              contentType = _ref17.contentType, content = _ref17.content, add = _ref17.add, needsSync = _ref17.needsSync;

              if (contentType) {
                _context19.next = 3;
                break;
              }

              throw 'Attempting to create item with no contentType';

            case 3:
              _context19.t0 = _Payloads__WEBPACK_IMPORTED_MODULE_6__["CreateMaxPayloadFromAnyObject"];
              _context19.next = 6;
              return regeneratorRuntime.awrap(_Lib_uuid__WEBPACK_IMPORTED_MODULE_7__["Uuid"].GenerateUuid());

            case 6:
              _context19.t1 = _context19.sent;
              _context19.t2 = contentType;
              _context19.t3 = content;
              _context19.t4 = {
                uuid: _context19.t1,
                content_type: _context19.t2,
                content: _context19.t3
              };
              _context19.t5 = {
                object: _context19.t4
              };
              payload = (0, _context19.t0)(_context19.t5);
              item = Object(_Models__WEBPACK_IMPORTED_MODULE_4__["CreateItemFromPayload"])(payload);

              if (!add) {
                _context19.next = 20;
                break;
              }

              this.insertItem({
                item: item
              });

              if (!needsSync) {
                _context19.next = 18;
                break;
              }

              _context19.next = 18;
              return regeneratorRuntime.awrap(this.setItemDirty(item));

            case 18:
              _context19.next = 20;
              return regeneratorRuntime.awrap(this.notifyCreationObservers([item]));

            case 20:
              return _context19.abrupt("return", item);

            case 21:
            case "end":
              return _context19.stop();
          }
        }
      }, null, this);
    }
    /**
     * Adds items to model management.
     * @param globalOnly  Whether the item should only be added to main .items
     *                    array, and not individual item arrays like .notes,
     *                    .tags, .components, etc.
     */

  }, {
    key: "addItem",
    value: function addItem(item) {
      var globalOnly,
          _args20 = arguments;
      return regeneratorRuntime.async(function addItem$(_context20) {
        while (1) {
          switch (_context20.prev = _context20.next) {
            case 0:
              globalOnly = _args20.length > 1 && _args20[1] !== undefined ? _args20[1] : false;
              return _context20.abrupt("return", this.addItems([item], globalOnly));

            case 2:
            case "end":
              return _context20.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "addItems",
    value: function addItems(items) {
      var globalOnly,
          payloads,
          _args21 = arguments;
      return regeneratorRuntime.async(function addItems$(_context21) {
        while (1) {
          switch (_context21.prev = _context21.next) {
            case 0:
              globalOnly = _args21.length > 1 && _args21[1] !== undefined ? _args21[1] : false;
              console.warn('ModelManager.addItems is depracated. Use mapPayloadsToLocalItems instead.');
              payloads = items.map(function (item) {
                return Object(_Payloads__WEBPACK_IMPORTED_MODULE_6__["CreateMaxPayloadFromAnyObject"])({
                  object: item
                });
              });
              _context21.next = 5;
              return regeneratorRuntime.awrap(this.mapPayloadsToLocalItems({
                payloads: payloads
              }));

            case 5:
            case "end":
              return _context21.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "getDirtyItems",
    value: function getDirtyItems() {
      return this.items.filter(function (item) {
        // An item that has an error decrypting can be synced only if it is being deleted.
        // Otherwise, we don't want to send corrupt content up to the server.
        return item.dirty && !item.dummy && (!item.errorDecrypting || item.deleted);
      });
    }
  }, {
    key: "clearDirtyItems",
    value: function clearDirtyItems(items) {
      return regeneratorRuntime.async(function clearDirtyItems$(_context22) {
        while (1) {
          switch (_context22.prev = _context22.next) {
            case 0:
              return _context22.abrupt("return", this.setItemsDirty(items, false));

            case 1:
            case "end":
              return _context22.stop();
          }
        }
      }, null, this);
    }
    /* Used when changing encryption key */

  }, {
    key: "setAllItemsDirty",
    value: function setAllItemsDirty() {
      var relevantItems;
      return regeneratorRuntime.async(function setAllItemsDirty$(_context23) {
        while (1) {
          switch (_context23.prev = _context23.next) {
            case 0:
              relevantItems = this.allItems;
              _context23.next = 3;
              return regeneratorRuntime.awrap(this.setItemsDirty(relevantItems, true));

            case 3:
            case "end":
              return _context23.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "setItemToBeDeleted",
    value: function setItemToBeDeleted(item) {
      return regeneratorRuntime.async(function setItemToBeDeleted$(_context24) {
        while (1) {
          switch (_context24.prev = _context24.next) {
            case 0:
              item.deleted = true;

              if (item.dummy) {
                _context24.next = 4;
                break;
              }

              _context24.next = 4;
              return regeneratorRuntime.awrap(this.setItemDirty(item, true));

            case 4:
              _context24.next = 6;
              return regeneratorRuntime.awrap(this.handleReferencesForItemDeletion(item));

            case 6:
              this.removeItemFromRespectiveArray(item);

            case 7:
            case "end":
              return _context24.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "handleReferencesForItemDeletion",
    value: function handleReferencesForItemDeletion(item) {
      var _iteratorNormalCompletion11, _didIteratorError11, _iteratorError11, _iterator11, _step11, reference, relationship, referencingItems, _iteratorNormalCompletion12, _didIteratorError12, _iteratorError12, _iterator12, _step12, referencingItem;

      return regeneratorRuntime.async(function handleReferencesForItemDeletion$(_context25) {
        while (1) {
          switch (_context25.prev = _context25.next) {
            case 0:
              if (item.errorDecrypting) {
                _context25.next = 32;
                break;
              }

              _iteratorNormalCompletion11 = true;
              _didIteratorError11 = false;
              _iteratorError11 = undefined;
              _context25.prev = 4;
              _iterator11 = item.content.references[Symbol.iterator]();

            case 6:
              if (_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done) {
                _context25.next = 18;
                break;
              }

              reference = _step11.value;
              relationship = this.findItem(reference.uuid);

              if (!relationship) {
                _context25.next = 15;
                break;
              }

              item.removeItemAsRelationship(relationship);

              if (!relationship.hasRelationshipWithItem(item)) {
                _context25.next = 15;
                break;
              }

              relationship.removeItemAsRelationship(item);
              _context25.next = 15;
              return regeneratorRuntime.awrap(this.setItemDirty(relationship, true));

            case 15:
              _iteratorNormalCompletion11 = true;
              _context25.next = 6;
              break;

            case 18:
              _context25.next = 24;
              break;

            case 20:
              _context25.prev = 20;
              _context25.t0 = _context25["catch"](4);
              _didIteratorError11 = true;
              _iteratorError11 = _context25.t0;

            case 24:
              _context25.prev = 24;
              _context25.prev = 25;

              if (!_iteratorNormalCompletion11 && _iterator11.return != null) {
                _iterator11.return();
              }

            case 27:
              _context25.prev = 27;

              if (!_didIteratorError11) {
                _context25.next = 30;
                break;
              }

              throw _iteratorError11;

            case 30:
              return _context25.finish(27);

            case 31:
              return _context25.finish(24);

            case 32:
              /** Handle indirect relationships */
              referencingItems = item.allReferencingItems;
              _iteratorNormalCompletion12 = true;
              _didIteratorError12 = false;
              _iteratorError12 = undefined;
              _context25.prev = 36;
              _iterator12 = referencingItems[Symbol.iterator]();

            case 38:
              if (_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done) {
                _context25.next = 46;
                break;
              }

              referencingItem = _step12.value;
              referencingItem.removeItemAsRelationship(item);
              _context25.next = 43;
              return regeneratorRuntime.awrap(this.setItemDirty(referencingItem, true));

            case 43:
              _iteratorNormalCompletion12 = true;
              _context25.next = 38;
              break;

            case 46:
              _context25.next = 52;
              break;

            case 48:
              _context25.prev = 48;
              _context25.t1 = _context25["catch"](36);
              _didIteratorError12 = true;
              _iteratorError12 = _context25.t1;

            case 52:
              _context25.prev = 52;
              _context25.prev = 53;

              if (!_iteratorNormalCompletion12 && _iterator12.return != null) {
                _iterator12.return();
              }

            case 55:
              _context25.prev = 55;

              if (!_didIteratorError12) {
                _context25.next = 58;
                break;
              }

              throw _iteratorError12;

            case 58:
              return _context25.finish(55);

            case 59:
              return _context25.finish(52);

            case 60:
              item.resetLocalReferencePointers();

            case 61:
            case "end":
              return _context25.stop();
          }
        }
      }, null, this, [[4, 20, 24, 32], [25,, 27, 31], [36, 48, 52, 60], [53,, 55, 59]]);
    }
  }, {
    key: "setItemsToBeDeleted",
    value: function setItemsToBeDeleted(items) {
      var _iteratorNormalCompletion13, _didIteratorError13, _iteratorError13, _iterator13, _step13, item;

      return regeneratorRuntime.async(function setItemsToBeDeleted$(_context26) {
        while (1) {
          switch (_context26.prev = _context26.next) {
            case 0:
              _iteratorNormalCompletion13 = true;
              _didIteratorError13 = false;
              _iteratorError13 = undefined;
              _context26.prev = 3;
              _iterator13 = items[Symbol.iterator]();

            case 5:
              if (_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done) {
                _context26.next = 12;
                break;
              }

              item = _step13.value;
              _context26.next = 9;
              return regeneratorRuntime.awrap(this.setItemToBeDeleted(item));

            case 9:
              _iteratorNormalCompletion13 = true;
              _context26.next = 5;
              break;

            case 12:
              _context26.next = 18;
              break;

            case 14:
              _context26.prev = 14;
              _context26.t0 = _context26["catch"](3);
              _didIteratorError13 = true;
              _iteratorError13 = _context26.t0;

            case 18:
              _context26.prev = 18;
              _context26.prev = 19;

              if (!_iteratorNormalCompletion13 && _iterator13.return != null) {
                _iterator13.return();
              }

            case 21:
              _context26.prev = 21;

              if (!_didIteratorError13) {
                _context26.next = 24;
                break;
              }

              throw _iteratorError13;

            case 24:
              return _context26.finish(21);

            case 25:
              return _context26.finish(18);

            case 26:
            case "end":
              return _context26.stop();
          }
        }
      }, null, this, [[3, 14, 18, 26], [19,, 21, 25]]);
    }
  }, {
    key: "removeItemLocally",
    value: function removeItemLocally(item) {
      return regeneratorRuntime.async(function removeItemLocally$(_context27) {
        while (1) {
          switch (_context27.prev = _context27.next) {
            case 0:
              lodash_remove__WEBPACK_IMPORTED_MODULE_0___default()(this.items, {
                uuid: item.uuid
              });
              delete this.itemsHash[item.uuid];
              this.removeItemFromRespectiveArray(item);
              item.isBeingRemovedLocally();

            case 4:
            case "end":
              return _context27.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "removeItemFromRespectiveArray",
    value: function removeItemFromRespectiveArray(item) {
      if (item.content_type === _Models__WEBPACK_IMPORTED_MODULE_4__["ContentTypes"].Tag) {
        lodash_remove__WEBPACK_IMPORTED_MODULE_0___default()(this.tags, {
          uuid: item.uuid
        });
      } else if (item.content_type === _Models__WEBPACK_IMPORTED_MODULE_4__["ContentTypes"].Note) {
        lodash_remove__WEBPACK_IMPORTED_MODULE_0___default()(this.notes, {
          uuid: item.uuid
        });
      } else if (item.content_type === _Models__WEBPACK_IMPORTED_MODULE_4__["ContentTypes"].Component) {
        lodash_remove__WEBPACK_IMPORTED_MODULE_0___default()(this.components, {
          uuid: item.uuid
        });
      } else if (item.content_type === _Models__WEBPACK_IMPORTED_MODULE_4__["ContentTypes"].ItemsKey) {
        lodash_remove__WEBPACK_IMPORTED_MODULE_0___default()(this.itemsKeys, {
          uuid: item.uuid
        });
      }
    }
    /* Searching */

  }, {
    key: "getItems",
    value: function getItems(contentType) {
      if (Array.isArray(contentType)) {
        return this.allItems.filter(function (item) {
          return !item.dummy && (contentType.includes(item.content_type) || contentType.includes('*'));
        });
      }

      var managed = this.managedItemsForContentType(contentType);
      return managed || this.getItems([contentType]);
    }
  }, {
    key: "managedItemsForContentType",
    value: function managedItemsForContentType(contentType) {
      if (contentType === _Models__WEBPACK_IMPORTED_MODULE_4__["ContentTypes"].Note) {
        return this.notes;
      } else if (contentType === _Models__WEBPACK_IMPORTED_MODULE_4__["ContentTypes"].Component) {
        return this.components;
      } else if (contentType === _Models__WEBPACK_IMPORTED_MODULE_4__["ContentTypes"].Tag) {
        return this.tags;
      }

      return null;
    }
  }, {
    key: "invalidItems",
    value: function invalidItems() {
      return this.allItems.filter(function (item) {
        return item.errorDecrypting;
      });
    }
  }, {
    key: "validItemsForContentType",
    value: function validItemsForContentType(contentType) {
      var managed = this.managedItemsForContentType(contentType);
      var items = managed || this.allItems;
      return items.filter(function (item) {
        return !item.errorDecrypting && (Array.isArray(contentType) ? contentType.includes(item.content_type) : item.content_type === contentType);
      });
    }
  }, {
    key: "findItem",
    value: function findItem(itemId) {
      return this.itemsHash[itemId];
    }
  }, {
    key: "findItems",
    value: function findItems(ids) {
      var includeBlanks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var results = [];
      var _iteratorNormalCompletion14 = true;
      var _didIteratorError14 = false;
      var _iteratorError14 = undefined;

      try {
        for (var _iterator14 = ids[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {
          var id = _step14.value;
          var item = this.itemsHash[id];

          if (item || includeBlanks) {
            results.push(item);
          }
        }
      } catch (err) {
        _didIteratorError14 = true;
        _iteratorError14 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion14 && _iterator14.return != null) {
            _iterator14.return();
          }
        } finally {
          if (_didIteratorError14) {
            throw _iteratorError14;
          }
        }
      }

      return results;
    }
  }, {
    key: "itemsMatchingPredicate",
    value: function itemsMatchingPredicate(predicate) {
      return this.itemsMatchingPredicates([predicate]);
    }
  }, {
    key: "itemsMatchingPredicates",
    value: function itemsMatchingPredicates(predicates) {
      return this.filterItemsWithPredicates(this.allItems, predicates);
    }
  }, {
    key: "filterItemsWithPredicates",
    value: function filterItemsWithPredicates(items, predicates) {
      var results = items.filter(function (item) {
        if (item.deleted) {
          return false;
        }

        var _iteratorNormalCompletion15 = true;
        var _didIteratorError15 = false;
        var _iteratorError15 = undefined;

        try {
          for (var _iterator15 = predicates[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {
            var predicate = _step15.value;

            if (!item.satisfiesPredicate(predicate)) {
              return false;
            }
          }
        } catch (err) {
          _didIteratorError15 = true;
          _iteratorError15 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion15 && _iterator15.return != null) {
              _iterator15.return();
            }
          } finally {
            if (_didIteratorError15) {
              throw _iteratorError15;
            }
          }
        }

        return true;
      });
      return results;
    }
  }, {
    key: "importPayloads",
    value: function importPayloads(payloads) {
      var delta, collection, items, _iteratorNormalCompletion16, _didIteratorError16, _iteratorError16, _iterator16, _step16, item;

      return regeneratorRuntime.async(function importPayloads$(_context28) {
        while (1) {
          switch (_context28.prev = _context28.next) {
            case 0:
              delta = new _Payloads__WEBPACK_IMPORTED_MODULE_6__["DeltaFileImport"]({
                baseCollection: this.getMasterCollection(),
                applyCollection: new _Payloads__WEBPACK_IMPORTED_MODULE_6__["PayloadCollection"]({
                  payloads: payloads,
                  source: _Payloads__WEBPACK_IMPORTED_MODULE_6__["PayloadSources"].FileImport
                })
              });
              _context28.next = 3;
              return regeneratorRuntime.awrap(delta.resultingCollection());

            case 3:
              collection = _context28.sent;
              _context28.next = 6;
              return regeneratorRuntime.awrap(this.mapCollectionToLocalItems({
                collection: collection
              }));

            case 6:
              items = _context28.sent;
              _iteratorNormalCompletion16 = true;
              _didIteratorError16 = false;
              _iteratorError16 = undefined;
              _context28.prev = 10;
              _iterator16 = items[Symbol.iterator]();

            case 12:
              if (_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done) {
                _context28.next = 20;
                break;
              }

              item = _step16.value;
              _context28.next = 16;
              return regeneratorRuntime.awrap(this.setItemDirty(item, true, false));

            case 16:
              item.deleted = false;

            case 17:
              _iteratorNormalCompletion16 = true;
              _context28.next = 12;
              break;

            case 20:
              _context28.next = 26;
              break;

            case 22:
              _context28.prev = 22;
              _context28.t0 = _context28["catch"](10);
              _didIteratorError16 = true;
              _iteratorError16 = _context28.t0;

            case 26:
              _context28.prev = 26;
              _context28.prev = 27;

              if (!_iteratorNormalCompletion16 && _iterator16.return != null) {
                _iterator16.return();
              }

            case 29:
              _context28.prev = 29;

              if (!_didIteratorError16) {
                _context28.next = 32;
                break;
              }

              throw _iteratorError16;

            case 32:
              return _context28.finish(29);

            case 33:
              return _context28.finish(26);

            case 34:
              return _context28.abrupt("return", items);

            case 35:
            case "end":
              return _context28.stop();
          }
        }
      }, null, this, [[10, 22, 26, 34], [27,, 29, 33]]);
    }
  }, {
    key: "noteCount",
    value: function noteCount() {
      return this.notes.filter(function (n) {
        return !n.dummy;
      }).length;
    }
  }, {
    key: "removeAllItemsFromMemory",
    value: function removeAllItemsFromMemory() {
      var _iteratorNormalCompletion17 = true;
      var _didIteratorError17 = false;
      var _iteratorError17 = undefined;

      try {
        for (var _iterator17 = this.items[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {
          var item = _step17.value;
          item.deleted = true;
        }
      } catch (err) {
        _didIteratorError17 = true;
        _iteratorError17 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion17 && _iterator17.return != null) {
            _iterator17.return();
          }
        } finally {
          if (_didIteratorError17) {
            throw _iteratorError17;
          }
        }
      }

      this.notifyMappingObservers(this.items);
      this.resetState();
    }
  }, {
    key: "findTag",
    value: function findTag(_ref18) {
      var title = _ref18.title;
      return Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_3__["findInArray"])(this.tags, 'title', title);
    }
  }, {
    key: "findOrCreateTag",
    value: function findOrCreateTag(_ref19) {
      var title, tag;
      return regeneratorRuntime.async(function findOrCreateTag$(_context29) {
        while (1) {
          switch (_context29.prev = _context29.next) {
            case 0:
              title = _ref19.title;
              tag = this.findTag({
                title: title
              });

              if (tag) {
                _context29.next = 6;
                break;
              }

              _context29.next = 5;
              return regeneratorRuntime.awrap(this.createItem({
                contentType: 'Tag',
                content: {
                  title: title
                },
                add: true,
                needsSync: true
              }));

            case 5:
              tag = _context29.sent;

            case 6:
              return _context29.abrupt("return", tag);

            case 7:
            case "end":
              return _context29.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "reorderTagLocation",
    value: function reorderTagLocation(tag) {
      lodash_pull__WEBPACK_IMPORTED_MODULE_1___default()(this.tags, tag);
      this.tags.splice(lodash_sortedIndexBy__WEBPACK_IMPORTED_MODULE_2___default()(this.tags, tag, function (tag) {
        if (tag.title) return tag.title.toLowerCase();else return '';
      }), 0, tag);
    }
  }, {
    key: "notesMatchingSmartTag",
    value: function notesMatchingSmartTag(tag) {
      var contentTypePredicate = new _Models__WEBPACK_IMPORTED_MODULE_4__["SFPredicate"]('content_type', '=', 'Note');
      var predicates = [contentTypePredicate, tag.content.predicate];

      if (!tag.content.isTrashTag) {
        var notTrashedPredicate = new _Models__WEBPACK_IMPORTED_MODULE_4__["SFPredicate"]('content.trashed', '=', false);
        predicates.push(notTrashedPredicate);
      }

      var results = this.itemsMatchingPredicates(predicates);
      return results;
    }
  }, {
    key: "trashSmartTag",
    value: function trashSmartTag() {
      return this.systemSmartTags.find(function (tag) {
        return tag.content.isTrashTag;
      });
    }
  }, {
    key: "trashedItems",
    value: function trashedItems() {
      return this.notesMatchingSmartTag(this.trashSmartTag());
    }
  }, {
    key: "emptyTrash",
    value: function emptyTrash() {
      var notes = this.trashedItems();
      var _iteratorNormalCompletion18 = true;
      var _didIteratorError18 = false;
      var _iteratorError18 = undefined;

      try {
        for (var _iterator18 = notes[Symbol.iterator](), _step18; !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {
          var note = _step18.value;
          this.setItemToBeDeleted(note);
        }
      } catch (err) {
        _didIteratorError18 = true;
        _iteratorError18 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion18 && _iterator18.return != null) {
            _iterator18.return();
          }
        } finally {
          if (_didIteratorError18) {
            throw _iteratorError18;
          }
        }
      }
    }
  }, {
    key: "buildSystemSmartTags",
    value: function buildSystemSmartTags() {
      this.systemSmartTags = _Models__WEBPACK_IMPORTED_MODULE_4__["SNSmartTag"].systemSmartTags();
    }
  }, {
    key: "getSmartTagWithId",
    value: function getSmartTagWithId(id) {
      return this.getSmartTags().find(function (candidate) {
        return candidate.uuid === id;
      });
    }
  }, {
    key: "getSmartTags",
    value: function getSmartTags() {
      var userTags = this.validItemsForContentType(_Models__WEBPACK_IMPORTED_MODULE_4__["ContentTypes"].SmartTag).sort(function (a, b) {
        return a.content.title < b.content.title ? -1 : 1;
      });
      return this.systemSmartTags.concat(userTags);
    }
  }, {
    key: "allItems",
    get: function get() {
      return this.items.slice();
    }
  }, {
    key: "allNondummyItems",
    get: function get() {
      return this.items.filter(function (item) {
        return !item.dummy;
      });
    }
  }, {
    key: "nonDeletedItems",
    get: function get() {
      return this.items.filter(function (item) {
        return !item.dummy && !item.deleted;
      });
    }
  }]);

  return SNModelManager;
}(_Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_5__["PureService"]);

/***/ }),

/***/ "./lib/services/privileges/privileges_service.js":
/*!*******************************************************!*\
  !*** ./lib/services/privileges/privileges_service.js ***!
  \*******************************************************/
/*! exports provided: ProtectedActions, PrivilegeCredentials, PRIVILEGE_SESSION_LENGTH_NONE, PRIVILEGE_SESSION_LENGTH_FIVE_MINUTES, PRIVILEGE_SESSION_LENGTH_ONE_HOUR, PRIVILEGE_SESSION_LENGTH_ONE_WEEK, SNPrivilegesService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProtectedActions", function() { return ProtectedActions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PrivilegeCredentials", function() { return PrivilegeCredentials; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PRIVILEGE_SESSION_LENGTH_NONE", function() { return PRIVILEGE_SESSION_LENGTH_NONE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PRIVILEGE_SESSION_LENGTH_FIVE_MINUTES", function() { return PRIVILEGE_SESSION_LENGTH_FIVE_MINUTES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PRIVILEGE_SESSION_LENGTH_ONE_HOUR", function() { return PRIVILEGE_SESSION_LENGTH_ONE_HOUR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PRIVILEGE_SESSION_LENGTH_ONE_WEEK", function() { return PRIVILEGE_SESSION_LENGTH_ONE_WEEK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNPrivilegesService", function() { return SNPrivilegesService; });
/* harmony import */ var _Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/services/pure_service */ "./lib/services/pure_service.js");
/* harmony import */ var _Models_privileges_privileges__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Models/privileges/privileges */ "./lib/models/privileges/privileges.js");
/* harmony import */ var _Models_core_predicate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Models/core/predicate */ "./lib/models/core/predicate.js");
/* harmony import */ var _Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Lib/storage_keys */ "./lib/storage_keys.js");
/* harmony import */ var _Payloads_generator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Payloads/generator */ "./lib/protocol/payloads/generator.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }






var ProtectedActions = {
  ManageExtensions: 'ActionManageExtensions',
  ManageBackups: 'ActionManageBackups',
  ViewProtectedNotes: 'ActionViewProtectedNotes',
  ManagePrivileges: 'ActionManagePrivileges',
  ManagePasscode: 'ActionManagePasscode',
  DeleteNote: 'ActionDeleteNote'
};
var PrivilegeCredentials = {
  AccountPassword: 'CredentialAccountPassword',
  LocalPasscode: 'CredentialLocalPasscode'
};
var PRIVILEGE_SESSION_LENGTH_NONE = 0;
var PRIVILEGE_SESSION_LENGTH_FIVE_MINUTES = 300;
var PRIVILEGE_SESSION_LENGTH_ONE_HOUR = 3600;
var PRIVILEGE_SESSION_LENGTH_ONE_WEEK = 604800;
var SNPrivilegesService =
/*#__PURE__*/
function (_PureService) {
  _inherits(SNPrivilegesService, _PureService);

  function SNPrivilegesService(_ref) {
    var _this;

    var modelManager = _ref.modelManager,
        syncService = _ref.syncService,
        singletonManager = _ref.singletonManager,
        keyManager = _ref.keyManager,
        storageService = _ref.storageService,
        sessionManager = _ref.sessionManager;

    _classCallCheck(this, SNPrivilegesService);

    if (!modelManager || !syncService || !singletonManager || !keyManager) {
      throw 'Invalid privileges manager construction.';
    }

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNPrivilegesService).call(this));
    _this.modelManager = modelManager;
    _this.syncService = syncService;
    _this.singletonManager = singletonManager;
    _this.keyManager = keyManager;
    _this.storageService = storageService;
    _this.sessionManager = sessionManager;

    _this.loadDefaults();

    return _this;
  }

  _createClass(SNPrivilegesService, [{
    key: "loadDefaults",
    value: function loadDefaults() {
      this.availableActions = Object.keys(ProtectedActions).map(function (key) {
        return ProtectedActions[key];
      });
      this.availableCredentials = [PrivilegeCredentials.AccountPassword, PrivilegeCredentials.LocalPasscode];
      this.sessionLengths = [PRIVILEGE_SESSION_LENGTH_NONE, PRIVILEGE_SESSION_LENGTH_FIVE_MINUTES, PRIVILEGE_SESSION_LENGTH_ONE_HOUR, PRIVILEGE_SESSION_LENGTH_ONE_WEEK];
    }
  }, {
    key: "getAvailableActions",
    value: function getAvailableActions() {
      return this.availableActions;
    }
  }, {
    key: "getAvailableCredentials",
    value: function getAvailableCredentials() {
      return this.availableCredentials;
    }
    /**
     * The credentials currently required to perform this action.
     */

  }, {
    key: "netCredentialsForAction",
    value: function netCredentialsForAction(action) {
      var privileges, credentials, netCredentials, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, credential, isOnline, hasPasscode;

      return regeneratorRuntime.async(function netCredentialsForAction$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return regeneratorRuntime.awrap(this.getPrivileges());

            case 2:
              privileges = _context.sent;
              credentials = privileges.getCredentialsForAction(action);
              netCredentials = [];
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context.prev = 8;
              _iterator = credentials[Symbol.iterator]();

            case 10:
              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                _context.next = 27;
                break;
              }

              credential = _step.value;

              if (!(credential === PrivilegeCredentials.AccountPassword)) {
                _context.next = 19;
                break;
              }

              _context.next = 15;
              return regeneratorRuntime.awrap(this.sessionManager.online());

            case 15:
              isOnline = _context.sent;

              if (isOnline) {
                netCredentials.push(credential);
              }

              _context.next = 24;
              break;

            case 19:
              if (!(credential === PrivilegeCredentials.LocalPasscode)) {
                _context.next = 24;
                break;
              }

              _context.next = 22;
              return regeneratorRuntime.awrap(this.keyManager.hasRootKeyWrapper());

            case 22:
              hasPasscode = _context.sent;

              if (hasPasscode) {
                netCredentials.push(credential);
              }

            case 24:
              _iteratorNormalCompletion = true;
              _context.next = 10;
              break;

            case 27:
              _context.next = 33;
              break;

            case 29:
              _context.prev = 29;
              _context.t0 = _context["catch"](8);
              _didIteratorError = true;
              _iteratorError = _context.t0;

            case 33:
              _context.prev = 33;
              _context.prev = 34;

              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }

            case 36:
              _context.prev = 36;

              if (!_didIteratorError) {
                _context.next = 39;
                break;
              }

              throw _iteratorError;

            case 39:
              return _context.finish(36);

            case 40:
              return _context.finish(33);

            case 41:
              return _context.abrupt("return", netCredentials);

            case 42:
            case "end":
              return _context.stop();
          }
        }
      }, null, this, [[8, 29, 33, 41], [34,, 36, 40]]);
    }
  }, {
    key: "getPrivileges",
    value: function getPrivileges() {
      var contentType, predicate;
      return regeneratorRuntime.async(function getPrivileges$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              contentType = _Models_privileges_privileges__WEBPACK_IMPORTED_MODULE_1__["SFPrivileges"].contentType();
              predicate = new _Models_core_predicate__WEBPACK_IMPORTED_MODULE_2__["SFPredicate"]('content_type', '=', contentType);
              return _context2.abrupt("return", this.singletonManager.findOrCreateSingleton({
                predicate: predicate,
                createPayload: Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_4__["CreateMaxPayloadFromAnyObject"])({
                  object: {
                    content_type: contentType,
                    content: {}
                  }
                })
              }));

            case 3:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "savePrivileges",
    value: function savePrivileges() {
      var privileges;
      return regeneratorRuntime.async(function savePrivileges$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return regeneratorRuntime.awrap(this.getPrivileges());

            case 2:
              privileges = _context3.sent;
              _context3.next = 5;
              return regeneratorRuntime.awrap(this.modelManager.setItemDirty(privileges));

            case 5:
              return _context3.abrupt("return", this.syncService.sync());

            case 6:
            case "end":
              return _context3.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "setSessionLength",
    value: function setSessionLength(length) {
      var addSecondsToNow, expiresAt;
      return regeneratorRuntime.async(function setSessionLength$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              addSecondsToNow = function addSecondsToNow(seconds) {
                var date = new Date();
                date.setSeconds(date.getSeconds() + seconds);
                return date;
              };

              expiresAt = addSecondsToNow(length);
              _context4.next = 4;
              return regeneratorRuntime.awrap(this.storageService.setValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__["StorageKeys"].PrivilegesExpirey, expiresAt));

            case 4:
              _context4.next = 6;
              return regeneratorRuntime.awrap(this.storageService.setValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__["StorageKeys"].PrivilegesSessionLength, length));

            case 6:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "clearSession",
    value: function clearSession() {
      return regeneratorRuntime.async(function clearSession$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              return _context5.abrupt("return", this.setSessionLength(PRIVILEGE_SESSION_LENGTH_NONE));

            case 1:
            case "end":
              return _context5.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "getSelectedSessionLength",
    value: function getSelectedSessionLength() {
      var length;
      return regeneratorRuntime.async(function getSelectedSessionLength$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return regeneratorRuntime.awrap(this.storageService.getValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__["StorageKeys"].PrivilegesSessionLength));

            case 2:
              length = _context6.sent;

              if (!length) {
                _context6.next = 7;
                break;
              }

              return _context6.abrupt("return", length);

            case 7:
              return _context6.abrupt("return", PRIVILEGE_SESSION_LENGTH_NONE);

            case 8:
            case "end":
              return _context6.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "getSessionExpirey",
    value: function getSessionExpirey() {
      var expiresAt;
      return regeneratorRuntime.async(function getSessionExpirey$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              _context7.next = 2;
              return regeneratorRuntime.awrap(this.storageService.getValue(_Lib_storage_keys__WEBPACK_IMPORTED_MODULE_3__["StorageKeys"].PrivilegesExpirey));

            case 2:
              expiresAt = _context7.sent;

              if (!expiresAt) {
                _context7.next = 7;
                break;
              }

              return _context7.abrupt("return", new Date(expiresAt));

            case 7:
              return _context7.abrupt("return", new Date());

            case 8:
            case "end":
              return _context7.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "actionHasPrivilegesConfigured",
    value: function actionHasPrivilegesConfigured(action) {
      return regeneratorRuntime.async(function actionHasPrivilegesConfigured$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              _context8.next = 2;
              return regeneratorRuntime.awrap(this.netCredentialsForAction(action));

            case 2:
              _context8.t0 = _context8.sent.length;
              return _context8.abrupt("return", _context8.t0 > 0);

            case 4:
            case "end":
              return _context8.stop();
          }
        }
      }, null, this);
    }
    /**
     * Whether the action requires present authentication.
     */

  }, {
    key: "actionRequiresPrivilege",
    value: function actionRequiresPrivilege(action) {
      var expiresAt, netCredentials;
      return regeneratorRuntime.async(function actionRequiresPrivilege$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              _context9.next = 2;
              return regeneratorRuntime.awrap(this.getSessionExpirey());

            case 2:
              expiresAt = _context9.sent;

              if (!(expiresAt > new Date())) {
                _context9.next = 5;
                break;
              }

              return _context9.abrupt("return", false);

            case 5:
              _context9.next = 7;
              return regeneratorRuntime.awrap(this.netCredentialsForAction(action));

            case 7:
              netCredentials = _context9.sent;
              return _context9.abrupt("return", netCredentials.length > 0);

            case 9:
            case "end":
              return _context9.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "authenticateAction",
    value: function authenticateAction(action, credentialAuthMapping) {
      var requiredCredentials, successfulCredentials, failedCredentials, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, credential, passesAuth;

      return regeneratorRuntime.async(function authenticateAction$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              _context10.next = 2;
              return regeneratorRuntime.awrap(this.netCredentialsForAction(action));

            case 2:
              requiredCredentials = _context10.sent;
              successfulCredentials = [];
              failedCredentials = [];
              _iteratorNormalCompletion2 = true;
              _didIteratorError2 = false;
              _iteratorError2 = undefined;
              _context10.prev = 8;
              _iterator2 = requiredCredentials[Symbol.iterator]();

            case 10:
              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
                _context10.next = 19;
                break;
              }

              credential = _step2.value;
              _context10.next = 14;
              return regeneratorRuntime.awrap(this.verifyAuthenticationParameters(credential, credentialAuthMapping[credential]));

            case 14:
              passesAuth = _context10.sent;

              if (passesAuth) {
                successfulCredentials.push(credential);
              } else {
                failedCredentials.push(credential);
              }

            case 16:
              _iteratorNormalCompletion2 = true;
              _context10.next = 10;
              break;

            case 19:
              _context10.next = 25;
              break;

            case 21:
              _context10.prev = 21;
              _context10.t0 = _context10["catch"](8);
              _didIteratorError2 = true;
              _iteratorError2 = _context10.t0;

            case 25:
              _context10.prev = 25;
              _context10.prev = 26;

              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }

            case 28:
              _context10.prev = 28;

              if (!_didIteratorError2) {
                _context10.next = 31;
                break;
              }

              throw _iteratorError2;

            case 31:
              return _context10.finish(28);

            case 32:
              return _context10.finish(25);

            case 33:
              return _context10.abrupt("return", {
                success: failedCredentials.length === 0,
                successfulCredentials: successfulCredentials,
                failedCredentials: failedCredentials
              });

            case 34:
            case "end":
              return _context10.stop();
          }
        }
      }, null, this, [[8, 21, 25, 33], [26,, 28, 32]]);
    }
  }, {
    key: "verifyAuthenticationParameters",
    value: function verifyAuthenticationParameters(credential, value) {
      return regeneratorRuntime.async(function verifyAuthenticationParameters$(_context11) {
        while (1) {
          switch (_context11.prev = _context11.next) {
            case 0:
              if (!(credential === PrivilegeCredentials.AccountPassword)) {
                _context11.next = 4;
                break;
              }

              return _context11.abrupt("return", this.keyManager.validateAccountPassword(value));

            case 4:
              if (!(credential === PrivilegeCredentials.LocalPasscode)) {
                _context11.next = 6;
                break;
              }

              return _context11.abrupt("return", this.keyManager.validatePasscode(value));

            case 6:
            case "end":
              return _context11.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "displayInfoForCredential",
    value: function displayInfoForCredential(credential) {
      var metadata = {};
      metadata[PrivilegeCredentials.AccountPassword] = {
        label: "Account Password",
        prompt: "Please enter your account password."
      };
      metadata[PrivilegeCredentials.LocalPasscode] = {
        label: "Local Passcode",
        prompt: "Please enter your local passcode."
      };
      return metadata[credential];
    }
  }, {
    key: "displayInfoForAction",
    value: function displayInfoForAction(action) {
      var metadata = {};
      metadata[ProtectedActions.ManageExtensions] = {
        label: "Manage Extensions"
      };
      metadata[ProtectedActions.ManageBackups] = {
        label: "Download/Import Backups"
      };
      metadata[ProtectedActions.ViewProtectedNotes] = {
        label: "View Protected Notes"
      };
      metadata[ProtectedActions.ManagePrivileges] = {
        label: "Manage Privileges"
      };
      metadata[ProtectedActions.ManagePasscode] = {
        label: "Manage Passcode"
      };
      metadata[ProtectedActions.DeleteNote] = {
        label: "Delete Notes"
      };
      return metadata[action];
    }
  }, {
    key: "getSessionLengthOptions",
    value: function getSessionLengthOptions() {
      return [{
        value: PRIVILEGE_SESSION_LENGTH_NONE,
        label: "Don't Remember"
      }, {
        value: PRIVILEGE_SESSION_LENGTH_FIVE_MINUTES,
        label: "5 Minutes"
      }, {
        value: PRIVILEGE_SESSION_LENGTH_ONE_HOUR,
        label: "1 Hour"
      }, {
        value: PRIVILEGE_SESSION_LENGTH_ONE_WEEK,
        label: "1 Week"
      }];
    }
  }]);

  return SNPrivilegesService;
}(_Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__["PureService"]);

/***/ }),

/***/ "./lib/services/protocol_service.js":
/*!******************************************!*\
  !*** ./lib/services/protocol_service.js ***!
  \******************************************/
/*! exports provided: SNProtocolService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNProtocolService", function() { return SNProtocolService; });
/* harmony import */ var _Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/services/pure_service */ "./lib/services/pure_service.js");
/* harmony import */ var sncrypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sncrypto */ "../sncrypto/dist/sncrypto.js");
/* harmony import */ var sncrypto__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sncrypto__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Lib_uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Lib/uuid */ "./lib/uuid.js");
/* harmony import */ var _Payloads__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads */ "./lib/protocol/payloads/index.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Protocol__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Protocol */ "./lib/protocol/index.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }







var SNProtocolService =
/*#__PURE__*/
function (_PureService) {
  _inherits(SNProtocolService, _PureService);

  function SNProtocolService(_ref) {
    var _this;

    var modelManager = _ref.modelManager,
        crypto = _ref.crypto;

    _classCallCheck(this, SNProtocolService);

    if (!modelManager) {
      throw 'Invalid ProtocolService construction.';
    }

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNProtocolService).call(this));
    _this.operators = [];
    _this.modelManager = modelManager;
    _this.crypto = crypto;

    if (!_this.crypto && Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_4__["isWebEnvironment"])() && Object(sncrypto__WEBPACK_IMPORTED_MODULE_1__["isWebCryptoAvailable"])()) {
      /** IE and Edge do not support pbkdf2 in WebCrypto. */
      _this.crypto = new sncrypto__WEBPACK_IMPORTED_MODULE_1__["SNWebCrypto"]();
    }

    _Lib_uuid__WEBPACK_IMPORTED_MODULE_2__["Uuid"].SetGenerators({
      syncImpl: _this.crypto.generateUUIDSync,
      asyncImpl: _this.crypto.generateUUIDSync
    });
    return _this;
  }
  /**
   * To avoid circular dependencies in constructor, applications must create
   * a key manager separately and feed it into the protocolService here.
   * @param keyManager  A fully constructed keyManager
   */


  _createClass(SNProtocolService, [{
    key: "setKeyManager",
    value: function setKeyManager(keyManager) {
      this.keyManager = keyManager;
    }
  }, {
    key: "setItemsKeyManager",
    value: function setItemsKeyManager(itemsKeyManager) {
      var _this2 = this;

      this.keyObsUnsubscribe = itemsKeyManager.addItemsKeyChangeObserver(function _callee() {
        return regeneratorRuntime.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return regeneratorRuntime.awrap(_this2.decryptErroredItems());

              case 2:
              case "end":
                return _context.stop();
            }
          }
        });
      });
    }
  }, {
    key: "deinit",
    value: function deinit() {
      return regeneratorRuntime.async(function deinit$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              this.keyObsUnsubscribe();
              return _context2.abrupt("return", _get(_getPrototypeOf(SNProtocolService.prototype), "deinit", this).call(this));

            case 2:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "getLatestVersion",
    value: function getLatestVersion() {
      return _Protocol__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V004;
    }
  }, {
    key: "getUserVersion",
    value: function getUserVersion() {
      var keyParams;
      return regeneratorRuntime.async(function getUserVersion$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return regeneratorRuntime.awrap(this.keyManager.getRootKeyParams());

            case 2:
              keyParams = _context3.sent;
              return _context3.abrupt("return", keyParams && keyParams.version);

            case 4:
            case "end":
              return _context3.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "upgradeAvailable",
    value: function upgradeAvailable() {
      return regeneratorRuntime.async(function upgradeAvailable$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return regeneratorRuntime.awrap(this.getUserVersion());

            case 2:
              _context4.t0 = _context4.sent;
              _context4.t1 = this.getLatestVersion();
              return _context4.abrupt("return", _context4.t0 !== _context4.t1);

            case 5:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "supportsPasswordDerivationCost",
    value: function supportsPasswordDerivationCost(cost) {
      // Some passwords are created on platforms with stronger pbkdf2 capabilities, like iOS or WebCrypto,
      // if user has high password cost and is using browser that doesn't support WebCrypto,
      // we want to tell them that they can't login with this browser.
      if (cost > 5000) {
        return this.crypto instanceof sncrypto__WEBPACK_IMPORTED_MODULE_1__["SNWebCrypto"];
      } else {
        return true;
      }
    }
    /**
     * @returns  The versions that this library supports.
    */

  }, {
    key: "supportedVersions",
    value: function supportedVersions() {
      return [_Protocol__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V001, _Protocol__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V002, _Protocol__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V003, _Protocol__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V004];
    }
  }, {
    key: "isVersionNewerThanLibraryVersion",
    value: function isVersionNewerThanLibraryVersion(version) {
      var libraryVersion = this.getLatestVersion();
      return parseInt(version) > parseInt(libraryVersion);
    }
  }, {
    key: "isProtocolVersionOutdated",
    value: function isProtocolVersionOutdated(version) {
      // YYYY-MM-DD
      var expirationDates = {};
      expirationDates[_Protocol__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V001] = Date.parse('2018-01-01');
      expirationDates[_Protocol__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V002] = Date.parse('2020-01-01');
      var date = expirationDates[version];

      if (!date) {
        // No expiration date, is active version
        return false;
      }

      var expired = new Date() > date;
      return expired;
    }
  }, {
    key: "costMinimumForVersion",
    value: function costMinimumForVersion(version) {
      switch (version) {
        case _Protocol__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V001:
          return _Protocol__WEBPACK_IMPORTED_MODULE_5__["SNProtocolOperator001"].pwCost();

        case _Protocol__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V002:
          return _Protocol__WEBPACK_IMPORTED_MODULE_5__["SNProtocolOperator002"].pwCost();

        case _Protocol__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V003:
          return _Protocol__WEBPACK_IMPORTED_MODULE_5__["SNProtocolOperator003"].pwCost();

        case _Protocol__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V004:
          return _Protocol__WEBPACK_IMPORTED_MODULE_5__["SNProtocolOperator004"].kdfIterations();

        default:
          throw "Unable to find cost minimum for version ".concat(version);
      }
    }
  }, {
    key: "versionForPayload",
    value: function versionForPayload(payload) {
      return payload.content.substring(0, _Protocol__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].VersionLength);
    }
  }, {
    key: "createOperatorForLatestVersion",
    value: function createOperatorForLatestVersion() {
      return this.createOperatorForVersion(this.getLatestVersion());
    }
  }, {
    key: "createOperatorForVersion",
    value: function createOperatorForVersion(version) {
      if (version === _Protocol__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V001) {
        return new _Protocol__WEBPACK_IMPORTED_MODULE_5__["SNProtocolOperator001"](this.crypto);
      } else if (version === _Protocol__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V002) {
        return new _Protocol__WEBPACK_IMPORTED_MODULE_5__["SNProtocolOperator002"](this.crypto);
      } else if (version === _Protocol__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V003) {
        return new _Protocol__WEBPACK_IMPORTED_MODULE_5__["SNProtocolOperator003"](this.crypto);
      } else if (version === _Protocol__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V004) {
        return new _Protocol__WEBPACK_IMPORTED_MODULE_5__["SNProtocolOperator004"](this.crypto);
      } else if (version === _Protocol__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V000Base64Decrypted) {
        return this.createOperatorForLatestVersion();
      } else {
        throw "Unable to find operator for version ".concat(version);
      }
    }
  }, {
    key: "operatorForVersion",
    value: function operatorForVersion(version) {
      var operatorKey = version;
      var operator = this.operators[operatorKey];

      if (!operator) {
        operator = this.createOperatorForVersion(version);
        this.operators[operatorKey] = operator;
      }

      return operator;
    }
  }, {
    key: "defaultOperator",
    value: function defaultOperator() {
      return this.operatorForVersion(this.getLatestVersion());
    }
  }, {
    key: "computeRootKey",
    value: function computeRootKey(_ref2) {
      var password, keyParams, version, operator;
      return regeneratorRuntime.async(function computeRootKey$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              password = _ref2.password, keyParams = _ref2.keyParams;
              version = keyParams.version;
              operator = this.operatorForVersion(version);
              return _context5.abrupt("return", operator.computeRootKey({
                password: password,
                keyParams: keyParams
              }));

            case 4:
            case "end":
              return _context5.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "createRootKey",
    value: function createRootKey(_ref3) {
      var identifier, password, operator;
      return regeneratorRuntime.async(function createRootKey$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              identifier = _ref3.identifier, password = _ref3.password;
              operator = this.defaultOperator();
              return _context6.abrupt("return", operator.createRootKey({
                identifier: identifier,
                password: password
              }));

            case 3:
            case "end":
              return _context6.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "getRootKeyParams",
    value: function getRootKeyParams() {
      return regeneratorRuntime.async(function getRootKeyParams$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              return _context7.abrupt("return", this.keyManager.getRootKeyParams());

            case 1:
            case "end":
              return _context7.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "payloadContentFormatForIntent",
    value: function payloadContentFormatForIntent(_ref4) {
      var key = _ref4.key,
          intent = _ref4.intent;

      if (!key) {
        /** Decrypted */
        if (intent === _Protocol__WEBPACK_IMPORTED_MODULE_5__["EncryptionIntents"].LocalStorageDecrypted || intent === _Protocol__WEBPACK_IMPORTED_MODULE_5__["EncryptionIntents"].LocalStoragePreferEncrypted || intent === _Protocol__WEBPACK_IMPORTED_MODULE_5__["EncryptionIntents"].FileDecrypted || intent === _Protocol__WEBPACK_IMPORTED_MODULE_5__["EncryptionIntents"].FilePreferEncrypted) {
          return _Payloads__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBareObject;
        } else if (intent === _Protocol__WEBPACK_IMPORTED_MODULE_5__["EncryptionIntents"].SyncDecrypted) {
          return _Payloads__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBase64String;
        } else {
          throw "Unhandled decrypted case in protocolService.payloadContentFormatForIntent.";
        }
      } else {
        /** Encrypted */
        if (intent === _Protocol__WEBPACK_IMPORTED_MODULE_5__["EncryptionIntents"].Sync || intent === _Protocol__WEBPACK_IMPORTED_MODULE_5__["EncryptionIntents"].FileEncrypted || intent === _Protocol__WEBPACK_IMPORTED_MODULE_5__["EncryptionIntents"].FilePreferEncrypted || intent === _Protocol__WEBPACK_IMPORTED_MODULE_5__["EncryptionIntents"].LocalStorageEncrypted || intent === _Protocol__WEBPACK_IMPORTED_MODULE_5__["EncryptionIntents"].LocalStoragePreferEncrypted) {
          return _Payloads__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].EncryptedString;
        } else {
          throw "Unhandled encrypted case in protocolService.payloadContentFormatForIntent.";
        }
      }
    }
    /**
     * Generates parameters for a payload that are typically encrypted, and used for syncing or saving locally.
     * Parameters are non-typed objects that can later by converted to objects.
     * @param key Optional. The key to use to encrypt the payload. Will be looked up if not supplied.
     * @returns A plain key/value object.
     */

  }, {
    key: "payloadByEncryptingPayload",
    value: function payloadByEncryptingPayload(_ref5) {
      var payload, key, intent, version, format, operator, encryptionParameters;
      return regeneratorRuntime.async(function payloadByEncryptingPayload$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              payload = _ref5.payload, key = _ref5.key, intent = _ref5.intent;

              if (!payload.errorDecrypting) {
                _context8.next = 3;
                break;
              }

              return _context8.abrupt("return", payload);

            case 3:
              if (!(!key && !Object(_Protocol__WEBPACK_IMPORTED_MODULE_5__["isDecryptedIntent"])(intent))) {
                _context8.next = 7;
                break;
              }

              _context8.next = 6;
              return regeneratorRuntime.awrap(this.keyManager.keyToUseForEncryptionOfPayload({
                payload: payload,
                intent: intent
              }));

            case 6:
              key = _context8.sent;

            case 7:
              if (!(!key && Object(_Protocol__WEBPACK_IMPORTED_MODULE_5__["intentRequiresEncryption"])(intent))) {
                _context8.next = 9;
                break;
              }

              throw 'Attempting to generate encrypted payload with no key.';

            case 9:
              if (!(payload.getFormat() !== _Payloads__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBareObject)) {
                _context8.next = 11;
                break;
              }

              throw 'Attempting to encrypt already encrypted payload.';

            case 11:
              if (payload.isPayload) {
                _context8.next = 13;
                break;
              }

              throw 'Attempting to encrypt non-payload.';

            case 13:
              if (payload.content) {
                _context8.next = 15;
                break;
              }

              throw 'Attempting to encrypt payload with no content.';

            case 15:
              if (payload.uuid) {
                _context8.next = 17;
                break;
              }

              throw 'Attempting to encrypt payload with no uuid.';

            case 17:
              version = key ? key.version : this.getLatestVersion();
              format = this.payloadContentFormatForIntent({
                key: key,
                intent: intent
              });
              operator = this.operatorForVersion(version);
              _context8.next = 22;
              return regeneratorRuntime.awrap(operator.generateEncryptionParameters({
                payload: payload,
                key: key,
                format: format
              }));

            case 22:
              encryptionParameters = _context8.sent;

              if (encryptionParameters) {
                _context8.next = 25;
                break;
              }

              throw 'Unable to generate encryption parameters';

            case 25:
              return _context8.abrupt("return", Object(_Payloads__WEBPACK_IMPORTED_MODULE_3__["CreateIntentPayloadFromObject"])({
                object: payload,
                override: encryptionParameters,
                intent: intent
              }));

            case 26:
            case "end":
              return _context8.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "payloadsByEncryptingPayloads",
    value: function payloadsByEncryptingPayloads(_ref6) {
      var payloads, intent, results, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, payload, useIntent, encryptedPayload;

      return regeneratorRuntime.async(function payloadsByEncryptingPayloads$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              payloads = _ref6.payloads, intent = _ref6.intent;
              results = [];
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context9.prev = 5;
              _iterator = payloads[Symbol.iterator]();

            case 7:
              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                _context9.next = 17;
                break;
              }

              payload = _step.value;
              useIntent = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_4__["isFunction"])(intent) ? intent(payload) : intent;
              _context9.next = 12;
              return regeneratorRuntime.awrap(this.payloadByEncryptingPayload({
                payload: payload,
                intent: useIntent
              }));

            case 12:
              encryptedPayload = _context9.sent;
              results.push(encryptedPayload);

            case 14:
              _iteratorNormalCompletion = true;
              _context9.next = 7;
              break;

            case 17:
              _context9.next = 23;
              break;

            case 19:
              _context9.prev = 19;
              _context9.t0 = _context9["catch"](5);
              _didIteratorError = true;
              _iteratorError = _context9.t0;

            case 23:
              _context9.prev = 23;
              _context9.prev = 24;

              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }

            case 26:
              _context9.prev = 26;

              if (!_didIteratorError) {
                _context9.next = 29;
                break;
              }

              throw _iteratorError;

            case 29:
              return _context9.finish(26);

            case 30:
              return _context9.finish(23);

            case 31:
              return _context9.abrupt("return", results);

            case 32:
            case "end":
              return _context9.stop();
          }
        }
      }, null, this, [[5, 19, 23, 31], [24,, 26, 30]]);
    }
    /**
     * Generates a new payload by decrypting the input payload.
     * If the input payload is already decrypted, it will be returned as-is.
     * @param payload - The payload to decrypt.
     * @param key - Optional. The key to use to decrypt the payload. 
     *              If none is supplied, it will be automatically looked up.
     */

  }, {
    key: "payloadByDecryptingPayload",
    value: function payloadByDecryptingPayload(_ref7) {
      var payload, key, format, version, operator, encryptionParameters, decryptedParameters;
      return regeneratorRuntime.async(function payloadByDecryptingPayload$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              payload = _ref7.payload, key = _ref7.key;

              if (payload.content) {
                _context10.next = 3;
                break;
              }

              throw 'Attempting to decrypt payload that has no content.';

            case 3:
              if (payload.isPayload) {
                _context10.next = 5;
                break;
              }

              throw 'Attempting to decrypt non-payload.';

            case 5:
              format = payload.getFormat();

              if (!(format === _Payloads__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].DecryptedBareObject)) {
                _context10.next = 8;
                break;
              }

              return _context10.abrupt("return", payload);

            case 8:
              if (!(!key && format === _Payloads__WEBPACK_IMPORTED_MODULE_3__["PayloadFormats"].EncryptedString)) {
                _context10.next = 14;
                break;
              }

              _context10.next = 11;
              return regeneratorRuntime.awrap(this.keyManager.keyToUseForDecryptionOfPayload({
                payload: payload
              }));

            case 11:
              key = _context10.sent;

              if (key) {
                _context10.next = 14;
                break;
              }

              return _context10.abrupt("return", Object(_Payloads__WEBPACK_IMPORTED_MODULE_3__["CreateMaxPayloadFromAnyObject"])({
                object: payload,
                override: {
                  waitingForKey: true,
                  errorDecrypting: true
                }
              }));

            case 14:
              version = this.versionForPayload(payload);
              operator = this.operatorForVersion(version);
              encryptionParameters = Object(_Payloads__WEBPACK_IMPORTED_MODULE_3__["CreateEncryptionParameters"])(payload);
              _context10.next = 19;
              return regeneratorRuntime.awrap(operator.generateDecryptedParameters({
                encryptedParameters: encryptionParameters,
                key: key
              }));

            case 19:
              decryptedParameters = _context10.sent;
              return _context10.abrupt("return", Object(_Payloads__WEBPACK_IMPORTED_MODULE_3__["CreateMaxPayloadFromAnyObject"])({
                object: payload,
                override: decryptedParameters
              }));

            case 21:
            case "end":
              return _context10.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "payloadsByDecryptingPayloads",
    value: function payloadsByDecryptingPayloads(_ref8) {
      var payloads, throws, decryptedPayloads, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, encryptedPayload, isDecryptable, decryptedPayload, _override;

      return regeneratorRuntime.async(function payloadsByDecryptingPayloads$(_context11) {
        while (1) {
          switch (_context11.prev = _context11.next) {
            case 0:
              payloads = _ref8.payloads, throws = _ref8.throws;
              decryptedPayloads = [];
              _iteratorNormalCompletion2 = true;
              _didIteratorError2 = false;
              _iteratorError2 = undefined;
              _context11.prev = 5;
              _iterator2 = payloads[Symbol.iterator]();

            case 7:
              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
                _context11.next = 37;
                break;
              }

              encryptedPayload = _step2.value;

              if (encryptedPayload) {
                _context11.next = 12;
                break;
              }

              /** Keep in counts similar to out counts */
              decryptedPayloads.push(encryptedPayload);
              return _context11.abrupt("continue", 34);

            case 12:
              if (encryptedPayload.isPayload) {
                _context11.next = 14;
                break;
              }

              throw 'Attempting to decrypt non-payload object in payloadsByDecryptingPayloads.';

            case 14:
              if (!(encryptedPayload.deleted === true && Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_4__["isNullOrUndefined"])(encryptedPayload.content))) {
                _context11.next = 17;
                break;
              }

              decryptedPayloads.push(encryptedPayload);
              return _context11.abrupt("continue", 34);

            case 17:
              isDecryptable = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_4__["isString"])(encryptedPayload.content);

              if (isDecryptable) {
                _context11.next = 21;
                break;
              }

              decryptedPayloads.push(encryptedPayload);
              return _context11.abrupt("continue", 34);

            case 21:
              _context11.prev = 21;
              _context11.next = 24;
              return regeneratorRuntime.awrap(this.payloadByDecryptingPayload({
                payload: encryptedPayload
              }));

            case 24:
              decryptedPayload = _context11.sent;
              decryptedPayloads.push(decryptedPayload);
              _context11.next = 34;
              break;

            case 28:
              _context11.prev = 28;
              _context11.t0 = _context11["catch"](21);
              decryptedPayloads.push(Object(_Payloads__WEBPACK_IMPORTED_MODULE_3__["CreateMaxPayloadFromAnyObject"])({
                object: encryptedPayload,
                override: (_override = {}, _defineProperty(_override, _Payloads__WEBPACK_IMPORTED_MODULE_3__["PayloadFields"].ErrorDecrypting, true), _defineProperty(_override, _Payloads__WEBPACK_IMPORTED_MODULE_3__["PayloadFields"].ErrorDecryptingChanged, !encryptedPayload.errorDecrypting), _override)
              }));

              if (!throws) {
                _context11.next = 33;
                break;
              }

              throw _context11.t0;

            case 33:
              console.error("Error decrypting payload", encryptedPayload, _context11.t0);

            case 34:
              _iteratorNormalCompletion2 = true;
              _context11.next = 7;
              break;

            case 37:
              _context11.next = 43;
              break;

            case 39:
              _context11.prev = 39;
              _context11.t1 = _context11["catch"](5);
              _didIteratorError2 = true;
              _iteratorError2 = _context11.t1;

            case 43:
              _context11.prev = 43;
              _context11.prev = 44;

              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }

            case 46:
              _context11.prev = 46;

              if (!_didIteratorError2) {
                _context11.next = 49;
                break;
              }

              throw _iteratorError2;

            case 49:
              return _context11.finish(46);

            case 50:
              return _context11.finish(43);

            case 51:
              return _context11.abrupt("return", decryptedPayloads);

            case 52:
            case "end":
              return _context11.stop();
          }
        }
      }, null, this, [[5, 39, 43, 51], [21, 28], [44,, 46, 50]]);
    }
    /**
     * If an item was attempting to decrypt, but failed, either because the keys
     * for that item had not downloaded yet, or any other reason, it will be deferred
     * item.errorDecrypting = true and possibly item.waitingForKey = true.
     * Here we find such items, and attempt to decrypt them again.
     */

  }, {
    key: "decryptErroredItems",
    value: function decryptErroredItems() {
      var items, payloads, decrypted;
      return regeneratorRuntime.async(function decryptErroredItems$(_context12) {
        while (1) {
          switch (_context12.prev = _context12.next) {
            case 0:
              items = this.modelManager.allItems.filter(function (item) {
                return item.waitingForKey || item.errorDecrypting;
              });

              if (!(items.length === 0)) {
                _context12.next = 3;
                break;
              }

              return _context12.abrupt("return");

            case 3:
              payloads = items.map(function (item) {
                return item.payloadRepresentation();
              });
              _context12.next = 6;
              return regeneratorRuntime.awrap(this.payloadsByDecryptingPayloads({
                payloads: payloads
              }));

            case 6:
              decrypted = _context12.sent;
              _context12.next = 9;
              return regeneratorRuntime.awrap(this.modelManager.mapPayloadsToLocalItems({
                payloads: decrypted
              }));

            case 9:
            case "end":
              return _context12.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "payloadsByDecryptingBackupFile",
    value: function payloadsByDecryptingBackupFile(_ref9) {
      var data, password, keyParams, rawItems, encryptedPayloads, decryptedPayloads, key;
      return regeneratorRuntime.async(function payloadsByDecryptingBackupFile$(_context13) {
        while (1) {
          switch (_context13.prev = _context13.next) {
            case 0:
              data = _ref9.data, password = _ref9.password;
              keyParams = data.keyParams || data.auth_params;
              rawItems = data.items;
              encryptedPayloads = rawItems.map(function (rawItem) {
                return Object(_Payloads__WEBPACK_IMPORTED_MODULE_3__["CreateSourcedPayloadFromObject"])({
                  object: rawItem,
                  source: _Payloads__WEBPACK_IMPORTED_MODULE_3__["PayloadSources"].FileImport
                });
              });

              if (!keyParams) {
                _context13.next = 13;
                break;
              }

              _context13.next = 7;
              return regeneratorRuntime.awrap(this.computeRootKey({
                password: password,
                keyParams: keyParams
              }));

            case 7:
              key = _context13.sent;
              _context13.next = 10;
              return regeneratorRuntime.awrap(this.payloadsByDecryptingPayloads({
                payloads: encryptedPayloads,
                key: key
              }));

            case 10:
              decryptedPayloads = _context13.sent;
              _context13.next = 14;
              break;

            case 13:
              decryptedPayloads = encryptedPayloads;

            case 14:
              return _context13.abrupt("return", decryptedPayloads);

            case 15:
            case "end":
              return _context13.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "payloadsByDecryptingRawPayload",
    value: function payloadsByDecryptingRawPayload(_ref10) {
      var rawPayload, encryptedPayload;
      return regeneratorRuntime.async(function payloadsByDecryptingRawPayload$(_context14) {
        while (1) {
          switch (_context14.prev = _context14.next) {
            case 0:
              rawPayload = _ref10.rawPayload;
              encryptedPayload = Object(_Payloads__WEBPACK_IMPORTED_MODULE_3__["CreateSourcedPayloadFromObject"])({
                object: rawPayload
              });
              return _context14.abrupt("return", this.payloadByDecryptingPayload({
                payload: encryptedPayload
              }));

            case 3:
            case "end":
              return _context14.stop();
          }
        }
      }, null, this);
    }
    /**
     * Compares two keys for equality
     * @returns Boolean
    */

  }, {
    key: "compareRootKeys",
    value: function compareRootKeys(keyA, keyB) {
      return regeneratorRuntime.async(function compareRootKeys$(_context15) {
        while (1) {
          switch (_context15.prev = _context15.next) {
            case 0:
              return _context15.abrupt("return", keyA.compare(keyB));

            case 1:
            case "end":
              return _context15.stop();
          }
        }
      });
    }
  }, {
    key: "createKeyParams",
    value: function createKeyParams(keyParams) {
      if (keyParams.isKeyParamsObject) {
        throw 'Attempting to create key params from non-raw value.';
      }
      /* 002 doesn't have version automatically, newer versions do. */


      if (!keyParams.version) {
        keyParams.version = _Protocol__WEBPACK_IMPORTED_MODULE_5__["ProtocolVersions"].V002;
      }

      return Object(_Protocol__WEBPACK_IMPORTED_MODULE_5__["CreateKeyParams"])(keyParams);
    }
    /**
     * Creates a JSON string representing the backup format of all items, or just subitems
     * if supplied.
     * @param {Array} subItems  An optional array of items to create backup of.
     *                       If not supplied, all items are backed up. 
     * @param {bool} returnIfEmpty Returns null if there are no items to make backup of.
     */

  }, {
    key: "createBackupFile",
    value: function createBackupFile() {
      var _ref11,
          subItems,
          intent,
          returnIfEmpty,
          items,
          payloads,
          encryptedPayloads,
          data,
          keyParams,
          prettyPrint,
          _args16 = arguments;

      return regeneratorRuntime.async(function createBackupFile$(_context16) {
        while (1) {
          switch (_context16.prev = _context16.next) {
            case 0:
              _ref11 = _args16.length > 0 && _args16[0] !== undefined ? _args16[0] : {}, subItems = _ref11.subItems, intent = _ref11.intent, returnIfEmpty = _ref11.returnIfEmpty;
              items = subItems || this.modelManager.allItems;

              if (!(returnIfEmpty && items.length === 0)) {
                _context16.next = 4;
                break;
              }

              return _context16.abrupt("return", null);

            case 4:
              if (!intent) {
                intent = _Protocol__WEBPACK_IMPORTED_MODULE_5__["EncryptionIntents"].FilePreferEncrypted;
              }

              payloads = items.map(function (item) {
                return Object(_Payloads__WEBPACK_IMPORTED_MODULE_3__["CreateMaxPayloadFromAnyObject"])({
                  object: item
                });
              });
              _context16.next = 8;
              return regeneratorRuntime.awrap(this.payloadsByEncryptingPayloads({
                payloads: payloads,
                intent: intent
              }));

            case 8:
              encryptedPayloads = _context16.sent;
              data = {
                items: encryptedPayloads
              };
              _context16.next = 12;
              return regeneratorRuntime.awrap(this.keyManager.getRootKeyParams());

            case 12:
              keyParams = _context16.sent;

              if (keyParams && intent !== _Protocol__WEBPACK_IMPORTED_MODULE_5__["EncryptionIntents"].FileDecrypted) {
                data.keyParams = keyParams.getPortableValue();
              }

              prettyPrint = 2;
              return _context16.abrupt("return", JSON.stringify(data, null, prettyPrint));

            case 16:
            case "end":
              return _context16.stop();
          }
        }
      }, null, this);
    }
  }]);

  return SNProtocolService;
}(_Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__["PureService"]);

/***/ }),

/***/ "./lib/services/pure_service.js":
/*!**************************************!*\
  !*** ./lib/services/pure_service.js ***!
  \**************************************/
/*! exports provided: PureService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PureService", function() { return PureService; });
/* harmony import */ var lodash_pull__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/pull */ "./node_modules/lodash/pull.js");
/* harmony import */ var lodash_pull__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_pull__WEBPACK_IMPORTED_MODULE_0__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


var PureService =
/*#__PURE__*/
function () {
  function PureService() {
    _classCallCheck(this, PureService);

    this.eventObservers = [];
  }

  _createClass(PureService, [{
    key: "addEventObserver",
    value: function addEventObserver(observer) {
      var _this = this;

      this.eventObservers.push(observer);
      return function () {
        lodash_pull__WEBPACK_IMPORTED_MODULE_0___default()(_this.eventObservers, observer);
      };
    }
  }, {
    key: "notifyEvent",
    value: function notifyEvent(eventName, data) {
      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, observer;

      return regeneratorRuntime.async(function notifyEvent$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context.prev = 3;
              _iterator = this.eventObservers[Symbol.iterator]();

            case 5:
              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                _context.next = 12;
                break;
              }

              observer = _step.value;
              _context.next = 9;
              return regeneratorRuntime.awrap(observer(eventName, data || {}));

            case 9:
              _iteratorNormalCompletion = true;
              _context.next = 5;
              break;

            case 12:
              _context.next = 18;
              break;

            case 14:
              _context.prev = 14;
              _context.t0 = _context["catch"](3);
              _didIteratorError = true;
              _iteratorError = _context.t0;

            case 18:
              _context.prev = 18;
              _context.prev = 19;

              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }

            case 21:
              _context.prev = 21;

              if (!_didIteratorError) {
                _context.next = 24;
                break;
              }

              throw _iteratorError;

            case 24:
              return _context.finish(21);

            case 25:
              return _context.finish(18);

            case 26:
            case "end":
              return _context.stop();
          }
        }
      }, null, this, [[3, 14, 18, 26], [19,, 21, 25]]);
    }
    /** 
     * @public
     * Called by application before restart. 
     * Subclasses should deregister any observers/timers 
     */

  }, {
    key: "deinit",
    value: function deinit() {
      return regeneratorRuntime.async(function deinit$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
            case "end":
              return _context2.stop();
          }
        }
      });
    }
  }, {
    key: "handleApplicationStage",

    /**
    * @public
    * Application instances will call this function directly when they arrive
    * at a certain migratory state.
    */
    value: function handleApplicationStage(stage) {
      return regeneratorRuntime.async(function handleApplicationStage$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
            case "end":
              return _context3.stop();
          }
        }
      });
    }
  }, {
    key: "log",
    value: function log(message) {
      if (this.loggingEnabled) {
        var date = new Date();
        var timeString = date.toLocaleTimeString().replace(" PM", "").replace(" AM", "");
        var string = "".concat(timeString, ".").concat(date.getMilliseconds());

        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        if (args) {
          var _console;

          (_console = console).log.apply(_console, [string, message].concat(args));
        } else {
          console.log(string, message);
        }
      }
    }
  }]);

  return PureService;
}();

/***/ }),

/***/ "./lib/services/singleton_manager.js":
/*!*******************************************!*\
  !*** ./lib/services/singleton_manager.js ***!
  \*******************************************/
/*! exports provided: SNSingletonManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNSingletonManager", function() { return SNSingletonManager; });
/* harmony import */ var _Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/services/pure_service */ "./lib/services/pure_service.js");
/* harmony import */ var _Models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Models */ "./lib/models/index.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Payloads_generator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads/generator */ "./lib/protocol/payloads/generator.js");
/* harmony import */ var _Lib_uuid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Lib/uuid */ "./lib/uuid.js");
/* harmony import */ var _Services_sync_events__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Services/sync/events */ "./lib/services/sync/events.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }







var SNSingletonManager =
/*#__PURE__*/
function (_PureService) {
  _inherits(SNSingletonManager, _PureService);

  function SNSingletonManager(_ref) {
    var _this;

    var modelManager = _ref.modelManager,
        syncService = _ref.syncService;

    _classCallCheck(this, SNSingletonManager);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNSingletonManager).call(this));
    _this.syncService = syncService;
    _this.modelManager = modelManager;

    _this.addObservers();

    _this.resolveQueue = [];
    _this.registeredPredicates = [];
    return _this;
  }

  _createClass(SNSingletonManager, [{
    key: "popResolveQueue",
    value: function popResolveQueue() {
      var queue = this.resolveQueue.slice();
      this.resolveQueue = [];
      return queue;
    }
    /**
     * We only want to resolve singletons for items that are newly created (because this 
     * is when items proliferate). However, we don't want to resolve immediately on creation,
     * but instead wait for the next full sync to complete. This is so that when you download
     * a singleton and create the object, but the items key for the item has not yet been 
     * downloaded, the singleton will be errorDecrypting, and would be mishandled in the 
     * overall singleton logic. By waiting for a full sync to complete, we can be sure that 
     * all items keys have been downloaded.
     */

  }, {
    key: "addObservers",
    value: function addObservers() {
      var _this2 = this;

      this.modelManager.addCreationObserver({
        callback: function callback(_ref2) {
          var items = _ref2.items;
          _this2.resolveQueue = _this2.resolveQueue.concat(items);
        }
      });
      this.syncService.addEventObserver(function _callee(eventName) {
        return regeneratorRuntime.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(eventName === _Services_sync_events__WEBPACK_IMPORTED_MODULE_5__["SyncEvents"].DownloadFirstSyncCompleted || eventName === _Services_sync_events__WEBPACK_IMPORTED_MODULE_5__["SyncEvents"].FullSyncCompleted)) {
                  _context.next = 3;
                  break;
                }

                _context.next = 3;
                return regeneratorRuntime.awrap(_this2.resolveSingletonsForItems(_this2.popResolveQueue(), eventName));

              case 3:
              case "end":
                return _context.stop();
            }
          }
        });
      });
    }
  }, {
    key: "registerPredicate",
    value: function registerPredicate(predicate) {
      this.registeredPredicates.push(predicate);
    }
  }, {
    key: "validItemsMatchingPredicate",
    value: function validItemsMatchingPredicate(predicate) {
      return this.modelManager.itemsMatchingPredicate(predicate).filter(function (item) {
        return !item.deleted && !item.errorDecrypting;
      });
    }
  }, {
    key: "resolveSingletonsForItems",
    value: function resolveSingletonsForItems(items, eventSource) {
      var _this3 = this;

      var matchesForRegisteredPredicate, matchesForSelfPredicate, matches, handled, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, item, matchingItems;

      return regeneratorRuntime.async(function resolveSingletonsForItems$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              matchesForRegisteredPredicate = function matchesForRegisteredPredicate(item) {
                var _iteratorNormalCompletion = true;
                var _didIteratorError = false;
                var _iteratorError = undefined;

                try {
                  for (var _iterator = _this3.registeredPredicates[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var predicate = _step.value;

                    if (item.satisfiesPredicate(predicate)) {
                      return _this3.validItemsMatchingPredicate(predicate);
                    }
                  }
                } catch (err) {
                  _didIteratorError = true;
                  _iteratorError = err;
                } finally {
                  try {
                    if (!_iteratorNormalCompletion && _iterator.return != null) {
                      _iterator.return();
                    }
                  } finally {
                    if (_didIteratorError) {
                      throw _iteratorError;
                    }
                  }
                }
              };

              matchesForSelfPredicate = function matchesForSelfPredicate(item) {
                if (!item.isSingleton) {
                  return null;
                }

                return _this3.validItemsMatchingPredicate(item.singletonPredicate);
              };

              matches = function matches(item) {
                var selfMatches = matchesForSelfPredicate(item);

                if (selfMatches) {
                  return selfMatches;
                }

                return matchesForRegisteredPredicate(item);
              };

              handled = [];
              _iteratorNormalCompletion2 = true;
              _didIteratorError2 = false;
              _iteratorError2 = undefined;
              _context2.prev = 7;
              _iterator2 = items[Symbol.iterator]();

            case 9:
              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
                _context2.next = 22;
                break;
              }

              item = _step2.value;

              if (!handled.includes(item)) {
                _context2.next = 13;
                break;
              }

              return _context2.abrupt("continue", 19);

            case 13:
              matchingItems = matches(item);
              Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_2__["extendArray"])(handled, matchingItems || []);

              if (!(!matchingItems || matchingItems.length <= 1)) {
                _context2.next = 17;
                break;
              }

              return _context2.abrupt("continue", 19);

            case 17:
              _context2.next = 19;
              return regeneratorRuntime.awrap(this.handleStrategy({
                items: matchingItems,
                strategy: item.singletonStrategy
              }));

            case 19:
              _iteratorNormalCompletion2 = true;
              _context2.next = 9;
              break;

            case 22:
              _context2.next = 28;
              break;

            case 24:
              _context2.prev = 24;
              _context2.t0 = _context2["catch"](7);
              _didIteratorError2 = true;
              _iteratorError2 = _context2.t0;

            case 28:
              _context2.prev = 28;
              _context2.prev = 29;

              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }

            case 31:
              _context2.prev = 31;

              if (!_didIteratorError2) {
                _context2.next = 34;
                break;
              }

              throw _iteratorError2;

            case 34:
              return _context2.finish(31);

            case 35:
              return _context2.finish(28);

            case 36:
              /** 
               * Only sync if event source is FullSyncCompleted.
               * If it is on DownloadFirstSyncCompleted, we don't need to sync,
               * as a sync request will automatically be made as part of the second phase
               * of a download-first request.
               */
              if (handled.length > 0 && eventSource === _Services_sync_events__WEBPACK_IMPORTED_MODULE_5__["SyncEvents"].FullSyncCompleted) {
                /** 
                 * Do not await. We want any local-side changes to 
                 * be awaited but the actual sync shouldn't be since it's non-essential
                 * Perform after timeout so that we can yield to event notifier that triggered us 
                 */
                setTimeout(function () {
                  _this3.syncService.sync();
                });
              }

            case 37:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this, [[7, 24, 28, 36], [29,, 31, 35]]);
    }
  }, {
    key: "handleStrategy",
    value: function handleStrategy(_ref3) {
      var items, strategy, earliestFirst, deleteItems;
      return regeneratorRuntime.async(function handleStrategy$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              items = _ref3.items, strategy = _ref3.strategy;

              if (!(strategy !== _Models__WEBPACK_IMPORTED_MODULE_1__["SingletonStrategies"].KeepEarliest)) {
                _context3.next = 3;
                break;
              }

              throw 'Unhandled singleton strategy';

            case 3:
              earliestFirst = items.sort(function (a, b) {
                /** -1: a comes first, 1: b comes first */
                if (a.errorDecrypting) {
                  return 1;
                }

                if (b.errorDecrypting) {
                  return -1;
                }

                return a.created_at < b.created_at ? -1 : 1;
              });
              deleteItems = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_2__["arrayByRemovingFromIndex"])(earliestFirst, 0);
              _context3.next = 7;
              return regeneratorRuntime.awrap(this.modelManager.setItemsToBeDeleted(deleteItems));

            case 7:
            case "end":
              return _context3.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "findOrCreateSingleton",
    value: function findOrCreateSingleton(_ref4) {
      var predicate, createPayload, items, refreshedItems, errorDecrypting, dirtyPayload, item;
      return regeneratorRuntime.async(function findOrCreateSingleton$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              predicate = _ref4.predicate, createPayload = _ref4.createPayload;
              items = this.validItemsMatchingPredicate(predicate);

              if (!(items.length > 0)) {
                _context4.next = 4;
                break;
              }

              return _context4.abrupt("return", items[0]);

            case 4:
              if (this.syncService.getLastSyncDate()) {
                _context4.next = 7;
                break;
              }

              _context4.next = 7;
              return regeneratorRuntime.awrap(this.syncService.sync());

            case 7:
              /** Check again */
              refreshedItems = this.validItemsMatchingPredicate(predicate);

              if (!(refreshedItems.length > 0)) {
                _context4.next = 10;
                break;
              }

              return _context4.abrupt("return", refreshedItems[0]);

            case 10:
              /** Delete any items that are errored */
              errorDecrypting = this.modelManager.itemsMatchingPredicate(predicate).filter(function (item) {
                return item.errorDecrypting;
              });
              _context4.next = 13;
              return regeneratorRuntime.awrap(this.modelManager.setItemsToBeDeleted(errorDecrypting));

            case 13:
              _context4.t0 = _Payloads_generator__WEBPACK_IMPORTED_MODULE_3__["CopyPayload"];
              _context4.t1 = createPayload;
              _context4.next = 17;
              return regeneratorRuntime.awrap(_Lib_uuid__WEBPACK_IMPORTED_MODULE_4__["Uuid"].GenerateUuid());

            case 17:
              _context4.t2 = _context4.sent;
              _context4.t3 = {
                uuid: _context4.t2,
                dirty: true
              };
              _context4.t4 = {
                payload: _context4.t1,
                override: _context4.t3
              };
              dirtyPayload = (0, _context4.t0)(_context4.t4);
              _context4.next = 23;
              return regeneratorRuntime.awrap(this.modelManager.mapPayloadToLocalItem({
                payload: dirtyPayload
              }));

            case 23:
              item = _context4.sent;
              _context4.next = 26;
              return regeneratorRuntime.awrap(this.syncService.sync());

            case 26:
              return _context4.abrupt("return", item);

            case 27:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this);
    }
  }]);

  return SNSingletonManager;
}(_Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__["PureService"]);

/***/ }),

/***/ "./lib/services/storage_service.js":
/*!*****************************************!*\
  !*** ./lib/services/storage_service.js ***!
  \*****************************************/
/*! exports provided: StoragePersistencePolicies, StorageEncryptionPolicies, StorageValueModes, ValueModesKeys, SNStorageService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StoragePersistencePolicies", function() { return StoragePersistencePolicies; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StorageEncryptionPolicies", function() { return StorageEncryptionPolicies; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StorageValueModes", function() { return StorageValueModes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValueModesKeys", function() { return ValueModesKeys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNStorageService", function() { return SNStorageService; });
/* harmony import */ var _Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/services/pure_service */ "./lib/services/pure_service.js");
/* harmony import */ var _Protocol__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Protocol */ "./lib/protocol/index.js");
/* harmony import */ var _Lib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Lib */ "./lib/index.js");
/* harmony import */ var _Payloads__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads */ "./lib/protocol/payloads/index.js");
/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Lib_uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @Lib/uuid */ "./lib/uuid.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }








/** @public */

var StoragePersistencePolicies = {
  Default: 1,
  Ephemeral: 2
};
/** @public */

var StorageEncryptionPolicies = {
  Default: 1,
  Disabled: 2
};
/** @public */

var StorageValueModes = {
  /** Stored inside wrapped encrpyed storage object */
  Default: 1,

  /** Stored outside storage object, unencrypted */
  Nonwrapped: 2
};
/** @public */

var ValueModesKeys = {
  /* Is encrypted */
  Wrapped: 'wrapped',

  /* Is decrypted */
  Unwrapped: 'unwrapped',

  /* Lives outside of wrapped/unwrapped */
  Nonwrapped: 'nonwrapped'
};
var SNStorageService =
/*#__PURE__*/
function (_PureService) {
  _inherits(SNStorageService, _PureService);

  function SNStorageService(_ref) {
    var _this;

    var protocolService = _ref.protocolService,
        deviceInterface = _ref.deviceInterface,
        namespace = _ref.namespace;

    _classCallCheck(this, SNStorageService);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNStorageService).call(this));
    _this.deviceInterface = deviceInterface;
    _this.protocolService = protocolService;
    _this.namespace = namespace;

    _this.setPersistencePolicy(StoragePersistencePolicies.Default);

    _this.setEncryptionPolicy(StorageEncryptionPolicies.Default);
    /** Wait until application has been unlocked before trying to persist */


    _this.storagePersistable = false;
    return _this;
  }
  /**
   * @protected
   */


  _createClass(SNStorageService, [{
    key: "handleApplicationStage",
    value: function handleApplicationStage(stage) {
      return regeneratorRuntime.async(function handleApplicationStage$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return regeneratorRuntime.awrap(_get(_getPrototypeOf(SNStorageService.prototype), "handleApplicationStage", this).call(this, stage));

            case 2:
              if (stage === _Lib__WEBPACK_IMPORTED_MODULE_2__["ApplicationStages"].Launched_10) {
                this.storagePersistable = true;
              }

            case 3:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "setPersistencePolicy",
    value: function setPersistencePolicy(persistencePolicy) {
      return regeneratorRuntime.async(function setPersistencePolicy$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              this.persistencePolicy = persistencePolicy;

              if (!(this.persistencePolicy === StoragePersistencePolicies.Ephemeral)) {
                _context2.next = 6;
                break;
              }

              _context2.next = 4;
              return regeneratorRuntime.awrap(this.deviceInterface.removeAllRawStorageValues());

            case 4:
              _context2.next = 6;
              return regeneratorRuntime.awrap(this.clearAllPayloads());

            case 6:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "setEncryptionPolicy",
    value: function setEncryptionPolicy(encryptionPolicy) {
      return regeneratorRuntime.async(function setEncryptionPolicy$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              this.encryptionPolicy = encryptionPolicy;

            case 1:
            case "end":
              return _context3.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "isEphemeralSession",
    value: function isEphemeralSession() {
      return this.persistencePolicy === StoragePersistencePolicies.Ephemeral;
    }
  }, {
    key: "initializeFromDisk",
    value: function initializeFromDisk() {
      var value, payload;
      return regeneratorRuntime.async(function initializeFromDisk$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return regeneratorRuntime.awrap(this.deviceInterface.getRawStorageValue(this.getPersistenceKey()));

            case 2:
              value = _context4.sent;
              payload = value ? JSON.parse(value) : null;
              this.setInitialValues(payload);

            case 5:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "persistAsValueToDisk",
    value: function persistAsValueToDisk(payload) {
      return regeneratorRuntime.async(function persistAsValueToDisk$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return regeneratorRuntime.awrap(this.deviceInterface.setRawStorageValue(this.getPersistenceKey(), JSON.stringify(payload)));

            case 2:
            case "end":
              return _context5.stop();
          }
        }
      }, null, this);
    }
    /**
     * @protected
     * Called by platforms with the value they load from disk,
     * after they handle initializeFromDisk
     */

  }, {
    key: "setInitialValues",
    value: function setInitialValues(values) {
      if (!values) {
        values = this.defaultValuesObject();
      }

      if (!values[ValueModesKeys.Unwrapped]) {
        values[ValueModesKeys.Unwrapped] = {};
      }

      this.values = values;
    }
    /** @public */

  }, {
    key: "isStorageWrapped",
    value: function isStorageWrapped() {
      var wrappedValue = this.values[ValueModesKeys.Wrapped];
      return !Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_5__["isNullOrUndefined"])(wrappedValue) && Object.keys(wrappedValue).length > 0;
    }
    /** @public */

  }, {
    key: "canDecryptWithKey",
    value: function canDecryptWithKey(key) {
      var wrappedValue, decryptedPayload;
      return regeneratorRuntime.async(function canDecryptWithKey$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              wrappedValue = this.values[ValueModesKeys.Wrapped];
              _context6.next = 3;
              return regeneratorRuntime.awrap(this.decryptWrappedValue({
                wrappedValue: wrappedValue,
                key: key,
                throws: false
              }));

            case 3:
              decryptedPayload = _context6.sent;
              return _context6.abrupt("return", !decryptedPayload.errorDecrypting);

            case 5:
            case "end":
              return _context6.stop();
          }
        }
      }, null, this);
    }
    /** @private */

  }, {
    key: "decryptWrappedValue",
    value: function decryptWrappedValue(_ref2) {
      var wrappedValue, key, payload, decryptedPayload;
      return regeneratorRuntime.async(function decryptWrappedValue$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              wrappedValue = _ref2.wrappedValue, key = _ref2.key;

              if (wrappedValue.content_type) {
                _context7.next = 3;
                break;
              }

              throw 'Attempting to decrypt nonexistent wrapped value';

            case 3:
              payload = Object(_Payloads__WEBPACK_IMPORTED_MODULE_3__["CreateMaxPayloadFromAnyObject"])({
                object: wrappedValue,
                override: {
                  content_type: _Models_content_types__WEBPACK_IMPORTED_MODULE_4__["ContentTypes"].EncryptedStorage
                }
              });
              _context7.next = 6;
              return regeneratorRuntime.awrap(this.protocolService.payloadByDecryptingPayload({
                payload: payload,
                key: key
              }));

            case 6:
              decryptedPayload = _context7.sent;
              return _context7.abrupt("return", decryptedPayload);

            case 8:
            case "end":
              return _context7.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "decryptStorage",
    value: function decryptStorage() {
      var wrappedValue, decryptedPayload;
      return regeneratorRuntime.async(function decryptStorage$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              wrappedValue = this.values[ValueModesKeys.Wrapped];
              _context8.next = 3;
              return regeneratorRuntime.awrap(this.decryptWrappedValue({
                wrappedValue: wrappedValue
              }));

            case 3:
              decryptedPayload = _context8.sent;

              if (!decryptedPayload.errorDecrypting) {
                _context8.next = 6;
                break;
              }

              throw 'Unable to decrypt storage.';

            case 6:
              this.values[ValueModesKeys.Unwrapped] = Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_5__["Copy"])(decryptedPayload.content);
              delete this.values[ValueModesKeys.Wrapped];

            case 8:
            case "end":
              return _context8.stop();
          }
        }
      }, null, this);
    }
    /**
     * Generates a payload that can be persisted to disk,
     * either as a plain object, or an encrypted item.
     */

  }, {
    key: "generatePersistenceValue",
    value: function generatePersistenceValue() {
      var rawContent, valuesToWrap, payload, encryptedPayload;
      return regeneratorRuntime.async(function generatePersistenceValue$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              rawContent = Object.assign({}, this.values);
              valuesToWrap = rawContent[ValueModesKeys.Unwrapped];
              _context9.t0 = _Payloads__WEBPACK_IMPORTED_MODULE_3__["CreateMaxPayloadFromAnyObject"];
              _context9.next = 5;
              return regeneratorRuntime.awrap(_Lib_uuid__WEBPACK_IMPORTED_MODULE_6__["Uuid"].GenerateUuid());

            case 5:
              _context9.t1 = _context9.sent;
              _context9.t2 = valuesToWrap;
              _context9.t3 = _Models_content_types__WEBPACK_IMPORTED_MODULE_4__["ContentTypes"].EncryptedStorage;
              _context9.t4 = {
                uuid: _context9.t1,
                content: _context9.t2,
                content_type: _context9.t3
              };
              _context9.t5 = {
                object: _context9.t4
              };
              payload = (0, _context9.t0)(_context9.t5);
              _context9.next = 13;
              return regeneratorRuntime.awrap(this.protocolService.payloadByEncryptingPayload({
                payload: payload,
                intent: _Protocol__WEBPACK_IMPORTED_MODULE_1__["EncryptionIntents"].LocalStoragePreferEncrypted
              }));

            case 13:
              encryptedPayload = _context9.sent;
              rawContent[ValueModesKeys.Wrapped] = encryptedPayload;
              rawContent[ValueModesKeys.Unwrapped] = null;
              return _context9.abrupt("return", rawContent);

            case 17:
            case "end":
              return _context9.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "repersistToDisk",
    value: function repersistToDisk() {
      var value;
      return regeneratorRuntime.async(function repersistToDisk$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              if (this.storagePersistable) {
                _context10.next = 2;
                break;
              }

              return _context10.abrupt("return");

            case 2:
              if (!(this.persistencePolicy === StoragePersistencePolicies.Ephemeral)) {
                _context10.next = 4;
                break;
              }

              return _context10.abrupt("return");

            case 4:
              _context10.next = 6;
              return regeneratorRuntime.awrap(this.generatePersistenceValue());

            case 6:
              value = _context10.sent;

              /** Save the persisted value so we have access to it in memory (for unit tests afawk) */
              this.values[ValueModesKeys.Wrapped] = value[ValueModesKeys.Wrapped];
              return _context10.abrupt("return", this.persistAsValueToDisk(value));

            case 9:
            case "end":
              return _context10.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "setValue",
    value: function setValue(key, value) {
      var mode,
          _args11 = arguments;
      return regeneratorRuntime.async(function setValue$(_context11) {
        while (1) {
          switch (_context11.prev = _context11.next) {
            case 0:
              mode = _args11.length > 2 && _args11[2] !== undefined ? _args11[2] : StorageValueModes.Default;

              if (this.values) {
                _context11.next = 3;
                break;
              }

              throw "Attempting to set storage key ".concat(key, " before loading local storage.");

            case 3:
              this.values[this.domainKeyForMode(mode)][key] = value;
              return _context11.abrupt("return", this.repersistToDisk());

            case 5:
            case "end":
              return _context11.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "getValue",
    value: function getValue(key) {
      var mode,
          _args12 = arguments;
      return regeneratorRuntime.async(function getValue$(_context12) {
        while (1) {
          switch (_context12.prev = _context12.next) {
            case 0:
              mode = _args12.length > 1 && _args12[1] !== undefined ? _args12[1] : StorageValueModes.Default;

              if (this.values) {
                _context12.next = 3;
                break;
              }

              throw "Attempting to get storage key ".concat(key, " before loading local storage.");

            case 3:
              if (this.values[this.domainKeyForMode(mode)]) {
                _context12.next = 5;
                break;
              }

              throw "Storage domain mode not available ".concat(mode, " for key ").concat(key);

            case 5:
              return _context12.abrupt("return", this.values[this.domainKeyForMode(mode)][key]);

            case 6:
            case "end":
              return _context12.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "removeValue",
    value: function removeValue(key) {
      var mode,
          _args13 = arguments;
      return regeneratorRuntime.async(function removeValue$(_context13) {
        while (1) {
          switch (_context13.prev = _context13.next) {
            case 0:
              mode = _args13.length > 1 && _args13[1] !== undefined ? _args13[1] : StorageValueModes.Default;

              if (this.values) {
                _context13.next = 3;
                break;
              }

              throw "Attempting to remove storage key ".concat(key, " before loading local storage.");

            case 3:
              delete this.values[this.domainKeyForMode(mode)][key];
              return _context13.abrupt("return", this.repersistToDisk());

            case 5:
            case "end":
              return _context13.stop();
          }
        }
      }, null, this);
    }
    /**
     * Default persistence key. Platforms can override as needed.
     */

  }, {
    key: "getPersistenceKey",
    value: function getPersistenceKey() {
      return Object(_Lib__WEBPACK_IMPORTED_MODULE_2__["namespacedKey"])(this.namespace, _Lib__WEBPACK_IMPORTED_MODULE_2__["StorageKeys"].StorageObject);
    }
  }, {
    key: "defaultValuesObject",
    value: function defaultValuesObject() {
      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          wrapped = _ref3.wrapped,
          unwrapped = _ref3.unwrapped,
          nonwrapped = _ref3.nonwrapped;

      return this.constructor.defaultValuesObject({
        wrapped: wrapped,
        unwrapped: unwrapped,
        nonwrapped: nonwrapped
      });
    }
  }, {
    key: "domainKeyForMode",

    /** @private */
    value: function domainKeyForMode(mode) {
      return this.constructor.domainKeyForMode(mode);
    }
    /**
     *  Clears simple values from storage only. Does not affect payloads.
     */

  }, {
    key: "clearValues",
    value: function clearValues() {
      return regeneratorRuntime.async(function clearValues$(_context14) {
        while (1) {
          switch (_context14.prev = _context14.next) {
            case 0:
              this.setInitialValues();
              _context14.next = 3;
              return regeneratorRuntime.awrap(this.repersistToDisk());

            case 3:
            case "end":
              return _context14.stop();
          }
        }
      }, null, this);
    }
    /**
     * Payload Storage
     */

  }, {
    key: "getAllRawPayloads",
    value: function getAllRawPayloads() {
      return regeneratorRuntime.async(function getAllRawPayloads$(_context15) {
        while (1) {
          switch (_context15.prev = _context15.next) {
            case 0:
              return _context15.abrupt("return", this.deviceInterface.getAllRawDatabasePayloads());

            case 1:
            case "end":
              return _context15.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "savePayload",
    value: function savePayload(payload) {
      return regeneratorRuntime.async(function savePayload$(_context16) {
        while (1) {
          switch (_context16.prev = _context16.next) {
            case 0:
              return _context16.abrupt("return", this.savePayloads([payload]));

            case 1:
            case "end":
              return _context16.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "savePayloads",
    value: function savePayloads(decryptedPayloads) {
      var deleted, nondeleted, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, payload, encrypted;

      return regeneratorRuntime.async(function savePayloads$(_context17) {
        while (1) {
          switch (_context17.prev = _context17.next) {
            case 0:
              if (!(this.persistencePolicy === StoragePersistencePolicies.Ephemeral)) {
                _context17.next = 2;
                break;
              }

              return _context17.abrupt("return");

            case 2:
              deleted = [];
              nondeleted = [];
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context17.prev = 7;
              _iterator = decryptedPayloads[Symbol.iterator]();

            case 9:
              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                _context17.next = 22;
                break;
              }

              payload = _step.value;

              if (!payload.discardable) {
                _context17.next = 15;
                break;
              }

              /** If the payload is deleted and not dirty, remove it from db. */
              deleted.push(payload);
              _context17.next = 19;
              break;

            case 15:
              _context17.next = 17;
              return regeneratorRuntime.awrap(this.protocolService.payloadByEncryptingPayload({
                payload: payload,
                intent: this.encryptionPolicy === StorageEncryptionPolicies.Default ? _Protocol__WEBPACK_IMPORTED_MODULE_1__["EncryptionIntents"].LocalStoragePreferEncrypted : _Protocol__WEBPACK_IMPORTED_MODULE_1__["EncryptionIntents"].LocalStorageDecrypted
              }));

            case 17:
              encrypted = _context17.sent;
              nondeleted.push(encrypted);

            case 19:
              _iteratorNormalCompletion = true;
              _context17.next = 9;
              break;

            case 22:
              _context17.next = 28;
              break;

            case 24:
              _context17.prev = 24;
              _context17.t0 = _context17["catch"](7);
              _didIteratorError = true;
              _iteratorError = _context17.t0;

            case 28:
              _context17.prev = 28;
              _context17.prev = 29;

              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }

            case 31:
              _context17.prev = 31;

              if (!_didIteratorError) {
                _context17.next = 34;
                break;
              }

              throw _iteratorError;

            case 34:
              return _context17.finish(31);

            case 35:
              return _context17.finish(28);

            case 36:
              if (!(deleted.length > 0)) {
                _context17.next = 39;
                break;
              }

              _context17.next = 39;
              return regeneratorRuntime.awrap(this.deletePayloads(deleted));

            case 39:
              _context17.next = 41;
              return regeneratorRuntime.awrap(this.deviceInterface.saveRawDatabasePayloads(nondeleted));

            case 41:
            case "end":
              return _context17.stop();
          }
        }
      }, null, this, [[7, 24, 28, 36], [29,, 31, 35]]);
    }
  }, {
    key: "deletePayloads",
    value: function deletePayloads(payloads) {
      var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, payload;

      return regeneratorRuntime.async(function deletePayloads$(_context18) {
        while (1) {
          switch (_context18.prev = _context18.next) {
            case 0:
              _iteratorNormalCompletion2 = true;
              _didIteratorError2 = false;
              _iteratorError2 = undefined;
              _context18.prev = 3;
              _iterator2 = payloads[Symbol.iterator]();

            case 5:
              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
                _context18.next = 12;
                break;
              }

              payload = _step2.value;
              _context18.next = 9;
              return regeneratorRuntime.awrap(this.deletePayloadWithId(payload.uuid));

            case 9:
              _iteratorNormalCompletion2 = true;
              _context18.next = 5;
              break;

            case 12:
              _context18.next = 18;
              break;

            case 14:
              _context18.prev = 14;
              _context18.t0 = _context18["catch"](3);
              _didIteratorError2 = true;
              _iteratorError2 = _context18.t0;

            case 18:
              _context18.prev = 18;
              _context18.prev = 19;

              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }

            case 21:
              _context18.prev = 21;

              if (!_didIteratorError2) {
                _context18.next = 24;
                break;
              }

              throw _iteratorError2;

            case 24:
              return _context18.finish(21);

            case 25:
              return _context18.finish(18);

            case 26:
            case "end":
              return _context18.stop();
          }
        }
      }, null, this, [[3, 14, 18, 26], [19,, 21, 25]]);
    }
  }, {
    key: "deletePayloadWithId",
    value: function deletePayloadWithId(id) {
      return regeneratorRuntime.async(function deletePayloadWithId$(_context19) {
        while (1) {
          switch (_context19.prev = _context19.next) {
            case 0:
              return _context19.abrupt("return", this.deviceInterface.removeRawDatabasePayloadWithId(id));

            case 1:
            case "end":
              return _context19.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "clearAllPayloads",
    value: function clearAllPayloads() {
      return regeneratorRuntime.async(function clearAllPayloads$(_context20) {
        while (1) {
          switch (_context20.prev = _context20.next) {
            case 0:
              return _context20.abrupt("return", this.deviceInterface.removeAllRawDatabasePayloads());

            case 1:
            case "end":
              return _context20.stop();
          }
        }
      }, null, this);
    }
    /**
     * General
     */

  }, {
    key: "clearAllData",
    value: function clearAllData() {
      return regeneratorRuntime.async(function clearAllData$(_context21) {
        while (1) {
          switch (_context21.prev = _context21.next) {
            case 0:
              return _context21.abrupt("return", Promise.all([this.clearValues(), this.clearAllPayloads()]));

            case 1:
            case "end":
              return _context21.stop();
          }
        }
      }, null, this);
    }
  }], [{
    key: "defaultValuesObject",
    value: function defaultValuesObject() {
      var _ref5;

      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref4$wrapped = _ref4.wrapped,
          wrapped = _ref4$wrapped === void 0 ? {} : _ref4$wrapped,
          _ref4$unwrapped = _ref4.unwrapped,
          unwrapped = _ref4$unwrapped === void 0 ? {} : _ref4$unwrapped,
          _ref4$nonwrapped = _ref4.nonwrapped,
          nonwrapped = _ref4$nonwrapped === void 0 ? {} : _ref4$nonwrapped;

      return _ref5 = {}, _defineProperty(_ref5, ValueModesKeys.Wrapped, wrapped), _defineProperty(_ref5, ValueModesKeys.Unwrapped, unwrapped), _defineProperty(_ref5, ValueModesKeys.Nonwrapped, nonwrapped), _ref5;
    }
    /** @private */

  }, {
    key: "domainKeyForMode",
    value: function domainKeyForMode(mode) {
      if (mode === StorageValueModes.Default) {
        return ValueModesKeys.Unwrapped;
      } else if (mode === StorageValueModes.Nonwrapped) {
        return ValueModesKeys.Nonwrapped;
      } else {
        throw 'Invalid mode';
      }
    }
  }]);

  return SNStorageService;
}(_Lib_services_pure_service__WEBPACK_IMPORTED_MODULE_0__["PureService"]);

/***/ }),

/***/ "./lib/services/sync/account/downloader.js":
/*!*************************************************!*\
  !*** ./lib/services/sync/account/downloader.js ***!
  \*************************************************/
/*! exports provided: AccountDownloader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountDownloader", function() { return AccountDownloader; });
/* harmony import */ var _Payloads_generator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Payloads/generator */ "./lib/protocol/payloads/generator.js");
/* harmony import */ var _Lib_protocol_payloads_sources__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Lib/protocol/payloads/sources */ "./lib/protocol/payloads/sources.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var AccountDownloader =
/*#__PURE__*/
function () {
  function AccountDownloader(_ref) {
    var apiService = _ref.apiService,
        protocolService = _ref.protocolService,
        contentType = _ref.contentType,
        customEvent = _ref.customEvent,
        limit = _ref.limit;

    _classCallCheck(this, AccountDownloader);

    this.apiService = apiService;
    this.protocolService = protocolService;
    this.contentType = contentType;
    this.customEvent = customEvent;
    this.limit = limit;
    this.progressObj = {
      retrievedPayloads: []
    };
  }
  /**
   * Executes a sync request with a blank sync token and high download limit. It will download all items,
   * but won't do anything with them other than decrypting and creating respective objects.
   */


  _createClass(AccountDownloader, [{
    key: "run",
    value: function run() {
      var response, encryptedPayloads, decryptedPayloads;
      return regeneratorRuntime.async(function run$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return regeneratorRuntime.awrap(this.apiService.sync({
                lastSyncToken: this.progressObj.lastSyncToken,
                paginationToken: this.progressObj.paginationToken,
                limit: this.limit || 500,
                contentType: this.contentType,
                customEvent: this.customEvent
              }));

            case 2:
              response = _context.sent;
              encryptedPayloads = response.retrieved_items.map(function (rawRetrievedPayload) {
                return Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_0__["CreateSourcedPayloadFromObject"])({
                  object: rawRetrievedPayload,
                  source: _Lib_protocol_payloads_sources__WEBPACK_IMPORTED_MODULE_1__["PayloadSources"].RemoteRetrieved
                });
              });
              _context.next = 6;
              return regeneratorRuntime.awrap(this.protocolService.payloadsByDecryptingPayloads({
                payloads: encryptedPayloads
              }));

            case 6:
              decryptedPayloads = _context.sent;
              this.progressObj.retrievedPayloads = this.progressObj.retrievedPayloads.concat(decryptedPayloads);
              this.progressObj.lastSyncToken = response.sync_token;
              this.progressObj.paginationToken = response.cursor_token;

              if (!response.cursor_token) {
                _context.next = 14;
                break;
              }

              return _context.abrupt("return", this.run());

            case 14:
              return _context.abrupt("return", this.progressObj.retrievedPayloads);

            case 15:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }]);

  return AccountDownloader;
}();

/***/ }),

/***/ "./lib/services/sync/account/operation.js":
/*!************************************************!*\
  !*** ./lib/services/sync/account/operation.js ***!
  \************************************************/
/*! exports provided: AccountSyncOperation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountSyncOperation", function() { return AccountSyncOperation; });
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Services_sync_account_response__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Services/sync/account/response */ "./lib/services/sync/account/response.js");
/* harmony import */ var _Services_sync_signals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Services/sync/signals */ "./lib/services/sync/signals.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }




var DEFAULT_UP_DOWN_LIMIT = 150;
var AccountSyncOperation =
/*#__PURE__*/
function () {
  /**
   * A long running operation that handles multiple roundtrips from a server,
   * emitting a stream of values that should be acted upon in real time.
   * @param payloads   An array of payloads to send to the server
   * @param receiver   A function that recieves callback multiple times during the operation
   *                   and takes two parameters: (payloads, actions)
   */
  function AccountSyncOperation(_ref) {
    var payloads = _ref.payloads,
        receiver = _ref.receiver,
        lastSyncToken = _ref.lastSyncToken,
        paginationToken = _ref.paginationToken,
        checkIntegrity = _ref.checkIntegrity,
        apiService = _ref.apiService;

    _classCallCheck(this, AccountSyncOperation);

    this.payloads = payloads;
    this.pendingPayloads = payloads;
    this.lastSyncToken = lastSyncToken;
    this.paginationToken = paginationToken;
    this.checkIntegrity = checkIntegrity;
    this.apiService = apiService;
    this.receiver = receiver;
    /** @private */

    this.responses = [];
  }
  /**
   * Read the payloads that have been saved, or are currently in flight.
   */


  _createClass(AccountSyncOperation, [{
    key: "popPayloads",
    value: function popPayloads(count) {
      var payloads = this.pendingPayloads.slice(0, count);
      Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["subtractFromArray"])(this.pendingPayloads, payloads);
      return payloads;
    }
  }, {
    key: "run",
    value: function run() {
      var payloads, rawResponse, response;
      return regeneratorRuntime.async(function run$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!this.cancleled) {
                _context.next = 2;
                break;
              }

              return _context.abrupt("return");

            case 2:
              payloads = this.popPayloads(this.upLimit);
              this.lockCancelation();
              _context.next = 6;
              return regeneratorRuntime.awrap(this.apiService.sync({
                payloads: payloads,
                lastSyncToken: this.lastSyncToken,
                paginationToken: this.paginationToken,
                limit: this.downLimit,
                checkIntegrity: this.checkIntegrity
              }));

            case 6:
              rawResponse = _context.sent;
              response = new _Services_sync_account_response__WEBPACK_IMPORTED_MODULE_1__["AccountSyncResponse"](rawResponse);
              this.unlockCancelation();
              this.responses.push(response);
              this.lastSyncToken = response.lastSyncToken;
              this.paginationToken = response.paginationToken;
              _context.next = 14;
              return regeneratorRuntime.awrap(this.receiver(response, _Services_sync_signals__WEBPACK_IMPORTED_MODULE_2__["SIGNAL_TYPE_RESPONSE"]));

            case 14:
              if (this.done) {
                _context.next = 16;
                break;
              }

              return _context.abrupt("return", this.run());

            case 16:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "lockCancelation",
    value: function lockCancelation() {
      this.cancelable = false;
    }
  }, {
    key: "unlockCancelation",
    value: function unlockCancelation() {
      this.cancelable = true;
    }
  }, {
    key: "tryCancel",
    value: function tryCancel() {
      if (!this.cancelable) {
        this.cancleled = true;
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: "payloadsSavedOrSaving",
    get: function get() {
      return Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["arrayByDifference"])(this.payloads, this.pendingPayloads);
    }
  }, {
    key: "done",
    get: function get() {
      return this.pendingPayloads.length === 0 && !this.paginationToken;
    }
  }, {
    key: "upLimit",
    get: function get() {
      return DEFAULT_UP_DOWN_LIMIT;
    }
  }, {
    key: "downLimit",
    get: function get() {
      return DEFAULT_UP_DOWN_LIMIT;
    }
  }, {
    key: "numberOfItemsInvolved",
    get: function get() {
      var total = 0;
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.responses[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var response = _step.value;
          total += response.numberOfItemsInvolved;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return total;
    }
  }]);

  return AccountSyncOperation;
}();

/***/ }),

/***/ "./lib/services/sync/account/response.js":
/*!***********************************************!*\
  !*** ./lib/services/sync/account/response.js ***!
  \***********************************************/
/*! exports provided: AccountSyncResponse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountSyncResponse", function() { return AccountSyncResponse; });
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Services_api_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Services/api/keys */ "./lib/services/api/keys.js");
/* harmony import */ var _Payloads_sources__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads/sources */ "./lib/protocol/payloads/sources.js");
/* harmony import */ var _Payloads_generator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads/generator */ "./lib/protocol/payloads/generator.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }





var SYNC_CONFLICT_TYPE_CONFLICTING_DATA = 'sync_conflict';
var SYNC_CONFLICT_TYPE_UUID_CONFLICT = 'uuid_conflict';
var AccountSyncResponse =
/*#__PURE__*/
function () {
  function AccountSyncResponse(rawResponse) {
    _classCallCheck(this, AccountSyncResponse);

    this.rawResponse = rawResponse;
    Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["deepFreeze"])(this);
  }

  _createClass(AccountSyncResponse, [{
    key: "lastSyncToken",
    get: function get() {
      return this.rawResponse[_Services_api_keys__WEBPACK_IMPORTED_MODULE_1__["ApiEndpointParams"].LastSyncToken];
    }
  }, {
    key: "paginationToken",
    get: function get() {
      return this.rawResponse[_Services_api_keys__WEBPACK_IMPORTED_MODULE_1__["ApiEndpointParams"].PaginationToken];
    }
  }, {
    key: "integrityHash",
    get: function get() {
      return this.rawResponse[_Services_api_keys__WEBPACK_IMPORTED_MODULE_1__["ApiEndpointParams"].IntegrityResult];
    }
  }, {
    key: "checkIntegrity",
    get: function get() {
      return this.integrityHash && !this.paginationToken;
    }
  }, {
    key: "numberOfItemsInvolved",
    get: function get() {
      var allRawItems = this.rawSavedItems.concat(this.rawRetrievedItems).concat(this.rawItemsFromConflicts);
      return allRawItems.length;
    }
  }, {
    key: "allProcessedPayloads",
    get: function get() {
      var allPayloads = this.retrievedPayloads.concat(this.savedPayloads).concat(this.conflictPayloads);
      return allPayloads;
    }
  }, {
    key: "savedPayloads",
    get: function get() {
      return this.rawSavedItems.map(function (rawItem) {
        return Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_3__["CreateSourcedPayloadFromObject"])({
          object: rawItem,
          source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_2__["PayloadSources"].RemoteSaved
        });
      });
    }
  }, {
    key: "retrievedPayloads",
    get: function get() {
      return this.rawRetrievedItems.map(function (rawItem) {
        return Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_3__["CreateSourcedPayloadFromObject"])({
          object: rawItem,
          source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_2__["PayloadSources"].RemoteRetrieved
        });
      });
    }
  }, {
    key: "conflictPayloads",
    get: function get() {
      return this.rawItemsFromConflicts.map(function (rawItem) {
        return Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_3__["CreateSourcedPayloadFromObject"])({
          object: rawItem,
          source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_2__["PayloadSources"].RemoteRetrieved
        });
      });
    }
  }, {
    key: "rawSavedItems",
    get: function get() {
      return this.rawResponse.saved_items || [];
    }
  }, {
    key: "rawRetrievedItems",
    get: function get() {
      return this.rawResponse.retrieved_items || [];
    }
  }, {
    key: "rawUuidConflictItems",
    get: function get() {
      return this.rawConflictObjects.filter(function (conflict) {
        return conflict.type === SYNC_CONFLICT_TYPE_UUID_CONFLICT;
      }).map(function (conflict) {
        return conflict.unsaved_item || conflict.item;
      });
    }
  }, {
    key: "rawDataConflictItems",
    get: function get() {
      return this.rawConflictObjects.filter(function (conflict) {
        return conflict.type === SYNC_CONFLICT_TYPE_CONFLICTING_DATA;
      }).map(function (conflict) {
        return conflict.server_item || conflict.item;
      });
    }
  }, {
    key: "rawItemsFromConflicts",
    get: function get() {
      var conflicts = this.rawResponse.conflicts || [];
      var legacyConflicts = this.rawResponse.unsaved || [];
      var rawConflictItems = conflicts.map(function (conflict) {
        /** unsaved_item for uuid conflicts,
        and server_item for data conflicts */
        return conflict.unsaved_item || conflict.server_item;
      });
      var rawLegacyConflictItems = legacyConflicts.map(function (conflict) {
        return conflict.item;
      });
      return rawConflictItems.concat(rawLegacyConflictItems);
    }
  }, {
    key: "rawConflictObjects",
    get: function get() {
      var conflicts = this.rawResponse.conflicts || [];
      var legacyConflicts = this.rawResponse.unsaved || [];
      return conflicts.concat(legacyConflicts);
    }
  }, {
    key: "hasError",
    get: function get() {
      return !Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.rawResponse.error);
    }
  }]);

  return AccountSyncResponse;
}();

/***/ }),

/***/ "./lib/services/sync/account/response_resolver.js":
/*!********************************************************!*\
  !*** ./lib/services/sync/account/response_resolver.js ***!
  \********************************************************/
/*! exports provided: AccountSyncResponseResolver */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountSyncResponseResolver", function() { return AccountSyncResponseResolver; });
/* harmony import */ var _Payloads_deltas_generator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Payloads/deltas/generator */ "./lib/protocol/payloads/deltas/generator.js");
/* harmony import */ var _Payloads_sources__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Payloads/sources */ "./lib/protocol/payloads/sources.js");
/* harmony import */ var _Payloads_collection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads/collection */ "./lib/protocol/payloads/collection.js");
/* harmony import */ var _Payloads_collection_set__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads/collection_set */ "./lib/protocol/payloads/collection_set.js");
/* harmony import */ var _Payloads_generator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Payloads/generator */ "./lib/protocol/payloads/generator.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }






var AccountSyncResponseResolver =
/*#__PURE__*/
function () {
  function AccountSyncResponseResolver(_ref) {
    var response = _ref.response,
        decryptedResponsePayloads = _ref.decryptedResponsePayloads,
        baseCollection = _ref.baseCollection,
        payloadsSavedOrSaving = _ref.payloadsSavedOrSaving;

    _classCallCheck(this, AccountSyncResponseResolver);

    this.response = response;
    this.baseCollection = baseCollection;
    this.relatedCollectionSet = new _Payloads_collection_set__WEBPACK_IMPORTED_MODULE_3__["PayloadCollectionSet"]({
      collections: [new _Payloads_collection__WEBPACK_IMPORTED_MODULE_2__["PayloadCollection"]({
        payloads: decryptedResponsePayloads,
        source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_1__["PayloadSources"].DecryptedTransient
      }), new _Payloads_collection__WEBPACK_IMPORTED_MODULE_2__["PayloadCollection"]({
        payloads: payloadsSavedOrSaving,
        source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_1__["PayloadSources"].SavedOrSaving
      })]
    });
  }

  _createClass(AccountSyncResponseResolver, [{
    key: "collectionsByProcessingResponse",
    value: function collectionsByProcessingResponse() {
      var collections, collectionRetrieved, collectionSaved, collectionUuidConflicts, collectionDataConflicts;
      return regeneratorRuntime.async(function collectionsByProcessingResponse$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              collections = [];
              _context.next = 3;
              return regeneratorRuntime.awrap(this.collectionByProcessingRawItems({
                rawItems: this.response.rawRetrievedItems,
                source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_1__["PayloadSources"].RemoteRetrieved
              }));

            case 3:
              collectionRetrieved = _context.sent;
              collections.push(collectionRetrieved);
              _context.next = 7;
              return regeneratorRuntime.awrap(this.collectionByProcessingRawItems({
                rawItems: this.response.rawSavedItems,
                source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_1__["PayloadSources"].RemoteSaved
              }));

            case 7:
              collectionSaved = _context.sent;
              collections.push(collectionSaved);
              _context.next = 11;
              return regeneratorRuntime.awrap(this.collectionByProcessingRawItems({
                rawItems: this.response.rawUuidConflictItems,
                source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_1__["PayloadSources"].ConflictUuid
              }));

            case 11:
              collectionUuidConflicts = _context.sent;
              collections.push(collectionUuidConflicts);
              _context.next = 15;
              return regeneratorRuntime.awrap(this.collectionByProcessingRawItems({
                rawItems: this.response.rawDataConflictItems,
                source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_1__["PayloadSources"].ConflictData
              }));

            case 15:
              collectionDataConflicts = _context.sent;
              collections.push(collectionDataConflicts);
              return _context.abrupt("return", collections);

            case 18:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "collectionByProcessingRawItems",
    value: function collectionByProcessingRawItems(_ref2) {
      var _this = this;

      var rawItems, source, payloads, collection, deltaClass, delta, resultCollection, updatedDirtyPayloads;
      return regeneratorRuntime.async(function collectionByProcessingRawItems$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              rawItems = _ref2.rawItems, source = _ref2.source;
              payloads = rawItems.map(function (rawItem) {
                return Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_4__["CreateSourcedPayloadFromObject"])({
                  object: rawItem,
                  source: source
                });
              });
              collection = new _Payloads_collection__WEBPACK_IMPORTED_MODULE_2__["PayloadCollection"]({
                payloads: payloads,
                source: source
              });
              deltaClass = Object(_Payloads_deltas_generator__WEBPACK_IMPORTED_MODULE_0__["DeltaClassForSource"])(source); // eslint-disable-next-line new-cap

              delta = new deltaClass({
                baseCollection: this.baseCollection,
                applyCollection: collection,
                relatedCollectionSet: this.relatedCollectionSet
              });
              _context2.next = 7;
              return regeneratorRuntime.awrap(delta.resultingCollection());

            case 7:
              resultCollection = _context2.sent;
              updatedDirtyPayloads = resultCollection.allPayloads.map(function (payload) {
                return Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_4__["CopyPayload"])({
                  payload: payload,
                  override: {
                    dirty: _this.finalDirtyStateForPayload(payload)
                  }
                });
              });
              return _context2.abrupt("return", new _Payloads_collection__WEBPACK_IMPORTED_MODULE_2__["PayloadCollection"]({
                payloads: updatedDirtyPayloads,
                source: source
              }));

            case 10:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "finalDirtyStateForPayload",
    value: function finalDirtyStateForPayload(payload) {
      var current = this.baseCollection.findPayload(payload.uuid);
      /**
       * `current` can be null in the case of new
       * items that haven't yet been mapped
       */

      var stillDirty;

      if (current) {
        /** Marking items dirty after lastSyncBegan will cause them to sync again. */
        stillDirty = current.dirtiedDate > current.lastSyncBegan;
      } else {
        /** Forward whatever value any delta resolver may have set */
        stillDirty = payload.dirty;
      }

      return stillDirty;
    }
  }]);

  return AccountSyncResponseResolver;
}();

/***/ }),

/***/ "./lib/services/sync/events.js":
/*!*************************************!*\
  !*** ./lib/services/sync/events.js ***!
  \*************************************/
/*! exports provided: SyncEvents */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SyncEvents", function() { return SyncEvents; });
var SyncEvents = {
  /** A full sync can consist of many round-trips to the server */
  FullSyncCompleted: 'sync:full-completed',

  /** A single sync is just one round-trip to the server completion */
  SingleSyncCompleted: 'sync:single-completed',
  DownloadFirstSyncCompleted: 'sync:initial-completed',
  SyncTakingTooLong: 'sync:taking-too-long',
  SyncError: 'sync:error',
  SyncException: 'sync:sync-exception',
  InvalidSession: 'sync:invalid-session',
  MajorDataChange: 'major-data-change',
  LocalDataIncrementalLoad: 'local-data-incremental-load',
  EnterOutOfSync: 'enter-out-of-sync',
  ExitOutOfSync: 'exit-out-of-sync'
};

/***/ }),

/***/ "./lib/services/sync/offline/operation.js":
/*!************************************************!*\
  !*** ./lib/services/sync/offline/operation.js ***!
  \************************************************/
/*! exports provided: OfflineSyncOperation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OfflineSyncOperation", function() { return OfflineSyncOperation; });
/* harmony import */ var _Payloads_generator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Payloads/generator */ "./lib/protocol/payloads/generator.js");
/* harmony import */ var _Services_sync_signals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Services/sync/signals */ "./lib/services/sync/signals.js");
/* harmony import */ var _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Payloads/fields */ "./lib/protocol/payloads/fields.js");
/* harmony import */ var _Payloads_sources__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Payloads/sources */ "./lib/protocol/payloads/sources.js");
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }





var OfflineSyncOperation =
/*#__PURE__*/
function () {
  /**
   * @param payloads  An array of payloads to sync offline
   * @param receiver  A function that recieves callback multiple times during the operation
   *                  and takes two parameters: (payloads, actions)
   */
  function OfflineSyncOperation(_ref) {
    var payloads = _ref.payloads,
        receiver = _ref.receiver;

    _classCallCheck(this, OfflineSyncOperation);

    this.payloads = payloads;
    this.receiver = receiver;
  }

  _createClass(OfflineSyncOperation, [{
    key: "run",
    value: function run() {
      var responsePayloads, response;
      return regeneratorRuntime.async(function run$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              responsePayloads = this.payloads.map(function (payload) {
                var _override;

                return Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_0__["CreateSourcedPayloadFromObject"])({
                  object: payload,
                  source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_3__["PayloadSources"].LocalSaved,
                  override: (_override = {}, _defineProperty(_override, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].Dirty, false), _defineProperty(_override, _Payloads_fields__WEBPACK_IMPORTED_MODULE_2__["PayloadFields"].LastSyncEnd, new Date()), _override)
                });
              });
              response = {
                payloads: responsePayloads
              };
              _context.next = 4;
              return regeneratorRuntime.awrap(this.receiver(response, _Services_sync_signals__WEBPACK_IMPORTED_MODULE_1__["SIGNAL_TYPE_RESPONSE"]));

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }]);

  return OfflineSyncOperation;
}();

/***/ }),

/***/ "./lib/services/sync/signals.js":
/*!**************************************!*\
  !*** ./lib/services/sync/signals.js ***!
  \**************************************/
/*! exports provided: SIGNAL_TYPE_RESPONSE, SIGNAL_TYPE_STATUS_CHANGED */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SIGNAL_TYPE_RESPONSE", function() { return SIGNAL_TYPE_RESPONSE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SIGNAL_TYPE_STATUS_CHANGED", function() { return SIGNAL_TYPE_STATUS_CHANGED; });
var SIGNAL_TYPE_RESPONSE = 1;
var SIGNAL_TYPE_STATUS_CHANGED = 2;

/***/ }),

/***/ "./lib/services/sync/sync_op_status.js":
/*!*********************************************!*\
  !*** ./lib/services/sync/sync_op_status.js ***!
  \*********************************************/
/*! exports provided: SyncOpStatus */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SyncOpStatus", function() { return SyncOpStatus; });
/* harmony import */ var _Lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib */ "./lib/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


var HEALTHY_SYNC_DURATION_THRESHOLD_S = 5;
var TIMING_MONITOR_POLL_FREQUENCY_MS = 500;
var SyncOpStatus =
/*#__PURE__*/
function () {
  function SyncOpStatus(_ref) {
    var interval = _ref.interval,
        receiver = _ref.receiver;

    _classCallCheck(this, SyncOpStatus);

    this.interval = interval;
    this.receiver = receiver;
  }

  _createClass(SyncOpStatus, [{
    key: "setSyncInProgress",
    value: function setSyncInProgress(inProgress) {
      this.inProgress = true;
    }
  }, {
    key: "setUploadStatus",
    value: function setUploadStatus(_ref2) {
      var completed = _ref2.completed,
          total = _ref2.total;
      this.completedUpload = completed;
      this.totalUpload = total;
    }
  }, {
    key: "setDownloadStatus",
    value: function setDownloadStatus(_ref3) {
      var downloaded = _ref3.downloaded;
      this.downloaded = downloaded;
    }
  }, {
    key: "setDatabaseLoadStatus",
    value: function setDatabaseLoadStatus(_ref4) {
      var current = _ref4.current,
          total = _ref4.total,
          done = _ref4.done;
      this.databaseLoadCurrent = current;
      this.databaseLoadTotal = total;
      this.databaseLoadDone = done;
    }
  }, {
    key: "setDidBegin",
    value: function setDidBegin() {
      this.syncing = true;
      this.syncStart = new Date();
    }
  }, {
    key: "setDidEnd",
    value: function setDidEnd() {
      this.syncing = false;
      this.syncEnd = new Date();
    }
  }, {
    key: "startTimingMonitor",

    /**
     * Notifies receiver if current sync request is taking too long to complete.
     */
    value: function startTimingMonitor() {
      var _this = this;

      if (this.timingMonitor) {
        this.this.stopTimingMonitor();
      }

      this.timingMonitor = this.interval(function () {
        if (_this.secondsSinceSyncStart > HEALTHY_SYNC_DURATION_THRESHOLD_S) {
          _this.receiver(_Lib__WEBPACK_IMPORTED_MODULE_0__["SyncEvents"].SyncTakingTooLong);

          _this.stopTimingMonitor();
        }
      }, TIMING_MONITOR_POLL_FREQUENCY_MS);
    }
  }, {
    key: "stopTimingMonitor",
    value: function stopTimingMonitor() {
      if (this.interval.hasOwnProperty('cancel')) {
        this.interval.cancel(this.timingMonitor);
      } else {
        clearInterval(this.timingMonitor);
      }

      this.timingMonitor = null;
    }
  }, {
    key: "setError",
    value: function setError(error) {
      this.error = error;
    }
  }, {
    key: "clearError",
    value: function clearError() {
      this.error = null;
    }
  }, {
    key: "reset",
    value: function reset() {
      this.downloaded = 0;
      this.completedUpload = 0;
      this.totalUpload = 0;
      this.inProgress = false;
      this.syncing = false;
    }
  }, {
    key: "syncInProgress",
    get: function get() {
      return this.syncing === true;
    }
  }, {
    key: "secondsSinceSyncStart",
    get: function get() {
      return (new Date() - this.syncStart) / 1000;
    }
  }]);

  return SyncOpStatus;
}();

/***/ }),

/***/ "./lib/services/sync/sync_service.js":
/*!*******************************************!*\
  !*** ./lib/services/sync/sync_service.js ***!
  \*******************************************/
/*! exports provided: TIMING_STRATEGY_RESOLVE_ON_NEXT, TIMING_STRATEGY_FORCE_SPAWN_NEW, SyncModes, SyncSources, SNSyncManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TIMING_STRATEGY_RESOLVE_ON_NEXT", function() { return TIMING_STRATEGY_RESOLVE_ON_NEXT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TIMING_STRATEGY_FORCE_SPAWN_NEW", function() { return TIMING_STRATEGY_FORCE_SPAWN_NEW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SyncModes", function() { return SyncModes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SyncSources", function() { return SyncSources; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SNSyncManager", function() { return SNSyncManager; });
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
/* harmony import */ var _Services_pure_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @Services/pure_service */ "./lib/services/pure_service.js");
/* harmony import */ var _Services_sync_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @Services/sync/utils */ "./lib/services/sync/utils.js");
/* harmony import */ var _Services_sync_sync_op_status__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @Services/sync/sync_op_status */ "./lib/services/sync/sync_op_status.js");
/* harmony import */ var _Services_sync_sync_state__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @Services/sync/sync_state */ "./lib/services/sync/sync_state.js");
/* harmony import */ var _Services_sync_account_downloader__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @Services/sync/account/downloader */ "./lib/services/sync/account/downloader.js");
/* harmony import */ var _Services_sync_account_response_resolver__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @Services/sync/account/response_resolver */ "./lib/services/sync/account/response_resolver.js");
/* harmony import */ var _Services_sync_account_operation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @Services/sync/account/operation */ "./lib/services/sync/account/operation.js");
/* harmony import */ var _Services_sync_offline_operation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @Services/sync/offline/operation */ "./lib/services/sync/offline/operation.js");
/* harmony import */ var _Payloads_deltas__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @Payloads/deltas */ "./lib/protocol/payloads/deltas/index.js");
/* harmony import */ var _Payloads_fields__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @Payloads/fields */ "./lib/protocol/payloads/fields.js");
/* harmony import */ var _Payloads_sources__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @Payloads/sources */ "./lib/protocol/payloads/sources.js");
/* harmony import */ var _Payloads_collection__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @Payloads/collection */ "./lib/protocol/payloads/collection.js");
/* harmony import */ var _Payloads_functions__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @Payloads/functions */ "./lib/protocol/payloads/functions.js");
/* harmony import */ var _Payloads_generator__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @Payloads/generator */ "./lib/protocol/payloads/generator.js");
/* harmony import */ var _Protocol_intents__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @Protocol/intents */ "./lib/protocol/intents.js");
/* harmony import */ var _Models_content_types__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @Models/content_types */ "./lib/models/content_types.js");
/* harmony import */ var _Models_generator__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @Models/generator */ "./lib/models/generator.js");
/* harmony import */ var _Services_sync_signals__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @Services/sync/signals */ "./lib/services/sync/signals.js");
/* harmony import */ var _Lib__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @Lib */ "./lib/index.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }





















var DEFAULT_DATABASE_LOAD_BATCH_SIZE = 100;
var DEFAULT_MAX_DISCORDANCE = 5;
var DEFAULT_MAJOR_CHANGE_THRESHOLD = 15;
var INVALID_SESSION_RESPONSE_STATUS = 401;
var TIMING_STRATEGY_RESOLVE_ON_NEXT = 1;
var TIMING_STRATEGY_FORCE_SPAWN_NEW = 2;
var SyncModes = {
  Default: 1,
  DownloadFirst: 2
};
var SyncSources = {
  External: 1,
  SpawnQueue: 2,
  ResolveQueue: 3,
  MoreDirtyItems: 4,
  AfterDownloadFirst: 5,
  IntegrityCheck: 6,
  ResolveOutOfSync: 7
};
var SNSyncManager =
/*#__PURE__*/
function (_PureService) {
  _inherits(SNSyncManager, _PureService);

  function SNSyncManager(_ref) {
    var _this;

    var sessionManager = _ref.sessionManager,
        protocolService = _ref.protocolService,
        storageService = _ref.storageService,
        modelManager = _ref.modelManager,
        apiService = _ref.apiService,
        interval = _ref.interval;

    _classCallCheck(this, SNSyncManager);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SNSyncManager).call(this));
    _this.sessionManager = sessionManager;
    _this.protocolService = protocolService;
    _this.modelManager = modelManager;
    _this.storageService = storageService;
    _this.apiService = apiService;
    _this.interval = interval;
    _this.statusObservers = [];
    _this.resolveQueue = [];
    _this.spawnQueue = [];
    _this.majorChangeThreshold = DEFAULT_MAJOR_CHANGE_THRESHOLD;
    _this.maxDiscordance = DEFAULT_MAX_DISCORDANCE;

    _this.initializeStatus();

    _this.initializeState();
    /** Content types appearing first are always mapped first */


    _this.localLoadPriorty = [_Models_content_types__WEBPACK_IMPORTED_MODULE_16__["ContentTypes"].ItemsKey, _Models_content_types__WEBPACK_IMPORTED_MODULE_16__["ContentTypes"].UserPrefs, _Models_content_types__WEBPACK_IMPORTED_MODULE_16__["ContentTypes"].Privileges, _Models_content_types__WEBPACK_IMPORTED_MODULE_16__["ContentTypes"].Component, _Models_content_types__WEBPACK_IMPORTED_MODULE_16__["ContentTypes"].Theme];
    _this.nonEncryptedTypes = [_Models_content_types__WEBPACK_IMPORTED_MODULE_16__["ContentTypes"].Mfa, _Models_content_types__WEBPACK_IMPORTED_MODULE_16__["ContentTypes"].ServerExtension];
    return _this;
  }

  _createClass(SNSyncManager, [{
    key: "initializeStatus",
    value: function initializeStatus() {
      var _this2 = this;

      this.opStatus = new _Services_sync_sync_op_status__WEBPACK_IMPORTED_MODULE_3__["SyncOpStatus"]({
        interval: this.interval,
        receiver: function receiver(event) {
          _this2.notifyEvent(event);
        }
      });
    }
  }, {
    key: "initializeState",
    value: function initializeState() {
      var _this3 = this;

      this.state = new _Services_sync_sync_state__WEBPACK_IMPORTED_MODULE_4__["SyncState"]({
        maxDiscordance: this.maxDiscordance,
        receiver: function receiver(event) {
          if (event === _Lib__WEBPACK_IMPORTED_MODULE_19__["SyncEvents"].EnterOutOfSync) {
            _this3.notifyEvent(_Lib__WEBPACK_IMPORTED_MODULE_19__["SyncEvents"].EnterOutOfSync);
          } else if (event === _Lib__WEBPACK_IMPORTED_MODULE_19__["SyncEvents"].ExitOutOfSync) {
            _this3.notifyEvent(_Lib__WEBPACK_IMPORTED_MODULE_19__["SyncEvents"].ExitOutOfSync);
          }
        }
      });
    }
  }, {
    key: "lockSyncing",
    value: function lockSyncing() {
      this.locked = true;
    }
  }, {
    key: "unlockSyncing",
    value: function unlockSyncing() {
      this.locked = false;
    }
  }, {
    key: "isOutOfSync",
    value: function isOutOfSync() {
      return this.state.isOutOfSync();
    }
  }, {
    key: "getLastSyncDate",
    value: function getLastSyncDate() {
      return this.state.lastSyncDate;
    }
    /** 
     * @public 
     * Called by application when sign in or registration occurs.
     */

  }, {
    key: "resetSyncState",
    value: function resetSyncState() {
      this.state.reset();
    }
    /** @public */

  }, {
    key: "getDatabasePayloads",
    value: function getDatabasePayloads() {
      return regeneratorRuntime.async(function getDatabasePayloads$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              return _context.abrupt("return", this.storageService.getAllRawPayloads());

            case 1:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
    /** @public */

  }, {
    key: "isDatabaseLoaded",
    value: function isDatabaseLoaded() {
      return this.databaseLoaded;
    }
    /** @public */

  }, {
    key: "loadDatabasePayloads",
    value: function loadDatabasePayloads(rawPayloads) {
      var unsortedPayloads, payloads, itemsKeysPayloads, decryptedItemsKeys, payloadCount, batchSize, numBatches, batchIndex, currentPosition, batch, decrypted;
      return regeneratorRuntime.async(function loadDatabasePayloads$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              if (!this.databaseLoaded) {
                _context2.next = 2;
                break;
              }

              throw 'Attempting to initialize already initialized local database.';

            case 2:
              unsortedPayloads = rawPayloads.map(function (rawPayload) {
                return Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_14__["CreateMaxPayloadFromAnyObject"])({
                  object: rawPayload
                });
              });
              payloads = Object(_Services_sync_utils__WEBPACK_IMPORTED_MODULE_2__["SortPayloadsByRecentAndContentPriority"])(unsortedPayloads, this.localLoadPriorty);
              /** Decrypt and map items keys first */

              itemsKeysPayloads = payloads.filter(function (payload) {
                return payload.content_type === _Models_content_types__WEBPACK_IMPORTED_MODULE_16__["ContentTypes"].ItemsKey;
              });
              Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["subtractFromArray"])(payloads, itemsKeysPayloads);
              _context2.next = 8;
              return regeneratorRuntime.awrap(this.protocolService.payloadsByDecryptingPayloads({
                payloads: itemsKeysPayloads
              }));

            case 8:
              decryptedItemsKeys = _context2.sent;
              _context2.next = 11;
              return regeneratorRuntime.awrap(this.modelManager.mapPayloadsToLocalItems({
                payloads: decryptedItemsKeys,
                source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_11__["PayloadSources"].LocalRetrieved
              }));

            case 11:
              /** Map in batches to give interface a chance to update */
              payloadCount = payloads.length;
              batchSize = DEFAULT_DATABASE_LOAD_BATCH_SIZE;
              numBatches = Math.ceil(payloadCount / batchSize);
              batchIndex = 0;

            case 15:
              if (!(batchIndex < numBatches)) {
                _context2.next = 28;
                break;
              }

              currentPosition = batchIndex * batchSize;
              batch = payloads.slice(currentPosition, currentPosition + batchSize);
              _context2.next = 20;
              return regeneratorRuntime.awrap(this.protocolService.payloadsByDecryptingPayloads({
                payloads: batch
              }));

            case 20:
              decrypted = _context2.sent;
              _context2.next = 23;
              return regeneratorRuntime.awrap(this.modelManager.mapPayloadsToLocalItems({
                payloads: decrypted,
                source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_11__["PayloadSources"].LocalRetrieved
              }));

            case 23:
              this.notifyEvent(_Lib__WEBPACK_IMPORTED_MODULE_19__["SyncEvents"].LocalDataIncrementalLoad);
              this.opStatus.setDatabaseLoadStatus({
                current: currentPosition,
                total: payloadCount
              });

            case 25:
              batchIndex++;
              _context2.next = 15;
              break;

            case 28:
              this.opStatus.setDatabaseLoadStatus({
                done: true
              });
              this.databaseLoaded = true;

            case 30:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "setLastSyncToken",
    value: function setLastSyncToken(token) {
      return regeneratorRuntime.async(function setLastSyncToken$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              this.syncToken = token;
              return _context3.abrupt("return", this.storageService.setValue(_Lib__WEBPACK_IMPORTED_MODULE_19__["StorageKeys"].LastSyncToken, token));

            case 2:
            case "end":
              return _context3.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "setPaginationToken",
    value: function setPaginationToken(token) {
      return regeneratorRuntime.async(function setPaginationToken$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              this.cursorToken = token;

              if (!token) {
                _context4.next = 5;
                break;
              }

              return _context4.abrupt("return", this.storageService.setValue(_Lib__WEBPACK_IMPORTED_MODULE_19__["StorageKeys"].PaginationToken, token));

            case 5:
              return _context4.abrupt("return", this.storageService.removeValue(_Lib__WEBPACK_IMPORTED_MODULE_19__["StorageKeys"].PaginationToken));

            case 6:
            case "end":
              return _context4.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "getLastSyncToken",
    value: function getLastSyncToken() {
      return regeneratorRuntime.async(function getLastSyncToken$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              if (this.syncToken) {
                _context5.next = 4;
                break;
              }

              _context5.next = 3;
              return regeneratorRuntime.awrap(this.storageService.getValue(_Lib__WEBPACK_IMPORTED_MODULE_19__["StorageKeys"].LastSyncToken));

            case 3:
              this.syncToken = _context5.sent;

            case 4:
              return _context5.abrupt("return", this.syncToken);

            case 5:
            case "end":
              return _context5.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "getPaginationToken",
    value: function getPaginationToken() {
      return regeneratorRuntime.async(function getPaginationToken$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              if (this.cursorToken) {
                _context6.next = 4;
                break;
              }

              _context6.next = 3;
              return regeneratorRuntime.awrap(this.storageService.getValue(_Lib__WEBPACK_IMPORTED_MODULE_19__["StorageKeys"].PaginationToken));

            case 3:
              this.cursorToken = _context6.sent;

            case 4:
              return _context6.abrupt("return", this.cursorToken);

            case 5:
            case "end":
              return _context6.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "clearSyncPositionTokens",
    value: function clearSyncPositionTokens() {
      return regeneratorRuntime.async(function clearSyncPositionTokens$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              this.syncToken = null;
              this.cursorToken = null;
              _context7.next = 4;
              return regeneratorRuntime.awrap(this.storageService.removeValue(_Lib__WEBPACK_IMPORTED_MODULE_19__["StorageKeys"].LastSyncToken));

            case 4:
              _context7.next = 6;
              return regeneratorRuntime.awrap(this.storageService.removeValue(_Lib__WEBPACK_IMPORTED_MODULE_19__["StorageKeys"].PaginationToken));

            case 6:
            case "end":
              return _context7.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "itemsNeedingSync",
    value: function itemsNeedingSync() {
      var items;
      return regeneratorRuntime.async(function itemsNeedingSync$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              items = this.modelManager.getDirtyItems();
              return _context8.abrupt("return", items);

            case 2:
            case "end":
              return _context8.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "alternateUuidForItem",
    value: function alternateUuidForItem(item) {
      var payload, results, mapped;
      return regeneratorRuntime.async(function alternateUuidForItem$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              if (item.isItem) {
                _context9.next = 2;
                break;
              }

              throw 'Attempting to alternate uuid of non-item object';

            case 2:
              payload = Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_14__["CreateMaxPayloadFromAnyObject"])({
                object: item
              });
              _context9.next = 5;
              return regeneratorRuntime.awrap(Object(_Payloads_functions__WEBPACK_IMPORTED_MODULE_13__["PayloadsByAlternatingUuid"])({
                payload: payload,
                baseCollection: this.modelManager.getMasterCollection()
              }));

            case 5:
              results = _context9.sent;
              _context9.next = 8;
              return regeneratorRuntime.awrap(this.modelManager.mapPayloadsToLocalItems({
                payloads: results,
                source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_11__["PayloadSources"].LocalSaved
              }));

            case 8:
              mapped = _context9.sent;
              _context9.next = 11;
              return regeneratorRuntime.awrap(this.persistPayloads({
                decryptedPayloads: results
              }));

            case 11:
              return _context9.abrupt("return", mapped[0]);

            case 12:
            case "end":
              return _context9.stop();
          }
        }
      }, null, this);
    }
    /**
     * Mark all items as dirty and needing sync, then persist to storage.
     * @param alternateUuids  In the case of signing in and merging local data, we alternate UUIDs
     *                        to avoid overwriting data a user may retrieve that has the same UUID.
     *                        Alternating here forces us to to create duplicates of the items instead.
     */

  }, {
    key: "markAllItemsAsNeedingSync",
    value: function markAllItemsAsNeedingSync() {
      var _ref2,
          alternateUuids,
          _items,
          _iteratorNormalCompletion,
          _didIteratorError,
          _iteratorError,
          _iterator,
          _step,
          item,
          items,
          payloads,
          _args10 = arguments;

      return regeneratorRuntime.async(function markAllItemsAsNeedingSync$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              _ref2 = _args10.length > 0 && _args10[0] !== undefined ? _args10[0] : {}, alternateUuids = _ref2.alternateUuids;
              this.log('Marking all items as needing sync');

              if (!alternateUuids) {
                _context10.next = 30;
                break;
              }

              /** Make a copy of the array, as alternating uuid will affect array */
              _items = this.modelManager.allNondummyItems.filter(function (item) {
                return !item.errorDecrypting;
              }).slice();
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context10.prev = 7;
              _iterator = _items[Symbol.iterator]();

            case 9:
              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                _context10.next = 16;
                break;
              }

              item = _step.value;
              _context10.next = 13;
              return regeneratorRuntime.awrap(this.alternateUuidForItem(item));

            case 13:
              _iteratorNormalCompletion = true;
              _context10.next = 9;
              break;

            case 16:
              _context10.next = 22;
              break;

            case 18:
              _context10.prev = 18;
              _context10.t0 = _context10["catch"](7);
              _didIteratorError = true;
              _iteratorError = _context10.t0;

            case 22:
              _context10.prev = 22;
              _context10.prev = 23;

              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }

            case 25:
              _context10.prev = 25;

              if (!_didIteratorError) {
                _context10.next = 28;
                break;
              }

              throw _iteratorError;

            case 28:
              return _context10.finish(25);

            case 29:
              return _context10.finish(22);

            case 30:
              items = this.modelManager.allNondummyItems;
              payloads = items.map(function (item) {
                return Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_14__["CreateMaxPayloadFromAnyObject"])({
                  object: item,
                  override: {
                    dirty: true
                  }
                });
              });
              _context10.next = 34;
              return regeneratorRuntime.awrap(this.modelManager.mapPayloadsToLocalItems({
                payloads: payloads
              }));

            case 34:
              _context10.next = 36;
              return regeneratorRuntime.awrap(this.persistPayloads({
                decryptedPayloads: payloads
              }));

            case 36:
            case "end":
              return _context10.stop();
          }
        }
      }, null, this, [[7, 18, 22, 30], [23,, 25, 29]]);
    }
    /**
     * @public
     * If encryption status changes (esp. on mobile, where local storage encryption
     * can be disabled), consumers may call this function to repersist all items to
     * disk using latest encryption status.
     */

  }, {
    key: "repersistAllItems",
    value: function repersistAllItems() {
      var items, payloads;
      return regeneratorRuntime.async(function repersistAllItems$(_context11) {
        while (1) {
          switch (_context11.prev = _context11.next) {
            case 0:
              items = this.modelManager.allItems;
              payloads = items.map(function (item) {
                return Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_14__["CreateMaxPayloadFromAnyObject"])({
                  object: item
                });
              });
              return _context11.abrupt("return", this.persistPayloads({
                decryptedPayloads: payloads
              }));

            case 3:
            case "end":
              return _context11.stop();
          }
        }
      }, null, this);
    }
    /**
     * Return the payloads that need local persistence, before beginning a sync.
     * This way, if the application is closed before a sync request completes,
     * pending data will be saved to disk, and synced the next time the app opens.
     */

  }, {
    key: "popPayloadsNeedingPreSyncSave",
    value: function popPayloadsNeedingPreSyncSave(from) {
      var lastPreSyncSave, payloads;
      return regeneratorRuntime.async(function popPayloadsNeedingPreSyncSave$(_context12) {
        while (1) {
          switch (_context12.prev = _context12.next) {
            case 0:
              lastPreSyncSave = this.state.lastPreSyncSaveDate;

              if (lastPreSyncSave) {
                _context12.next = 3;
                break;
              }

              return _context12.abrupt("return", from);

            case 3:
              /** dirtiedDate can be null if the payload was created as dirty */
              payloads = from.filter(function (candidate) {
                return !candidate.dirtiedDate || candidate.dirtiedDate > lastPreSyncSave;
              });
              this.state.setLastPresaveSyncDate(new Date());
              return _context12.abrupt("return", payloads);

            case 6:
            case "end":
              return _context12.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "timingStrategyResolveOnNext",
    value: function timingStrategyResolveOnNext() {
      var _this4 = this;

      return new Promise(function (resolve, reject) {
        _this4.resolveQueue.push({
          resolve: resolve,
          reject: reject
        });
      });
    }
  }, {
    key: "timingStrategyForceSpawnNew",
    value: function timingStrategyForceSpawnNew(options) {
      var _this5 = this;

      return new Promise(function (resolve, reject) {
        _this5.spawnQueue.push({
          resolve: resolve,
          reject: reject,
          options: options
        });
      });
    }
    /**
     * For timing strategy TIMING_STRATEGY_FORCE_SPAWN_NEW, we will execute a whole sync request
     * and pop it from the queue.
     */

  }, {
    key: "popSpawnQueue",
    value: function popSpawnQueue() {
      if (this.spawnQueue.length === 0) {
        return null;
      }

      var promise = this.spawnQueue[0];
      Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["removeFromIndex"])(this.spawnQueue, 0);
      this.log('Syncing again from spawn queue');
      return this.sync(_objectSpread({
        timingStrategy: TIMING_STRATEGY_FORCE_SPAWN_NEW,
        source: SyncSources.SpawnQueue
      }, promise.options)).then(function () {
        promise.resolve();
      }).catch(function () {
        promise.reject();
      });
    }
    /** 
     * Certain content types should not be encrypted when sending to server, 
     * such as server extensions 
     */

  }, {
    key: "payloadsByPreparingForServer",
    value: function payloadsByPreparingForServer(payloads) {
      var _this6 = this;

      return this.protocolService.payloadsByEncryptingPayloads({
        payloads: payloads,
        intent: function intent(payload) {
          return _this6.nonEncryptedTypes.includes(payload.content_type) ? _Protocol_intents__WEBPACK_IMPORTED_MODULE_15__["EncryptionIntents"].SyncDecrypted : _Protocol_intents__WEBPACK_IMPORTED_MODULE_15__["EncryptionIntents"].Sync;
        }
      });
    }
    /**
     * @param timingStrategy  TIMING_STRATEGY_RESOLVE_ON_NEXT | Default
     *                        Promise will be resolved on the next sync requests after the current one completes.
     *                        If there is no scheduled sync request, one will be scheduled.
     *
     *                        TIMING_STRATEGY_FORCE_SPAWN_NEW
     *                        A new sync request is guarenteed to be generated for your request, no matter how long it takes.
     *                        Promise will be resolved whenever this sync request is processed in the serial queue.
     *
     * @param mode            SyncModes.Default
     *                        Performs a standard sync, uploading any dirty items and retrieving items.
     *                        SyncModes.DownloadFirst
     *                        The first sync for an account, where we first want to download all remote items first
     *                        before uploading any dirty items. This allows a consumer, for example, to download
     *                        all data to see if user has an items key, and if not, only then create a new one.
     * @param checkIntegrity  Whether the server should compute and return an integrity hash.
     * @param source          SyncSource value. Internally used to keep track of how sync requests were spawned.
     */

  }, {
    key: "sync",
    value: function sync() {
      var _this7 = this;

      var _ref3,
          timingStrategy,
          mode,
          checkIntegrity,
          source,
          syncLocked,
          captureLock,
          releaseLock,
          syncInProgress,
          databaseLoaded,
          canExecuteSync,
          items,
          neverSyncedDeleted,
          decryptedPayloads,
          payloadsNeedingSave,
          inTimeResolveQueue,
          useStrategy,
          beginDate,
          useMode,
          online,
          uploadPayloads,
          operation,
          _iteratorNormalCompletion2,
          _didIteratorError2,
          _iteratorError2,
          _iterator2,
          _step2,
          callback,
          _args13 = arguments;

      return regeneratorRuntime.async(function sync$(_context13) {
        while (1) {
          switch (_context13.prev = _context13.next) {
            case 0:
              _ref3 = _args13.length > 0 && _args13[0] !== undefined ? _args13[0] : {}, timingStrategy = _ref3.timingStrategy, mode = _ref3.mode, checkIntegrity = _ref3.checkIntegrity, source = _ref3.source;

              if (!this.locked) {
                _context13.next = 4;
                break;
              }

              this.log('Sync Locked');
              return _context13.abrupt("return");

            case 4:
              /** 
               * Allows us to lock this function from triggering duplicate network requests.
               * There are two types of locking checks:
               * 1. syncLocked(): If a call to sync() call has begun preparing to be sent to the server.
               *                  but not yet completed all the code below before reaching that point.
               *                  (before reaching opStatus.setDidBegin).
               * 2. syncOpInProgress: If a sync() call is in flight to the server.
               */
              syncLocked = function syncLocked() {
                return _this7.syncLock;
              };

              captureLock = function captureLock() {
                _this7.syncLock = true;
              };

              releaseLock = function releaseLock() {
                _this7.syncLock = false;
              };

              syncInProgress = this.opStatus.syncInProgress;
              databaseLoaded = this.databaseLoaded;
              canExecuteSync = !syncLocked();

              if (canExecuteSync && databaseLoaded && !syncInProgress) {
                captureLock();
              }

              if (!source) {
                source = SyncSources.External;
              }

              _context13.next = 14;
              return regeneratorRuntime.awrap(this.itemsNeedingSync());

            case 14:
              items = _context13.sent;

              /**
               * Items that have never been synced and marked as deleted should not be
               * uploaded to server, and instead deleted directly after sync completion.
               */
              neverSyncedDeleted = items.filter(function (item) {
                return item.neverSynced && item.deleted;
              });
              Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["subtractFromArray"])(items, neverSyncedDeleted);
              decryptedPayloads = items.map(function (item) {
                return item.payloadRepresentation();
              });
              _context13.next = 20;
              return regeneratorRuntime.awrap(this.popPayloadsNeedingPreSyncSave(decryptedPayloads));

            case 20:
              payloadsNeedingSave = _context13.sent;
              _context13.next = 23;
              return regeneratorRuntime.awrap(this.persistPayloads({
                decryptedPayloads: payloadsNeedingSave
              }));

            case 23:
              /** The resolve queue before we add any new elements to it below */
              inTimeResolveQueue = this.resolveQueue.slice();
              useStrategy = !Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(timingStrategy) ? timingStrategy : TIMING_STRATEGY_RESOLVE_ON_NEXT;

              if (!(syncInProgress || !databaseLoaded || !canExecuteSync)) {
                _context13.next = 36;
                break;
              }

              this.log(!canExecuteSync ? 'Another function call has begun preparing for sync.' : syncInProgress ? 'Attempting to sync while existing sync in progress.' : 'Attempting to sync before local database has loaded.');

              if (!(useStrategy === TIMING_STRATEGY_RESOLVE_ON_NEXT)) {
                _context13.next = 31;
                break;
              }

              return _context13.abrupt("return", this.timingStrategyResolveOnNext());

            case 31:
              if (!(useStrategy === TIMING_STRATEGY_FORCE_SPAWN_NEW)) {
                _context13.next = 35;
                break;
              }

              return _context13.abrupt("return", this.timingStrategyForceSpawnNew({
                checkIntegrity: checkIntegrity
              }));

            case 35:
              throw "Unhandled timing strategy ".concat(useStrategy);

            case 36:
              /** Lock syncing immediately after checking in progress above */
              this.opStatus.setDidBegin();
              /** 
               * lastSyncBegan must be set *after* any point we may have returned above. 
               * Setting this value means the item was 100% sent to the server.
               */

              beginDate = new Date();
              _context13.next = 40;
              return regeneratorRuntime.awrap(this.modelManager.setItemsProperties({
                items: items,
                properties: _defineProperty({}, _Payloads_fields__WEBPACK_IMPORTED_MODULE_10__["PayloadFields"].LastSyncBegan, beginDate)
              }));

            case 40:
              useMode = !Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(mode) ? mode : SyncModes.Default;
              _context13.next = 43;
              return regeneratorRuntime.awrap(this.sessionManager.online());

            case 43:
              online = _context13.sent;

              if (!(useMode === SyncModes.Default)) {
                _context13.next = 56;
                break;
              }

              if (this.completedInitialSync) {
                _context13.next = 47;
                break;
              }

              throw 'Attempting to default mode sync without having completed initial.';

            case 47:
              if (!online) {
                _context13.next = 53;
                break;
              }

              _context13.next = 50;
              return regeneratorRuntime.awrap(this.payloadsByPreparingForServer(decryptedPayloads));

            case 50:
              uploadPayloads = _context13.sent;
              _context13.next = 54;
              break;

            case 53:
              uploadPayloads = decryptedPayloads;

            case 54:
              _context13.next = 57;
              break;

            case 56:
              if (useMode === SyncModes.DownloadFirst) {
                uploadPayloads = [];
              }

            case 57:
              if (!online) {
                _context13.next = 63;
                break;
              }

              _context13.next = 60;
              return regeneratorRuntime.awrap(this.syncOnlineOperation({
                payloads: uploadPayloads,
                checkIntegrity: checkIntegrity,
                source: source,
                mode: useMode
              }));

            case 60:
              operation = _context13.sent;
              _context13.next = 66;
              break;

            case 63:
              _context13.next = 65;
              return regeneratorRuntime.awrap(this.syncOfflineOperation({
                payloads: uploadPayloads
              }));

            case 65:
              operation = _context13.sent;

            case 66:
              _context13.next = 68;
              return regeneratorRuntime.awrap(operation.run());

            case 68:
              this.opStatus.setDidEnd();
              releaseLock();
              /**
               * For timing strategy TIMING_STRATEGY_RESOLVE_ON_NEXT.
               * Execute any callbacks pulled before this sync request began.
               */

              _iteratorNormalCompletion2 = true;
              _didIteratorError2 = false;
              _iteratorError2 = undefined;
              _context13.prev = 73;

              for (_iterator2 = inTimeResolveQueue[Symbol.iterator](); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                callback = _step2.value;
                callback.resolve();
              }

              _context13.next = 81;
              break;

            case 77:
              _context13.prev = 77;
              _context13.t0 = _context13["catch"](73);
              _didIteratorError2 = true;
              _iteratorError2 = _context13.t0;

            case 81:
              _context13.prev = 81;
              _context13.prev = 82;

              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }

            case 84:
              _context13.prev = 84;

              if (!_didIteratorError2) {
                _context13.next = 87;
                break;
              }

              throw _iteratorError2;

            case 87:
              return _context13.finish(84);

            case 88:
              return _context13.finish(81);

            case 89:
              Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["subtractFromArray"])(this.resolveQueue, inTimeResolveQueue);
              this.opStatus.reset();
              this.state.setLastSyncDate(new Date());

              if (operation.numberOfItemsInvolved >= this.majorChangeThreshold) {
                this.notifyEvent(_Lib__WEBPACK_IMPORTED_MODULE_19__["SyncEvents"].MajorDataChange);
              }

              _context13.next = 95;
              return regeneratorRuntime.awrap(this.handleNeverSyncedDeleted(neverSyncedDeleted));

            case 95:
              if (!(useMode !== SyncModes.DownloadFirst)) {
                _context13.next = 98;
                break;
              }

              _context13.next = 98;
              return regeneratorRuntime.awrap(this.notifyEvent(_Lib__WEBPACK_IMPORTED_MODULE_19__["SyncEvents"].FullSyncCompleted, {
                source: source
              }));

            case 98:
              if (!(useMode === SyncModes.DownloadFirst)) {
                _context13.next = 105;
                break;
              }

              this.completedInitialSync = true;
              _context13.next = 102;
              return regeneratorRuntime.awrap(this.notifyEvent(_Lib__WEBPACK_IMPORTED_MODULE_19__["SyncEvents"].DownloadFirstSyncCompleted));

            case 102:
              return _context13.abrupt("return", this.sync({
                source: SyncSources.AfterDownloadFirst,
                checkIntegrity: true
              }));

            case 105:
              if (!(!this.popSpawnQueue() && this.resolveQueue.length > 0)) {
                _context13.next = 110;
                break;
              }

              this.log('Syncing again from resolve queue');
              /** No need to await. */

              this.sync({
                source: SyncSources.ResolveQueue
              });
              _context13.next = 123;
              break;

            case 110:
              _context13.next = 112;
              return regeneratorRuntime.awrap(this.itemsNeedingSync());

            case 112:
              _context13.t1 = _context13.sent.length;

              if (!(_context13.t1 > 0)) {
                _context13.next = 117;
                break;
              }

              return _context13.abrupt("return", this.sync({
                source: SyncSources.MoreDirtyItems
              }));

            case 117:
              if (!operation.checkIntegrity) {
                _context13.next = 121;
                break;
              }

              if (this.state.needsSync && operation.done) {
                this.log('Syncing again from integrity check');
                this.sync({
                  checkIntegrity: true,
                  timingStrategy: TIMING_STRATEGY_FORCE_SPAWN_NEW,
                  source: SyncSources.IntegrityCheck
                });
              }

              _context13.next = 123;
              break;

            case 121:
              _context13.next = 123;
              return regeneratorRuntime.awrap(this.state.clearIntegrityHashes());

            case 123:
            case "end":
              return _context13.stop();
          }
        }
      }, null, this, [[73, 77, 81, 89], [82,, 84, 88]]);
    }
    /**
     * @private
     */

  }, {
    key: "syncOnlineOperation",
    value: function syncOnlineOperation(_ref4) {
      var _this8 = this;

      var payloads, checkIntegrity, source, mode, operation;
      return regeneratorRuntime.async(function syncOnlineOperation$(_context15) {
        while (1) {
          switch (_context15.prev = _context15.next) {
            case 0:
              payloads = _ref4.payloads, checkIntegrity = _ref4.checkIntegrity, source = _ref4.source, mode = _ref4.mode;
              this.log('Syncing online user', "source:", source, "mode:", mode, "payloads:", payloads);
              _context15.t0 = _Services_sync_account_operation__WEBPACK_IMPORTED_MODULE_7__["AccountSyncOperation"];
              _context15.t1 = this.apiService;
              _context15.t2 = payloads;
              _context15.t3 = checkIntegrity;
              _context15.next = 8;
              return regeneratorRuntime.awrap(this.getLastSyncToken());

            case 8:
              _context15.t4 = _context15.sent;
              _context15.next = 11;
              return regeneratorRuntime.awrap(this.getPaginationToken());

            case 11:
              _context15.t5 = _context15.sent;

              _context15.t6 = function receiver(signal, type) {
                var response;
                return regeneratorRuntime.async(function receiver$(_context14) {
                  while (1) {
                    switch (_context14.prev = _context14.next) {
                      case 0:
                        if (!(type === _Services_sync_signals__WEBPACK_IMPORTED_MODULE_18__["SIGNAL_TYPE_RESPONSE"])) {
                          _context14.next = 11;
                          break;
                        }

                        response = signal;

                        if (!response.hasError) {
                          _context14.next = 7;
                          break;
                        }

                        _context14.next = 5;
                        return regeneratorRuntime.awrap(_this8.handleErrorServerResponse({
                          operation: operation,
                          response: response
                        }));

                      case 5:
                        _context14.next = 9;
                        break;

                      case 7:
                        _context14.next = 9;
                        return regeneratorRuntime.awrap(_this8.handleSuccessServerResponse({
                          operation: operation,
                          response: response
                        }));

                      case 9:
                        _context14.next = 14;
                        break;

                      case 11:
                        if (!(type === _Services_sync_signals__WEBPACK_IMPORTED_MODULE_18__["SIGNAL_TYPE_STATUS_CHANGED"])) {
                          _context14.next = 14;
                          break;
                        }

                        _context14.next = 14;
                        return regeneratorRuntime.awrap(_this8.handleStatusChange({
                          operation: operation
                        }));

                      case 14:
                      case "end":
                        return _context14.stop();
                    }
                  }
                });
              };

              _context15.t7 = {
                apiService: _context15.t1,
                payloads: _context15.t2,
                checkIntegrity: _context15.t3,
                lastSyncToken: _context15.t4,
                paginationToken: _context15.t5,
                receiver: _context15.t6
              };
              operation = new _context15.t0(_context15.t7);
              return _context15.abrupt("return", operation);

            case 16:
            case "end":
              return _context15.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "syncOfflineOperation",
    value: function syncOfflineOperation(_ref5) {
      var _this9 = this;

      var payloads, operation;
      return regeneratorRuntime.async(function syncOfflineOperation$(_context17) {
        while (1) {
          switch (_context17.prev = _context17.next) {
            case 0:
              payloads = _ref5.payloads;
              this.log('Syncing offline user', payloads);
              operation = new _Services_sync_offline_operation__WEBPACK_IMPORTED_MODULE_8__["OfflineSyncOperation"]({
                payloads: payloads,
                receiver: function receiver(signal, type) {
                  return regeneratorRuntime.async(function receiver$(_context16) {
                    while (1) {
                      switch (_context16.prev = _context16.next) {
                        case 0:
                          if (!(type === _Services_sync_signals__WEBPACK_IMPORTED_MODULE_18__["SIGNAL_TYPE_RESPONSE"])) {
                            _context16.next = 5;
                            break;
                          }

                          _context16.next = 3;
                          return regeneratorRuntime.awrap(_this9.handleOfflineResponse(signal));

                        case 3:
                          _context16.next = 8;
                          break;

                        case 5:
                          if (!(type === _Services_sync_signals__WEBPACK_IMPORTED_MODULE_18__["SIGNAL_TYPE_STATUS_CHANGED"])) {
                            _context16.next = 8;
                            break;
                          }

                          _context16.next = 8;
                          return regeneratorRuntime.awrap(_this9.handleStatusChange({
                            operation: operation
                          }));

                        case 8:
                        case "end":
                          return _context16.stop();
                      }
                    }
                  });
                }
              });
              return _context17.abrupt("return", operation);

            case 4:
            case "end":
              return _context17.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "handleStatusChange",
    value: function handleStatusChange(_ref6) {
      var operation, pendingUploadCount, totalUploadCount, completedUploadCount;
      return regeneratorRuntime.async(function handleStatusChange$(_context18) {
        while (1) {
          switch (_context18.prev = _context18.next) {
            case 0:
              operation = _ref6.operation;
              pendingUploadCount = operation.pendingUploadCount();
              totalUploadCount = operation.totalUploadCount();
              completedUploadCount = totalUploadCount - pendingUploadCount;
              this.opStatus.setUploadStatus({
                completed: completedUploadCount,
                total: totalUploadCount
              });

            case 5:
            case "end":
              return _context18.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "handleOfflineResponse",
    value: function handleOfflineResponse(response) {
      var payloadsToMap, masterCollection, payloadsToPersist;
      return regeneratorRuntime.async(function handleOfflineResponse$(_context19) {
        while (1) {
          switch (_context19.prev = _context19.next) {
            case 0:
              payloadsToMap = response.payloads;
              /** Before persisting, merge with current base value that has content field */

              masterCollection = this.modelManager.getMasterCollection();
              payloadsToPersist = payloadsToMap.map(function (payload) {
                var base = masterCollection.findPayload(payload.uuid);
                return base.mergedWith(payload);
              });
              _context19.next = 5;
              return regeneratorRuntime.awrap(this.persistPayloads({
                decryptedPayloads: payloadsToPersist
              }));

            case 5:
              _context19.next = 7;
              return regeneratorRuntime.awrap(this.modelManager.mapPayloadsToLocalItems({
                payloads: payloadsToMap,
                source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_11__["PayloadSources"].LocalSaved
              }));

            case 7:
            case "end":
              return _context19.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "handleErrorServerResponse",
    value: function handleErrorServerResponse(_ref7) {
      var operation, response;
      return regeneratorRuntime.async(function handleErrorServerResponse$(_context20) {
        while (1) {
          switch (_context20.prev = _context20.next) {
            case 0:
              operation = _ref7.operation, response = _ref7.response;
              this.log('Sync Error', response);

              if (response.status === INVALID_SESSION_RESPONSE_STATUS) {
                this.notifyEvent(_Lib__WEBPACK_IMPORTED_MODULE_19__["SyncEvents"].InvalidSession);
              }

              this.opStatus.setError(response.error);
              this.notifyEvent(_Lib__WEBPACK_IMPORTED_MODULE_19__["SyncEvents"].SyncError, response.error);

            case 5:
            case "end":
              return _context20.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "handleSuccessServerResponse",
    value: function handleSuccessServerResponse(_ref8) {
      var operation, response, decryptedPayloads, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, payload, decrypted, masterCollection, resolver, collections, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, collection, payloadsToPersist, payloadClass, clientHash;

      return regeneratorRuntime.async(function handleSuccessServerResponse$(_context21) {
        while (1) {
          switch (_context21.prev = _context21.next) {
            case 0:
              operation = _ref8.operation, response = _ref8.response;

              if (!this._simulate_latency) {
                _context21.next = 4;
                break;
              }

              _context21.next = 4;
              return regeneratorRuntime.awrap(Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["sleep"])(this._simulate_latency.latency));

            case 4:
              this.log('Online Sync Response', response.rawResponse);
              this.setLastSyncToken(response.lastSyncToken);
              this.setPaginationToken(response.paginationToken);
              this.opStatus.clearError();
              this.opStatus.setDownloadStatus({
                downloaded: response.allProcessedPayloads.length
              });
              decryptedPayloads = [];
              _iteratorNormalCompletion3 = true;
              _didIteratorError3 = false;
              _iteratorError3 = undefined;
              _context21.prev = 13;
              _iterator3 = response.allProcessedPayloads[Symbol.iterator]();

            case 15:
              if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {
                _context21.next = 26;
                break;
              }

              payload = _step3.value;

              if (!(payload.deleted || !payload.fields().includes(_Payloads_fields__WEBPACK_IMPORTED_MODULE_10__["PayloadFields"].Content))) {
                _context21.next = 19;
                break;
              }

              return _context21.abrupt("continue", 23);

            case 19:
              _context21.next = 21;
              return regeneratorRuntime.awrap(this.protocolService.payloadByDecryptingPayload({
                payload: payload
              }));

            case 21:
              decrypted = _context21.sent;
              decryptedPayloads.push(decrypted);

            case 23:
              _iteratorNormalCompletion3 = true;
              _context21.next = 15;
              break;

            case 26:
              _context21.next = 32;
              break;

            case 28:
              _context21.prev = 28;
              _context21.t0 = _context21["catch"](13);
              _didIteratorError3 = true;
              _iteratorError3 = _context21.t0;

            case 32:
              _context21.prev = 32;
              _context21.prev = 33;

              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
                _iterator3.return();
              }

            case 35:
              _context21.prev = 35;

              if (!_didIteratorError3) {
                _context21.next = 38;
                break;
              }

              throw _iteratorError3;

            case 38:
              return _context21.finish(35);

            case 39:
              return _context21.finish(32);

            case 40:
              masterCollection = this.modelManager.getMasterCollection();
              resolver = new _Services_sync_account_response_resolver__WEBPACK_IMPORTED_MODULE_6__["AccountSyncResponseResolver"]({
                response: response,
                decryptedResponsePayloads: decryptedPayloads,
                payloadsSavedOrSaving: operation.payloadsSavedOrSaving,
                baseCollection: masterCollection
              });
              _context21.next = 44;
              return regeneratorRuntime.awrap(resolver.collectionsByProcessingResponse());

            case 44:
              collections = _context21.sent;
              _iteratorNormalCompletion4 = true;
              _didIteratorError4 = false;
              _iteratorError4 = undefined;
              _context21.prev = 48;
              _iterator4 = collections[Symbol.iterator]();

            case 50:
              if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {
                _context21.next = 62;
                break;
              }

              collection = _step4.value;
              _context21.next = 54;
              return regeneratorRuntime.awrap(this.modelManager.mapCollectionToLocalItems({
                collection: collection
              }));

            case 54:
              payloadsToPersist = void 0;
              payloadClass = Object(_Payloads_generator__WEBPACK_IMPORTED_MODULE_14__["payloadClassForSource"])(collection.source);

              if (!payloadClass.fields().includes(_Payloads_fields__WEBPACK_IMPORTED_MODULE_10__["PayloadFields"].Content)) {
                /** Before persisting, merge with current base value that has content field */
                payloadsToPersist = collection.allPayloads.map(function (payload) {
                  var base = masterCollection.findPayload(payload.uuid);
                  return base.mergedWith(payload);
                });
              } else {
                payloadsToPersist = collection.allPayloads;
              }

              _context21.next = 59;
              return regeneratorRuntime.awrap(this.persistPayloads({
                decryptedPayloads: payloadsToPersist
              }));

            case 59:
              _iteratorNormalCompletion4 = true;
              _context21.next = 50;
              break;

            case 62:
              _context21.next = 68;
              break;

            case 64:
              _context21.prev = 64;
              _context21.t1 = _context21["catch"](48);
              _didIteratorError4 = true;
              _iteratorError4 = _context21.t1;

            case 68:
              _context21.prev = 68;
              _context21.prev = 69;

              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {
                _iterator4.return();
              }

            case 71:
              _context21.prev = 71;

              if (!_didIteratorError4) {
                _context21.next = 74;
                break;
              }

              throw _iteratorError4;

            case 74:
              return _context21.finish(71);

            case 75:
              return _context21.finish(68);

            case 76:
              _context21.next = 78;
              return regeneratorRuntime.awrap(this.notifyEvent(_Lib__WEBPACK_IMPORTED_MODULE_19__["SyncEvents"].SingleSyncCompleted, response));

            case 78:
              if (!response.checkIntegrity) {
                _context21.next = 84;
                break;
              }

              _context21.next = 81;
              return regeneratorRuntime.awrap(this.computeDataIntegrityHash());

            case 81:
              clientHash = _context21.sent;
              _context21.next = 84;
              return regeneratorRuntime.awrap(this.state.setIntegrityHashes({
                clientHash: clientHash,
                serverHash: response.integrityHash
              }));

            case 84:
            case "end":
              return _context21.stop();
          }
        }
      }, null, this, [[13, 28, 32, 40], [33,, 35, 39], [48, 64, 68, 76], [69,, 71, 75]]);
    }
    /**
     * @private
     * Items that have never been synced and marked as deleted should be cleared
     * as dirty, mapped, then removed from storage.
     */

  }, {
    key: "handleNeverSyncedDeleted",
    value: function handleNeverSyncedDeleted(items) {
      var payloads;
      return regeneratorRuntime.async(function handleNeverSyncedDeleted$(_context22) {
        while (1) {
          switch (_context22.prev = _context22.next) {
            case 0:
              payloads = items.map(function (item) {
                return item.payloadRepresentation({
                  override: {
                    dirty: false
                  }
                });
              });
              _context22.next = 3;
              return regeneratorRuntime.awrap(this.modelManager.mapPayloadsToLocalItems({
                payloads: payloads
              }));

            case 3:
              _context22.next = 5;
              return regeneratorRuntime.awrap(this.persistPayloads({
                decryptedPayloads: payloads
              }));

            case 5:
            case "end":
              return _context22.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "persistPayloads",
    value: function persistPayloads(_ref9) {
      var _ref9$decryptedPayloa, decryptedPayloads;

      return regeneratorRuntime.async(function persistPayloads$(_context23) {
        while (1) {
          switch (_context23.prev = _context23.next) {
            case 0:
              _ref9$decryptedPayloa = _ref9.decryptedPayloads, decryptedPayloads = _ref9$decryptedPayloa === void 0 ? [] : _ref9$decryptedPayloa;

              if (!(decryptedPayloads.length === 0)) {
                _context23.next = 3;
                break;
              }

              return _context23.abrupt("return");

            case 3:
              _context23.next = 5;
              return regeneratorRuntime.awrap(this.storageService.savePayloads(decryptedPayloads));

            case 5:
            case "end":
              return _context23.stop();
          }
        }
      }, null, this);
    }
    /**
     * Computes a hash of all items updated_at strings joined with a comma.
     * The server will also do the same, to determine whether the client values match server values.
     * @returns A SHA256 digest string (hex).
     */

  }, {
    key: "computeDataIntegrityHash",
    value: function computeDataIntegrityHash() {
      var items, dates, string;
      return regeneratorRuntime.async(function computeDataIntegrityHash$(_context24) {
        while (1) {
          switch (_context24.prev = _context24.next) {
            case 0:
              _context24.prev = 0;
              items = this.modelManager.nonDeletedItems.sort(function (a, b) {
                return b.updated_at - a.updated_at;
              });
              dates = items.map(function (item) {
                return item.updatedAtTimestamp();
              });
              string = dates.join(',');
              return _context24.abrupt("return", this.protocolService.crypto.sha256(string));

            case 7:
              _context24.prev = 7;
              _context24.t0 = _context24["catch"](0);
              console.error("Error computing data integrity hash", _context24.t0);
              return _context24.abrupt("return", null);

            case 11:
            case "end":
              return _context24.stop();
          }
        }
      }, null, this, [[0, 7]]);
    }
  }, {
    key: "deinit",
    value: function deinit() {
      return regeneratorRuntime.async(function deinit$(_context25) {
        while (1) {
          switch (_context25.prev = _context25.next) {
            case 0:
              _get(_getPrototypeOf(SNSyncManager.prototype), "deinit", this).call(this);

              this.state.reset();
              this.opStatus.reset();
              this.resolveQueue = [];
              this.spawnQueue = [];
              _context25.next = 7;
              return regeneratorRuntime.awrap(this.clearSyncPositionTokens());

            case 7:
            case "end":
              return _context25.stop();
          }
        }
      }, null, this);
    }
    /** Downloads all items and maps to lcoal items to attempt resolve out-of-sync state */

  }, {
    key: "resolveOutOfSync",
    value: function resolveOutOfSync() {
      var downloader, payloads, delta, collection;
      return regeneratorRuntime.async(function resolveOutOfSync$(_context26) {
        while (1) {
          switch (_context26.prev = _context26.next) {
            case 0:
              downloader = new _Services_sync_account_downloader__WEBPACK_IMPORTED_MODULE_5__["AccountDownloader"]({
                apiService: this.apiService,
                protocolService: this.protocolService,
                customEvent: 'resolve-out-of-sync'
              });
              _context26.next = 3;
              return regeneratorRuntime.awrap(downloader.run());

            case 3:
              payloads = _context26.sent;
              delta = new _Payloads_deltas__WEBPACK_IMPORTED_MODULE_9__["DeltaOutOfSync"]({
                baseCollection: this.modelManager.getMasterCollection(),
                applyCollection: new _Payloads_collection__WEBPACK_IMPORTED_MODULE_12__["PayloadCollection"]({
                  payloads: payloads,
                  source: _Payloads_sources__WEBPACK_IMPORTED_MODULE_11__["PayloadSources"].RemoteRetrieved
                })
              });
              _context26.next = 7;
              return regeneratorRuntime.awrap(delta.resultingCollection());

            case 7:
              collection = _context26.sent;
              _context26.next = 10;
              return regeneratorRuntime.awrap(this.modelManager.mapCollectionToLocalItems({
                collection: collection
              }));

            case 10:
              _context26.next = 12;
              return regeneratorRuntime.awrap(this.persistPayloads({
                decryptedPayloads: collection.payloads
              }));

            case 12:
              return _context26.abrupt("return", this.sync({
                checkIntegrity: true,
                source: SyncSources.ResolveOutOfSync
              }));

            case 13:
            case "end":
              return _context26.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "statelessDownloadAllItems",
    value: function statelessDownloadAllItems() {
      var _ref10,
          contentType,
          customEvent,
          downloader,
          payloads,
          _args27 = arguments;

      return regeneratorRuntime.async(function statelessDownloadAllItems$(_context27) {
        while (1) {
          switch (_context27.prev = _context27.next) {
            case 0:
              _ref10 = _args27.length > 0 && _args27[0] !== undefined ? _args27[0] : {}, contentType = _ref10.contentType, customEvent = _ref10.customEvent;
              downloader = new _Services_sync_account_downloader__WEBPACK_IMPORTED_MODULE_5__["AccountDownloader"]({
                apiService: this.apiService,
                protocolService: this.protocolService,
                contentType: contentType,
                customEvent: customEvent
              });
              _context27.next = 4;
              return regeneratorRuntime.awrap(downloader.run());

            case 4:
              payloads = _context27.sent;
              return _context27.abrupt("return", payloads.map(function (payload) {
                return Object(_Models_generator__WEBPACK_IMPORTED_MODULE_17__["CreateItemFromPayload"])(payload);
              }));

            case 6:
            case "end":
              return _context27.stop();
          }
        }
      }, null, this);
    }
    /** @unit_testing */
    // eslint-disable-next-line camelcase

  }, {
    key: "ut_setDatabaseLoaded",
    value: function ut_setDatabaseLoaded(loaded) {
      this.databaseLoaded = loaded;
    }
    /** @unit_testing */
    // eslint-disable-next-line camelcase

  }, {
    key: "ut_beginLatencySimulator",
    value: function ut_beginLatencySimulator(latency) {
      this._simulate_latency = {
        latency: latency || 1000,
        enabled: true
      };
    }
    /** @unit_testing */
    // eslint-disable-next-line camelcase

  }, {
    key: "ut_endLatencySimulator",
    value: function ut_endLatencySimulator() {
      this._simulate_latency = null;
    }
  }]);

  return SNSyncManager;
}(_Services_pure_service__WEBPACK_IMPORTED_MODULE_1__["PureService"]);

/***/ }),

/***/ "./lib/services/sync/sync_state.js":
/*!*****************************************!*\
  !*** ./lib/services/sync/sync_state.js ***!
  \*****************************************/
/*! exports provided: SyncState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SyncState", function() { return SyncState; });
/* harmony import */ var _Lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib */ "./lib/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


var SyncState =
/*#__PURE__*/
function () {
  function SyncState(_ref) {
    var receiver = _ref.receiver,
        maxDiscordance = _ref.maxDiscordance;

    _classCallCheck(this, SyncState);

    this.discordance = 0;
    this.receiver = receiver;
    this.maxDiscordance = maxDiscordance;
    this.reset();
  }

  _createClass(SyncState, [{
    key: "setLastPresaveSyncDate",
    value: function setLastPresaveSyncDate(date) {
      this._lastPreSyncSave = date;
    }
  }, {
    key: "setLastSyncDate",
    value: function setLastSyncDate(date) {
      this._lastSyncDate = date;
    }
  }, {
    key: "isOutOfSync",
    value: function isOutOfSync() {
      return this.outOfSync;
    }
  }, {
    key: "reset",
    value: function reset() {
      this._lastSyncDate = null;
      this._lastPreSyncSave = null;
      this.discordance = 0;
      this.outOfSync = false;
    }
  }, {
    key: "getLastClientIntegrityHash",
    value: function getLastClientIntegrityHash() {
      return this.lastClientHash;
    }
  }, {
    key: "clearIntegrityHashes",
    value: function clearIntegrityHashes() {
      this.lastClientHash = null;
      this.lastServerHash = null;
    }
  }, {
    key: "setIntegrityHashes",
    value: function setIntegrityHashes(_ref2) {
      var clientHash, serverHash, isInSync;
      return regeneratorRuntime.async(function setIntegrityHashes$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              clientHash = _ref2.clientHash, serverHash = _ref2.serverHash;
              this.lastClientHash = clientHash;
              this.lastServerHash = serverHash;
              isInSync = !serverHash || serverHash.length === 0 || !clientHash || clientHash === serverHash;

              if (isInSync) {
                if (this.outOfSync) {
                  this.outOfSync = false;
                  this.receiver(_Lib__WEBPACK_IMPORTED_MODULE_0__["SyncEvents"].ExitOutOfSync);
                }

                this.discordance = 0;
              } else {
                this.discordance++;

                if (this.discordance >= this.maxDiscordance && !this.outOfSync) {
                  this.outOfSync = true;
                  this.receiver(_Lib__WEBPACK_IMPORTED_MODULE_0__["SyncEvents"].EnterOutOfSync);
                }
              }

            case 5:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "lastPreSyncSaveDate",
    get: function get() {
      return this._lastPreSyncSave;
    }
  }, {
    key: "lastSyncDate",
    get: function get() {
      return this._lastSyncDate;
    }
  }, {
    key: "needsSync",
    get: function get() {
      return this.discordance > 0 && this.discordance < this.maxDiscordance;
    }
  }]);

  return SyncState;
}();

/***/ }),

/***/ "./lib/services/sync/utils.js":
/*!************************************!*\
  !*** ./lib/services/sync/utils.js ***!
  \************************************/
/*! exports provided: SortPayloadsByRecentAndContentPriority */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SortPayloadsByRecentAndContentPriority", function() { return SortPayloadsByRecentAndContentPriority; });
/**
  * Sorts payloads according by most recently modified first, according to the priority,
  * whereby the earlier a content_type appears in the priorityList,
  * the earlier it will appear in the resulting sorted array.
  */
function SortPayloadsByRecentAndContentPriority(payloads, priorityList) {
  return payloads.sort(function (a, b) {
    var dateResult = new Date(b.updated_at) - new Date(a.updated_at);
    var aPriority = 0;
    var bPriority = 0;

    if (priorityList) {
      aPriority = priorityList.indexOf(a.content_type);
      bPriority = priorityList.indexOf(b.content_type);

      if (aPriority === -1) {
        /** Not found in list, not prioritized. Set it to max value */
        aPriority = priorityList.length;
      }

      if (bPriority === -1) {
        /** Not found in list, not prioritized. Set it to max value */
        bPriority = priorityList.length;
      }
    }

    if (aPriority === bPriority) {
      return dateResult;
    }

    if (aPriority < bPriority) {
      return -1;
    } else {
      return 1;
    }
  });
}

/***/ }),

/***/ "./lib/stages.js":
/*!***********************!*\
  !*** ./lib/stages.js ***!
  \***********************/
/*! exports provided: ApplicationStages */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationStages", function() { return ApplicationStages; });
var ApplicationStages = {
  PreparingForLaunch_0: 0.0,
  ReadyForLaunch_05: 0.5,
  StorageDecrypted_09: 0.9,
  Launched_10: 1.0,
  LoadingDatabase_11: 1.1,
  LoadedDatabase_12: 1.2,
  FullSyncCompleted_13: 1.3,
  SignedIn_30: 3.0
};

/***/ }),

/***/ "./lib/storage_keys.js":
/*!*****************************!*\
  !*** ./lib/storage_keys.js ***!
  \*****************************/
/*! exports provided: StorageKeys, RAW_STORAGE_KEY_LAST_MIGRATION_TIMESTAMP, namespacedKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StorageKeys", function() { return StorageKeys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RAW_STORAGE_KEY_LAST_MIGRATION_TIMESTAMP", function() { return RAW_STORAGE_KEY_LAST_MIGRATION_TIMESTAMP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "namespacedKey", function() { return namespacedKey; });
var StorageKeys = {
  RootKeyParams: 'ROOT_KEY_PARAMS',
  WrappedRootKey: 'WRAPPED_ROOT_KEY',
  RootKeyWrapperKeyParams: 'ROOT_KEY_WRAPPER_KEY_PARAMS',
  Jwt: 'jwt',
  User: 'user',
  ServerHost: 'server',
  LegacyUuid: 'uuid',
  LastSyncToken: 'syncToken',
  PaginationToken: 'cursorToken',
  StorageObject: 'storage',
  BiometricPrefs: 'biometrics_prefs',
  MobilePasscodeTiming: 'passcode_timing',
  PrivilegesExpirey: 'SessionExpiresAtKey',
  PrivilegesSessionLength: 'SessionLengthKey',
  SessionHistoryPersistable: 'sessionHistory_persist',
  SessionHistoryRevisions: 'sessionHistory_revisions',
  SessionHistoryOptimize: 'sessionHistory_autoOptimize'
};
/** Raw storage keys exist outside of StorageManager domain */

var RAW_STORAGE_KEY_LAST_MIGRATION_TIMESTAMP = 'last_migration_timestamp';
function namespacedKey(namespace, key) {
  if (namespace) {
    return "".concat(namespace, "-").concat(key);
  } else {
    return key;
  }
}

/***/ }),

/***/ "./lib/utils.js":
/*!**********************!*\
  !*** ./lib/utils.js ***!
  \**********************/
/*! exports provided: getGlobalScope, isWebEnvironment, findInArray, isNullOrUndefined, isString, greaterOfTwoDates, uniqCombineObjArrays, lastElement, extendArray, subtractFromArray, removeFromArray, arrayByDifference, removeFromIndex, arrayByRemovingFromIndex, omitInPlace, omitByCopy, isObject, isFunction, joinPaths, deepMerge, Copy, deepMergeByCopy, pickByCopy, deepFreeze, hasGetter, sleep */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGlobalScope", function() { return getGlobalScope; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isWebEnvironment", function() { return isWebEnvironment; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findInArray", function() { return findInArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNullOrUndefined", function() { return isNullOrUndefined; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return isString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "greaterOfTwoDates", function() { return greaterOfTwoDates; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "uniqCombineObjArrays", function() { return uniqCombineObjArrays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lastElement", function() { return lastElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extendArray", function() { return extendArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtractFromArray", function() { return subtractFromArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeFromArray", function() { return removeFromArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arrayByDifference", function() { return arrayByDifference; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeFromIndex", function() { return removeFromIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arrayByRemovingFromIndex", function() { return arrayByRemovingFromIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "omitInPlace", function() { return omitInPlace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "omitByCopy", function() { return omitByCopy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return isObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return isFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "joinPaths", function() { return joinPaths; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deepMerge", function() { return deepMerge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Copy", function() { return Copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deepMergeByCopy", function() { return deepMergeByCopy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pickByCopy", function() { return pickByCopy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deepFreeze", function() { return deepFreeze; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasGetter", function() { return hasGetter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sleep", function() { return sleep; });
/* harmony import */ var lodash_isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/isArray */ "./node_modules/lodash/isArray.js");
/* harmony import */ var lodash_isArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_mergeWith__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/mergeWith */ "./node_modules/lodash/mergeWith.js");
/* harmony import */ var lodash_mergeWith__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_mergeWith__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_uniqWith__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/uniqWith */ "./node_modules/lodash/uniqWith.js");
/* harmony import */ var lodash_uniqWith__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_uniqWith__WEBPACK_IMPORTED_MODULE_2__);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }




function getGlobalScope() {
  return typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : null;
}
function isWebEnvironment() {
  return getGlobalScope() !== null;
}
function findInArray(array, key, value) {
  return array.find(function (item) {
    return item[key] === value;
  });
}
function isNullOrUndefined(value) {
  return value === null || value === undefined;
}
function isString(value) {
  return typeof value === 'string' || value instanceof String;
}
function greaterOfTwoDates(dateA, dateB) {
  if (dateA > dateB) {
    return dateA;
  } else {
    return dateB;
  }
}
function uniqCombineObjArrays(arrayA, arrayB, equalityKeys) {
  return lodash_uniqWith__WEBPACK_IMPORTED_MODULE_2___default()(arrayA.concat(arrayB), function (a, b) {
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = equalityKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var key = _step.value;

        if (a[key] !== b[key]) {
          return false;
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    return true;
  });
}
/** Returns the last element in the array. */

function lastElement(array) {
  return array[array.length - 1];
}
/** Adds all items from otherArray into inArray, in-place. */

function extendArray(inArray, otherArray) {
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = otherArray[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var value = _step2.value;
      inArray.push(value);
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }
}
/** Removes all items appearing in toSubtract from inArray, in-place */

function subtractFromArray(inArray, toSubtract) {
  var _iteratorNormalCompletion3 = true;
  var _didIteratorError3 = false;
  var _iteratorError3 = undefined;

  try {
    for (var _iterator3 = toSubtract[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
      var value = _step3.value;
      inArray.splice(inArray.indexOf(value), 1);
    }
  } catch (err) {
    _didIteratorError3 = true;
    _iteratorError3 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
        _iterator3.return();
      }
    } finally {
      if (_didIteratorError3) {
        throw _iteratorError3;
      }
    }
  }
}
/** Removes an object from the array by value */

function removeFromArray(array, value) {
  array.splice(array.indexOf(value), 1);
}
/** Returns a new array by removing all elements in subtract from array */

function arrayByDifference(array, subtract) {
  return array.filter(function (x) {
    return !subtract.includes(x);
  }).concat(subtract.filter(function (x) {
    return !array.includes(x);
  }));
}
/** Removes the value from the array at the given index, in-place. */

function removeFromIndex(array, index) {
  array.splice(index, 1);
}
/** Removes the value from the array at the given index, in-place. */

function arrayByRemovingFromIndex(array, index) {
  var copy = array.slice();
  removeFromIndex(copy, index);
  return copy;
}
function omitInPlace(object, keys) {
  if (!object) {
    return object;
  }

  var _iteratorNormalCompletion4 = true;
  var _didIteratorError4 = false;
  var _iteratorError4 = undefined;

  try {
    for (var _iterator4 = keys[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
      var key = _step4.value;
      delete object[key];
    }
  } catch (err) {
    _didIteratorError4 = true;
    _iteratorError4 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {
        _iterator4.return();
      }
    } finally {
      if (_didIteratorError4) {
        throw _iteratorError4;
      }
    }
  }

  return object;
}
/** Creates a new object by omitting `fields` from `object` */

function omitByCopy(object, fields) {
  var newObject = Object.assign({}, object);
  /**
   * Lodash's omit, which was previously used, seems to cause unexpected behavior
   * when payload is an ES6 item class. So we instead manually omit each key.
   */

  var _iteratorNormalCompletion5 = true;
  var _didIteratorError5 = false;
  var _iteratorError5 = undefined;

  try {
    for (var _iterator5 = fields[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
      var key = _step5.value;
      delete newObject[key];
    }
  } catch (err) {
    _didIteratorError5 = true;
    _iteratorError5 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {
        _iterator5.return();
      }
    } finally {
      if (_didIteratorError5) {
        throw _iteratorError5;
      }
    }
  }

  return newObject;
}
function isObject(value) {
  if (value === null) {
    return false;
  }

  return typeof value === 'function' || _typeof(value) === 'object';
}
function isFunction(value) {
  if (value === null) {
    return false;
  }

  return typeof value === 'function';
}
function joinPaths() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return args.map(function (part, i) {
    if (i === 0) {
      return part.trim().replace(/[\/]*$/g, '');
    } else {
      return part.trim().replace(/(^[\/]*|[\/]*$)/g, '');
    }
  }).filter(function (x) {
    return x.length;
  }).join('/');
}
/**
 * lodash.merge will not merge a full array with an empty one.
 * deepMerge will replace arrays wholesale
 */

function deepMerge(a, b) {
  if (!a || !b) {
    throw 'Attempting to deepMerge with null values';
  }

  function mergeCopyArrays(objValue, srcValue) {
    if (lodash_isArray__WEBPACK_IMPORTED_MODULE_0___default()(objValue)) {
      return srcValue;
    }
  }

  lodash_mergeWith__WEBPACK_IMPORTED_MODULE_1___default()(a, b, mergeCopyArrays);
  return a;
}
function Copy(object) {
  return JSON.parse(JSON.stringify(object));
}
function deepMergeByCopy(a, b) {
  if (!a || !b) {
    throw 'Attempting to deepMergeByCopy with null values';
  }

  function mergeCopyArrays(objValue, srcValue) {
    if (lodash_isArray__WEBPACK_IMPORTED_MODULE_0___default()(objValue)) {
      return srcValue;
    }
  }

  b = Copy(b);
  lodash_mergeWith__WEBPACK_IMPORTED_MODULE_1___default()(a, b, mergeCopyArrays);
  return a;
}
/** Picks fields from an object by copying rather than by value (which is how Lodash's pick works.) */

function pickByCopy(object, keys) {
  var result = {};
  var _iteratorNormalCompletion6 = true;
  var _didIteratorError6 = false;
  var _iteratorError6 = undefined;

  try {
    for (var _iterator6 = keys[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
      var key = _step6.value;
      result[key] = object[key];
    }
  } catch (err) {
    _didIteratorError6 = true;
    _iteratorError6 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion6 && _iterator6.return != null) {
        _iterator6.return();
      }
    } finally {
      if (_didIteratorError6) {
        throw _iteratorError6;
      }
    }
  }

  return Copy(result);
}
function deepFreeze(object) {
  // Retrieve the property names defined on object
  var propNames = Object.getOwnPropertyNames(object); // Freeze properties before freezing self

  var _iteratorNormalCompletion7 = true;
  var _didIteratorError7 = false;
  var _iteratorError7 = undefined;

  try {
    for (var _iterator7 = propNames[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {
      var name = _step7.value;
      var value = object[name];
      object[name] = value && _typeof(value) === "object" ? deepFreeze(value) : value;
    }
  } catch (err) {
    _didIteratorError7 = true;
    _iteratorError7 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion7 && _iterator7.return != null) {
        _iterator7.return();
      }
    } finally {
      if (_didIteratorError7) {
        throw _iteratorError7;
      }
    }
  }

  return Object.freeze(object);
}
function hasGetter(object, property) {
  var descriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(object), property);
  return descriptor && !isNullOrUndefined(descriptor.get);
}
function sleep(milliseconds) {
  return regeneratorRuntime.async(function sleep$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          console.warn("Sleeping for", milliseconds);
          return _context.abrupt("return", new Promise(function (resolve, reject) {
            setTimeout(function () {
              resolve();
            }, milliseconds);
          }));

        case 2:
        case "end":
          return _context.stop();
      }
    }
  });
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./lib/uuid.js":
/*!*********************!*\
  !*** ./lib/uuid.js ***!
  \*********************/
/*! exports provided: Uuid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Uuid", function() { return Uuid; });
/* harmony import */ var _Lib_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @Lib/utils */ "./lib/utils.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


var Uuid =
/*#__PURE__*/
function () {
  function Uuid() {
    _classCallCheck(this, Uuid);
  }

  _createClass(Uuid, null, [{
    key: "SetGenerators",

    /**
     * Dynamically feed both a syncronous and asyncronous implementation of a UUID generator function.
     * Feeding it this way allows platforms to implement their own uuid generation schemes, without
     * this class having to import any global functions.
     * @param syncImpl  A syncronous function that returns a UUID.
     * @param asyncImpl  An asyncronous function that returns a UUID.
     */
    value: function SetGenerators(_ref) {
      var syncImpl = _ref.syncImpl,
          asyncImpl = _ref.asyncImpl;
      this.syncUuidFunc = syncImpl;
      this.asyncUuidFunc = asyncImpl;
    }
  }, {
    key: "canGenSync",
    value: function canGenSync() {
      return !Object(_Lib_utils__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.syncUuidFunc);
    }
    /**
     * A default async implementation of uuid generation.
     */

  }, {
    key: "GenerateUuid",
    value: function GenerateUuid() {
      return regeneratorRuntime.async(function GenerateUuid$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!this.syncUuidFunc) {
                _context.next = 4;
                break;
              }

              return _context.abrupt("return", this.syncUuidFunc());

            case 4:
              return _context.abrupt("return", this.asyncUuidFunc());

            case 5:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
    /**
     * A default sync implementation of uuid generation.
     */

  }, {
    key: "GenerateUuidSynchronously",
    value: function GenerateUuidSynchronously() {
      return this.syncUuidFunc();
    }
  }]);

  return Uuid;
}();

/***/ }),

/***/ "./node_modules/lodash/_DataView.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_DataView.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");
/* Built-in method references that are verified to be native. */


var DataView = getNative(root, 'DataView');
module.exports = DataView;

/***/ }),

/***/ "./node_modules/lodash/_Hash.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_Hash.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var hashClear = __webpack_require__(/*! ./_hashClear */ "./node_modules/lodash/_hashClear.js"),
    hashDelete = __webpack_require__(/*! ./_hashDelete */ "./node_modules/lodash/_hashDelete.js"),
    hashGet = __webpack_require__(/*! ./_hashGet */ "./node_modules/lodash/_hashGet.js"),
    hashHas = __webpack_require__(/*! ./_hashHas */ "./node_modules/lodash/_hashHas.js"),
    hashSet = __webpack_require__(/*! ./_hashSet */ "./node_modules/lodash/_hashSet.js");
/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */


function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;
  this.clear();

  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
} // Add methods to `Hash`.


Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;
module.exports = Hash;

/***/ }),

/***/ "./node_modules/lodash/_ListCache.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_ListCache.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var listCacheClear = __webpack_require__(/*! ./_listCacheClear */ "./node_modules/lodash/_listCacheClear.js"),
    listCacheDelete = __webpack_require__(/*! ./_listCacheDelete */ "./node_modules/lodash/_listCacheDelete.js"),
    listCacheGet = __webpack_require__(/*! ./_listCacheGet */ "./node_modules/lodash/_listCacheGet.js"),
    listCacheHas = __webpack_require__(/*! ./_listCacheHas */ "./node_modules/lodash/_listCacheHas.js"),
    listCacheSet = __webpack_require__(/*! ./_listCacheSet */ "./node_modules/lodash/_listCacheSet.js");
/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */


function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;
  this.clear();

  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
} // Add methods to `ListCache`.


ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;
module.exports = ListCache;

/***/ }),

/***/ "./node_modules/lodash/_Map.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/_Map.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");
/* Built-in method references that are verified to be native. */


var Map = getNative(root, 'Map');
module.exports = Map;

/***/ }),

/***/ "./node_modules/lodash/_MapCache.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_MapCache.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var mapCacheClear = __webpack_require__(/*! ./_mapCacheClear */ "./node_modules/lodash/_mapCacheClear.js"),
    mapCacheDelete = __webpack_require__(/*! ./_mapCacheDelete */ "./node_modules/lodash/_mapCacheDelete.js"),
    mapCacheGet = __webpack_require__(/*! ./_mapCacheGet */ "./node_modules/lodash/_mapCacheGet.js"),
    mapCacheHas = __webpack_require__(/*! ./_mapCacheHas */ "./node_modules/lodash/_mapCacheHas.js"),
    mapCacheSet = __webpack_require__(/*! ./_mapCacheSet */ "./node_modules/lodash/_mapCacheSet.js");
/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */


function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;
  this.clear();

  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
} // Add methods to `MapCache`.


MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;
module.exports = MapCache;

/***/ }),

/***/ "./node_modules/lodash/_Promise.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_Promise.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");
/* Built-in method references that are verified to be native. */


var Promise = getNative(root, 'Promise');
module.exports = Promise;

/***/ }),

/***/ "./node_modules/lodash/_Set.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/_Set.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");
/* Built-in method references that are verified to be native. */


var Set = getNative(root, 'Set');
module.exports = Set;

/***/ }),

/***/ "./node_modules/lodash/_SetCache.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_SetCache.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(/*! ./_MapCache */ "./node_modules/lodash/_MapCache.js"),
    setCacheAdd = __webpack_require__(/*! ./_setCacheAdd */ "./node_modules/lodash/_setCacheAdd.js"),
    setCacheHas = __webpack_require__(/*! ./_setCacheHas */ "./node_modules/lodash/_setCacheHas.js");
/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */


function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;
  this.__data__ = new MapCache();

  while (++index < length) {
    this.add(values[index]);
  }
} // Add methods to `SetCache`.


SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;
module.exports = SetCache;

/***/ }),

/***/ "./node_modules/lodash/_Stack.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_Stack.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ "./node_modules/lodash/_ListCache.js"),
    stackClear = __webpack_require__(/*! ./_stackClear */ "./node_modules/lodash/_stackClear.js"),
    stackDelete = __webpack_require__(/*! ./_stackDelete */ "./node_modules/lodash/_stackDelete.js"),
    stackGet = __webpack_require__(/*! ./_stackGet */ "./node_modules/lodash/_stackGet.js"),
    stackHas = __webpack_require__(/*! ./_stackHas */ "./node_modules/lodash/_stackHas.js"),
    stackSet = __webpack_require__(/*! ./_stackSet */ "./node_modules/lodash/_stackSet.js");
/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */


function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
} // Add methods to `Stack`.


Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;
module.exports = Stack;

/***/ }),

/***/ "./node_modules/lodash/_Symbol.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_Symbol.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");
/** Built-in value references. */


var _Symbol = root.Symbol;
module.exports = _Symbol;

/***/ }),

/***/ "./node_modules/lodash/_Uint8Array.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_Uint8Array.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");
/** Built-in value references. */


var Uint8Array = root.Uint8Array;
module.exports = Uint8Array;

/***/ }),

/***/ "./node_modules/lodash/_WeakMap.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_WeakMap.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");
/* Built-in method references that are verified to be native. */


var WeakMap = getNative(root, 'WeakMap');
module.exports = WeakMap;

/***/ }),

/***/ "./node_modules/lodash/_apply.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_apply.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);

    case 1:
      return func.call(thisArg, args[0]);

    case 2:
      return func.call(thisArg, args[0], args[1]);

    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }

  return func.apply(thisArg, args);
}

module.exports = apply;

/***/ }),

/***/ "./node_modules/lodash/_arrayEach.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arrayEach.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }

  return array;
}

module.exports = arrayEach;

/***/ }),

/***/ "./node_modules/lodash/_arrayFilter.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_arrayFilter.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];

    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }

  return result;
}

module.exports = arrayFilter;

/***/ }),

/***/ "./node_modules/lodash/_arrayIncludes.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_arrayIncludes.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIndexOf = __webpack_require__(/*! ./_baseIndexOf */ "./node_modules/lodash/_baseIndexOf.js");
/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */


function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf(array, value, 0) > -1;
}

module.exports = arrayIncludes;

/***/ }),

/***/ "./node_modules/lodash/_arrayIncludesWith.js":
/*!***************************************************!*\
  !*** ./node_modules/lodash/_arrayIncludesWith.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }

  return false;
}

module.exports = arrayIncludesWith;

/***/ }),

/***/ "./node_modules/lodash/_arrayLikeKeys.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_arrayLikeKeys.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__(/*! ./_baseTimes */ "./node_modules/lodash/_baseTimes.js"),
    isArguments = __webpack_require__(/*! ./isArguments */ "./node_modules/lodash/isArguments.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isBuffer = __webpack_require__(/*! ./isBuffer */ "./node_modules/lodash/isBuffer.js"),
    isIndex = __webpack_require__(/*! ./_isIndex */ "./node_modules/lodash/_isIndex.js"),
    isTypedArray = __webpack_require__(/*! ./isTypedArray */ "./node_modules/lodash/isTypedArray.js");
/** Used for built-in method references. */


var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */

function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.
    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.
    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.
    isIndex(key, length)))) {
      result.push(key);
    }
  }

  return result;
}

module.exports = arrayLikeKeys;

/***/ }),

/***/ "./node_modules/lodash/_arrayMap.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_arrayMap.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }

  return result;
}

module.exports = arrayMap;

/***/ }),

/***/ "./node_modules/lodash/_arrayPush.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arrayPush.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }

  return array;
}

module.exports = arrayPush;

/***/ }),

/***/ "./node_modules/lodash/_arraySome.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arraySome.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }

  return false;
}

module.exports = arraySome;

/***/ }),

/***/ "./node_modules/lodash/_assignMergeValue.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_assignMergeValue.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(/*! ./_baseAssignValue */ "./node_modules/lodash/_baseAssignValue.js"),
    eq = __webpack_require__(/*! ./eq */ "./node_modules/lodash/eq.js");
/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */


function assignMergeValue(object, key, value) {
  if (value !== undefined && !eq(object[key], value) || value === undefined && !(key in object)) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignMergeValue;

/***/ }),

/***/ "./node_modules/lodash/_assignValue.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_assignValue.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(/*! ./_baseAssignValue */ "./node_modules/lodash/_baseAssignValue.js"),
    eq = __webpack_require__(/*! ./eq */ "./node_modules/lodash/eq.js");
/** Used for built-in method references. */


var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */

function assignValue(object, key, value) {
  var objValue = object[key];

  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;

/***/ }),

/***/ "./node_modules/lodash/_assocIndexOf.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_assocIndexOf.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(/*! ./eq */ "./node_modules/lodash/eq.js");
/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */


function assocIndexOf(array, key) {
  var length = array.length;

  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }

  return -1;
}

module.exports = assocIndexOf;

/***/ }),

/***/ "./node_modules/lodash/_baseAssign.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseAssign.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ "./node_modules/lodash/_copyObject.js"),
    keys = __webpack_require__(/*! ./keys */ "./node_modules/lodash/keys.js");
/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */


function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

module.exports = baseAssign;

/***/ }),

/***/ "./node_modules/lodash/_baseAssignIn.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseAssignIn.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ "./node_modules/lodash/_copyObject.js"),
    keysIn = __webpack_require__(/*! ./keysIn */ "./node_modules/lodash/keysIn.js");
/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */


function baseAssignIn(object, source) {
  return object && copyObject(source, keysIn(source), object);
}

module.exports = baseAssignIn;

/***/ }),

/***/ "./node_modules/lodash/_baseAssignValue.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseAssignValue.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(/*! ./_defineProperty */ "./node_modules/lodash/_defineProperty.js");
/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */


function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;

/***/ }),

/***/ "./node_modules/lodash/_baseClone.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseClone.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ "./node_modules/lodash/_Stack.js"),
    arrayEach = __webpack_require__(/*! ./_arrayEach */ "./node_modules/lodash/_arrayEach.js"),
    assignValue = __webpack_require__(/*! ./_assignValue */ "./node_modules/lodash/_assignValue.js"),
    baseAssign = __webpack_require__(/*! ./_baseAssign */ "./node_modules/lodash/_baseAssign.js"),
    baseAssignIn = __webpack_require__(/*! ./_baseAssignIn */ "./node_modules/lodash/_baseAssignIn.js"),
    cloneBuffer = __webpack_require__(/*! ./_cloneBuffer */ "./node_modules/lodash/_cloneBuffer.js"),
    copyArray = __webpack_require__(/*! ./_copyArray */ "./node_modules/lodash/_copyArray.js"),
    copySymbols = __webpack_require__(/*! ./_copySymbols */ "./node_modules/lodash/_copySymbols.js"),
    copySymbolsIn = __webpack_require__(/*! ./_copySymbolsIn */ "./node_modules/lodash/_copySymbolsIn.js"),
    getAllKeys = __webpack_require__(/*! ./_getAllKeys */ "./node_modules/lodash/_getAllKeys.js"),
    getAllKeysIn = __webpack_require__(/*! ./_getAllKeysIn */ "./node_modules/lodash/_getAllKeysIn.js"),
    getTag = __webpack_require__(/*! ./_getTag */ "./node_modules/lodash/_getTag.js"),
    initCloneArray = __webpack_require__(/*! ./_initCloneArray */ "./node_modules/lodash/_initCloneArray.js"),
    initCloneByTag = __webpack_require__(/*! ./_initCloneByTag */ "./node_modules/lodash/_initCloneByTag.js"),
    initCloneObject = __webpack_require__(/*! ./_initCloneObject */ "./node_modules/lodash/_initCloneObject.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isBuffer = __webpack_require__(/*! ./isBuffer */ "./node_modules/lodash/isBuffer.js"),
    isMap = __webpack_require__(/*! ./isMap */ "./node_modules/lodash/isMap.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    isSet = __webpack_require__(/*! ./isSet */ "./node_modules/lodash/isSet.js"),
    keys = __webpack_require__(/*! ./keys */ "./node_modules/lodash/keys.js");
/** Used to compose bitmasks for cloning. */


var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;
/** `Object#toString` result references. */

var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';
var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';
/** Used to identify `toStringTag` values supported by `_.clone`. */

var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */

function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }

  if (result !== undefined) {
    return result;
  }

  if (!isObject(value)) {
    return value;
  }

  var isArr = isArray(value);

  if (isArr) {
    result = initCloneArray(value);

    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }

    if (tag == objectTag || tag == argsTag || isFunc && !object) {
      result = isFlat || isFunc ? {} : initCloneObject(value);

      if (!isDeep) {
        return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }

      result = initCloneByTag(value, tag, isDeep);
    }
  } // Check for circular references and return its corresponding clone.


  stack || (stack = new Stack());
  var stacked = stack.get(value);

  if (stacked) {
    return stacked;
  }

  stack.set(value, result);

  if (isSet(value)) {
    value.forEach(function (subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });
  } else if (isMap(value)) {
    value.forEach(function (subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });
  }

  var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
  var props = isArr ? undefined : keysFunc(value);
  arrayEach(props || value, function (subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    } // Recursively populate clone (susceptible to call stack limits).


    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

module.exports = baseClone;

/***/ }),

/***/ "./node_modules/lodash/_baseCreate.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseCreate.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js");
/** Built-in value references. */


var objectCreate = Object.create;
/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */

var baseCreate = function () {
  function object() {}

  return function (proto) {
    if (!isObject(proto)) {
      return {};
    }

    if (objectCreate) {
      return objectCreate(proto);
    }

    object.prototype = proto;
    var result = new object();
    object.prototype = undefined;
    return result;
  };
}();

module.exports = baseCreate;

/***/ }),

/***/ "./node_modules/lodash/_baseEach.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseEach.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseForOwn = __webpack_require__(/*! ./_baseForOwn */ "./node_modules/lodash/_baseForOwn.js"),
    createBaseEach = __webpack_require__(/*! ./_createBaseEach */ "./node_modules/lodash/_createBaseEach.js");
/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */


var baseEach = createBaseEach(baseForOwn);
module.exports = baseEach;

/***/ }),

/***/ "./node_modules/lodash/_baseFindIndex.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_baseFindIndex.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while (fromRight ? index-- : ++index < length) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }

  return -1;
}

module.exports = baseFindIndex;

/***/ }),

/***/ "./node_modules/lodash/_baseFlatten.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseFlatten.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(/*! ./_arrayPush */ "./node_modules/lodash/_arrayPush.js"),
    isFlattenable = __webpack_require__(/*! ./_isFlattenable */ "./node_modules/lodash/_isFlattenable.js");
/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */


function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;
  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];

    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }

  return result;
}

module.exports = baseFlatten;

/***/ }),

/***/ "./node_modules/lodash/_baseFor.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_baseFor.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var createBaseFor = __webpack_require__(/*! ./_createBaseFor */ "./node_modules/lodash/_createBaseFor.js");
/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */


var baseFor = createBaseFor();
module.exports = baseFor;

/***/ }),

/***/ "./node_modules/lodash/_baseForOwn.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseForOwn.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseFor = __webpack_require__(/*! ./_baseFor */ "./node_modules/lodash/_baseFor.js"),
    keys = __webpack_require__(/*! ./keys */ "./node_modules/lodash/keys.js");
/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */


function baseForOwn(object, iteratee) {
  return object && baseFor(object, iteratee, keys);
}

module.exports = baseForOwn;

/***/ }),

/***/ "./node_modules/lodash/_baseGet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_baseGet.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(/*! ./_castPath */ "./node_modules/lodash/_castPath.js"),
    toKey = __webpack_require__(/*! ./_toKey */ "./node_modules/lodash/_toKey.js");
/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */


function baseGet(object, path) {
  path = castPath(path, object);
  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }

  return index && index == length ? object : undefined;
}

module.exports = baseGet;

/***/ }),

/***/ "./node_modules/lodash/_baseGetAllKeys.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_baseGetAllKeys.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(/*! ./_arrayPush */ "./node_modules/lodash/_arrayPush.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js");
/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */


function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;

/***/ }),

/***/ "./node_modules/lodash/_baseGetTag.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseGetTag.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js"),
    getRawTag = __webpack_require__(/*! ./_getRawTag */ "./node_modules/lodash/_getRawTag.js"),
    objectToString = __webpack_require__(/*! ./_objectToString */ "./node_modules/lodash/_objectToString.js");
/** `Object#toString` result references. */


var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';
/** Built-in value references. */

var symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;
/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */

function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }

  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
}

module.exports = baseGetTag;

/***/ }),

/***/ "./node_modules/lodash/_baseHasIn.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseHasIn.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

module.exports = baseHasIn;

/***/ }),

/***/ "./node_modules/lodash/_baseIndexOf.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseIndexOf.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseFindIndex = __webpack_require__(/*! ./_baseFindIndex */ "./node_modules/lodash/_baseFindIndex.js"),
    baseIsNaN = __webpack_require__(/*! ./_baseIsNaN */ "./node_modules/lodash/_baseIsNaN.js"),
    strictIndexOf = __webpack_require__(/*! ./_strictIndexOf */ "./node_modules/lodash/_strictIndexOf.js");
/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */


function baseIndexOf(array, value, fromIndex) {
  return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
}

module.exports = baseIndexOf;

/***/ }),

/***/ "./node_modules/lodash/_baseIndexOfWith.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseIndexOfWith.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * This function is like `baseIndexOf` except that it accepts a comparator.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOfWith(array, value, fromIndex, comparator) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (comparator(array[index], value)) {
      return index;
    }
  }

  return -1;
}

module.exports = baseIndexOfWith;

/***/ }),

/***/ "./node_modules/lodash/_baseIsArguments.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseIsArguments.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");
/** `Object#toString` result references. */


var argsTag = '[object Arguments]';
/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */

function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;

/***/ }),

/***/ "./node_modules/lodash/_baseIsEqual.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseIsEqual.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqualDeep = __webpack_require__(/*! ./_baseIsEqualDeep */ "./node_modules/lodash/_baseIsEqualDeep.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");
/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */


function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }

  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
    return value !== value && other !== other;
  }

  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;

/***/ }),

/***/ "./node_modules/lodash/_baseIsEqualDeep.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseIsEqualDeep.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ "./node_modules/lodash/_Stack.js"),
    equalArrays = __webpack_require__(/*! ./_equalArrays */ "./node_modules/lodash/_equalArrays.js"),
    equalByTag = __webpack_require__(/*! ./_equalByTag */ "./node_modules/lodash/_equalByTag.js"),
    equalObjects = __webpack_require__(/*! ./_equalObjects */ "./node_modules/lodash/_equalObjects.js"),
    getTag = __webpack_require__(/*! ./_getTag */ "./node_modules/lodash/_getTag.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isBuffer = __webpack_require__(/*! ./isBuffer */ "./node_modules/lodash/isBuffer.js"),
    isTypedArray = __webpack_require__(/*! ./isTypedArray */ "./node_modules/lodash/isTypedArray.js");
/** Used to compose bitmasks for value comparisons. */


var COMPARE_PARTIAL_FLAG = 1;
/** `Object#toString` result references. */

var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';
/** Used for built-in method references. */

var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */

function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);
  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;
  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }

    objIsArr = true;
    objIsObj = false;
  }

  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack());
    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }

  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new Stack());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }

  if (!isSameTag) {
    return false;
  }

  stack || (stack = new Stack());
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;

/***/ }),

/***/ "./node_modules/lodash/_baseIsMap.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseIsMap.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__(/*! ./_getTag */ "./node_modules/lodash/_getTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");
/** `Object#toString` result references. */


var mapTag = '[object Map]';
/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */

function baseIsMap(value) {
  return isObjectLike(value) && getTag(value) == mapTag;
}

module.exports = baseIsMap;

/***/ }),

/***/ "./node_modules/lodash/_baseIsMatch.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseIsMatch.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ "./node_modules/lodash/_Stack.js"),
    baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ "./node_modules/lodash/_baseIsEqual.js");
/** Used to compose bitmasks for value comparisons. */


var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;
/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */

function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }

  object = Object(object);

  while (index--) {
    var data = matchData[index];

    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
      return false;
    }
  }

  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack();

      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }

      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
        return false;
      }
    }
  }

  return true;
}

module.exports = baseIsMatch;

/***/ }),

/***/ "./node_modules/lodash/_baseIsNaN.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseIsNaN.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

module.exports = baseIsNaN;

/***/ }),

/***/ "./node_modules/lodash/_baseIsNative.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseIsNative.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(/*! ./isFunction */ "./node_modules/lodash/isFunction.js"),
    isMasked = __webpack_require__(/*! ./_isMasked */ "./node_modules/lodash/_isMasked.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    toSource = __webpack_require__(/*! ./_toSource */ "./node_modules/lodash/_toSource.js");
/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */


var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
/** Used to detect host constructors (Safari). */

var reIsHostCtor = /^\[object .+?Constructor\]$/;
/** Used for built-in method references. */

var funcProto = Function.prototype,
    objectProto = Object.prototype;
/** Used to resolve the decompiled source of functions. */

var funcToString = funcProto.toString;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/** Used to detect if a method is native. */

var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */

function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }

  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;

/***/ }),

/***/ "./node_modules/lodash/_baseIsSet.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseIsSet.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__(/*! ./_getTag */ "./node_modules/lodash/_getTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");
/** `Object#toString` result references. */


var setTag = '[object Set]';
/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */

function baseIsSet(value) {
  return isObjectLike(value) && getTag(value) == setTag;
}

module.exports = baseIsSet;

/***/ }),

/***/ "./node_modules/lodash/_baseIsTypedArray.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_baseIsTypedArray.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isLength = __webpack_require__(/*! ./isLength */ "./node_modules/lodash/isLength.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");
/** `Object#toString` result references. */


var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';
var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';
/** Used to identify `toStringTag` values of typed arrays. */

var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */

function baseIsTypedArray(value) {
  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;

/***/ }),

/***/ "./node_modules/lodash/_baseIteratee.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseIteratee.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var baseMatches = __webpack_require__(/*! ./_baseMatches */ "./node_modules/lodash/_baseMatches.js"),
    baseMatchesProperty = __webpack_require__(/*! ./_baseMatchesProperty */ "./node_modules/lodash/_baseMatchesProperty.js"),
    identity = __webpack_require__(/*! ./identity */ "./node_modules/lodash/identity.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    property = __webpack_require__(/*! ./property */ "./node_modules/lodash/property.js");
/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */


function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }

  if (value == null) {
    return identity;
  }

  if (_typeof(value) == 'object') {
    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
  }

  return property(value);
}

module.exports = baseIteratee;

/***/ }),

/***/ "./node_modules/lodash/_baseKeys.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseKeys.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isPrototype = __webpack_require__(/*! ./_isPrototype */ "./node_modules/lodash/_isPrototype.js"),
    nativeKeys = __webpack_require__(/*! ./_nativeKeys */ "./node_modules/lodash/_nativeKeys.js");
/** Used for built-in method references. */


var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */

function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }

  var result = [];

  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }

  return result;
}

module.exports = baseKeys;

/***/ }),

/***/ "./node_modules/lodash/_baseKeysIn.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseKeysIn.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    isPrototype = __webpack_require__(/*! ./_isPrototype */ "./node_modules/lodash/_isPrototype.js"),
    nativeKeysIn = __webpack_require__(/*! ./_nativeKeysIn */ "./node_modules/lodash/_nativeKeysIn.js");
/** Used for built-in method references. */


var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */

function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }

  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }

  return result;
}

module.exports = baseKeysIn;

/***/ }),

/***/ "./node_modules/lodash/_baseMap.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_baseMap.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseEach = __webpack_require__(/*! ./_baseEach */ "./node_modules/lodash/_baseEach.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js");
/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */


function baseMap(collection, iteratee) {
  var index = -1,
      result = isArrayLike(collection) ? Array(collection.length) : [];
  baseEach(collection, function (value, key, collection) {
    result[++index] = iteratee(value, key, collection);
  });
  return result;
}

module.exports = baseMap;

/***/ }),

/***/ "./node_modules/lodash/_baseMatches.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseMatches.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMatch = __webpack_require__(/*! ./_baseIsMatch */ "./node_modules/lodash/_baseIsMatch.js"),
    getMatchData = __webpack_require__(/*! ./_getMatchData */ "./node_modules/lodash/_getMatchData.js"),
    matchesStrictComparable = __webpack_require__(/*! ./_matchesStrictComparable */ "./node_modules/lodash/_matchesStrictComparable.js");
/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */


function baseMatches(source) {
  var matchData = getMatchData(source);

  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }

  return function (object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

module.exports = baseMatches;

/***/ }),

/***/ "./node_modules/lodash/_baseMatchesProperty.js":
/*!*****************************************************!*\
  !*** ./node_modules/lodash/_baseMatchesProperty.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ "./node_modules/lodash/_baseIsEqual.js"),
    get = __webpack_require__(/*! ./get */ "./node_modules/lodash/get.js"),
    hasIn = __webpack_require__(/*! ./hasIn */ "./node_modules/lodash/hasIn.js"),
    isKey = __webpack_require__(/*! ./_isKey */ "./node_modules/lodash/_isKey.js"),
    isStrictComparable = __webpack_require__(/*! ./_isStrictComparable */ "./node_modules/lodash/_isStrictComparable.js"),
    matchesStrictComparable = __webpack_require__(/*! ./_matchesStrictComparable */ "./node_modules/lodash/_matchesStrictComparable.js"),
    toKey = __webpack_require__(/*! ./_toKey */ "./node_modules/lodash/_toKey.js");
/** Used to compose bitmasks for value comparisons. */


var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;
/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */

function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }

  return function (object) {
    var objValue = get(object, path);
    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

module.exports = baseMatchesProperty;

/***/ }),

/***/ "./node_modules/lodash/_baseMerge.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseMerge.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ "./node_modules/lodash/_Stack.js"),
    assignMergeValue = __webpack_require__(/*! ./_assignMergeValue */ "./node_modules/lodash/_assignMergeValue.js"),
    baseFor = __webpack_require__(/*! ./_baseFor */ "./node_modules/lodash/_baseFor.js"),
    baseMergeDeep = __webpack_require__(/*! ./_baseMergeDeep */ "./node_modules/lodash/_baseMergeDeep.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    keysIn = __webpack_require__(/*! ./keysIn */ "./node_modules/lodash/keysIn.js"),
    safeGet = __webpack_require__(/*! ./_safeGet */ "./node_modules/lodash/_safeGet.js");
/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */


function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }

  baseFor(source, function (srcValue, key) {
    stack || (stack = new Stack());

    if (isObject(srcValue)) {
      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
    } else {
      var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + '', object, source, stack) : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }

      assignMergeValue(object, key, newValue);
    }
  }, keysIn);
}

module.exports = baseMerge;

/***/ }),

/***/ "./node_modules/lodash/_baseMergeDeep.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_baseMergeDeep.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assignMergeValue = __webpack_require__(/*! ./_assignMergeValue */ "./node_modules/lodash/_assignMergeValue.js"),
    cloneBuffer = __webpack_require__(/*! ./_cloneBuffer */ "./node_modules/lodash/_cloneBuffer.js"),
    cloneTypedArray = __webpack_require__(/*! ./_cloneTypedArray */ "./node_modules/lodash/_cloneTypedArray.js"),
    copyArray = __webpack_require__(/*! ./_copyArray */ "./node_modules/lodash/_copyArray.js"),
    initCloneObject = __webpack_require__(/*! ./_initCloneObject */ "./node_modules/lodash/_initCloneObject.js"),
    isArguments = __webpack_require__(/*! ./isArguments */ "./node_modules/lodash/isArguments.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isArrayLikeObject = __webpack_require__(/*! ./isArrayLikeObject */ "./node_modules/lodash/isArrayLikeObject.js"),
    isBuffer = __webpack_require__(/*! ./isBuffer */ "./node_modules/lodash/isBuffer.js"),
    isFunction = __webpack_require__(/*! ./isFunction */ "./node_modules/lodash/isFunction.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    isPlainObject = __webpack_require__(/*! ./isPlainObject */ "./node_modules/lodash/isPlainObject.js"),
    isTypedArray = __webpack_require__(/*! ./isTypedArray */ "./node_modules/lodash/isTypedArray.js"),
    safeGet = __webpack_require__(/*! ./_safeGet */ "./node_modules/lodash/_safeGet.js"),
    toPlainObject = __webpack_require__(/*! ./toPlainObject */ "./node_modules/lodash/toPlainObject.js");
/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */


function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet(object, key),
      srcValue = safeGet(source, key),
      stacked = stack.get(srcValue);

  if (stacked) {
    assignMergeValue(object, key, stacked);
    return;
  }

  var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined;
  var isCommon = newValue === undefined;

  if (isCommon) {
    var isArr = isArray(srcValue),
        isBuff = !isArr && isBuffer(srcValue),
        isTyped = !isArr && !isBuff && isTypedArray(srcValue);
    newValue = srcValue;

    if (isArr || isBuff || isTyped) {
      if (isArray(objValue)) {
        newValue = objValue;
      } else if (isArrayLikeObject(objValue)) {
        newValue = copyArray(objValue);
      } else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer(srcValue, true);
      } else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray(srcValue, true);
      } else {
        newValue = [];
      }
    } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
      newValue = objValue;

      if (isArguments(objValue)) {
        newValue = toPlainObject(objValue);
      } else if (!isObject(objValue) || isFunction(objValue)) {
        newValue = initCloneObject(srcValue);
      }
    } else {
      isCommon = false;
    }
  }

  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack['delete'](srcValue);
  }

  assignMergeValue(object, key, newValue);
}

module.exports = baseMergeDeep;

/***/ }),

/***/ "./node_modules/lodash/_baseProperty.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseProperty.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function (object) {
    return object == null ? undefined : object[key];
  };
}

module.exports = baseProperty;

/***/ }),

/***/ "./node_modules/lodash/_basePropertyDeep.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_basePropertyDeep.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(/*! ./_baseGet */ "./node_modules/lodash/_baseGet.js");
/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */


function basePropertyDeep(path) {
  return function (object) {
    return baseGet(object, path);
  };
}

module.exports = basePropertyDeep;

/***/ }),

/***/ "./node_modules/lodash/_basePullAll.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_basePullAll.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(/*! ./_arrayMap */ "./node_modules/lodash/_arrayMap.js"),
    baseIndexOf = __webpack_require__(/*! ./_baseIndexOf */ "./node_modules/lodash/_baseIndexOf.js"),
    baseIndexOfWith = __webpack_require__(/*! ./_baseIndexOfWith */ "./node_modules/lodash/_baseIndexOfWith.js"),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ "./node_modules/lodash/_baseUnary.js"),
    copyArray = __webpack_require__(/*! ./_copyArray */ "./node_modules/lodash/_copyArray.js");
/** Used for built-in method references. */


var arrayProto = Array.prototype;
/** Built-in value references. */

var splice = arrayProto.splice;
/**
 * The base implementation of `_.pullAllBy` without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to remove.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns `array`.
 */

function basePullAll(array, values, iteratee, comparator) {
  var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
      index = -1,
      length = values.length,
      seen = array;

  if (array === values) {
    values = copyArray(values);
  }

  if (iteratee) {
    seen = arrayMap(array, baseUnary(iteratee));
  }

  while (++index < length) {
    var fromIndex = 0,
        value = values[index],
        computed = iteratee ? iteratee(value) : value;

    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
      if (seen !== array) {
        splice.call(seen, fromIndex, 1);
      }

      splice.call(array, fromIndex, 1);
    }
  }

  return array;
}

module.exports = basePullAll;

/***/ }),

/***/ "./node_modules/lodash/_basePullAt.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_basePullAt.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseUnset = __webpack_require__(/*! ./_baseUnset */ "./node_modules/lodash/_baseUnset.js"),
    isIndex = __webpack_require__(/*! ./_isIndex */ "./node_modules/lodash/_isIndex.js");
/** Used for built-in method references. */


var arrayProto = Array.prototype;
/** Built-in value references. */

var splice = arrayProto.splice;
/**
 * The base implementation of `_.pullAt` without support for individual
 * indexes or capturing the removed elements.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {number[]} indexes The indexes of elements to remove.
 * @returns {Array} Returns `array`.
 */

function basePullAt(array, indexes) {
  var length = array ? indexes.length : 0,
      lastIndex = length - 1;

  while (length--) {
    var index = indexes[length];

    if (length == lastIndex || index !== previous) {
      var previous = index;

      if (isIndex(index)) {
        splice.call(array, index, 1);
      } else {
        baseUnset(array, index);
      }
    }
  }

  return array;
}

module.exports = basePullAt;

/***/ }),

/***/ "./node_modules/lodash/_baseRest.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseRest.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(/*! ./identity */ "./node_modules/lodash/identity.js"),
    overRest = __webpack_require__(/*! ./_overRest */ "./node_modules/lodash/_overRest.js"),
    setToString = __webpack_require__(/*! ./_setToString */ "./node_modules/lodash/_setToString.js");
/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */


function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

module.exports = baseRest;

/***/ }),

/***/ "./node_modules/lodash/_baseSetToString.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseSetToString.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var constant = __webpack_require__(/*! ./constant */ "./node_modules/lodash/constant.js"),
    defineProperty = __webpack_require__(/*! ./_defineProperty */ "./node_modules/lodash/_defineProperty.js"),
    identity = __webpack_require__(/*! ./identity */ "./node_modules/lodash/identity.js");
/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */


var baseSetToString = !defineProperty ? identity : function (func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};
module.exports = baseSetToString;

/***/ }),

/***/ "./node_modules/lodash/_baseSlice.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseSlice.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : length + start;
  }

  end = end > length ? length : end;

  if (end < 0) {
    end += length;
  }

  length = start > end ? 0 : end - start >>> 0;
  start >>>= 0;
  var result = Array(length);

  while (++index < length) {
    result[index] = array[index + start];
  }

  return result;
}

module.exports = baseSlice;

/***/ }),

/***/ "./node_modules/lodash/_baseSortedIndexBy.js":
/*!***************************************************!*\
  !*** ./node_modules/lodash/_baseSortedIndexBy.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");
/** Used as references for the maximum length and index of an array. */


var MAX_ARRAY_LENGTH = 4294967295,
    MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeFloor = Math.floor,
    nativeMin = Math.min;
/**
 * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
 * which invokes `iteratee` for `value` and each element of `array` to compute
 * their sort ranking. The iteratee is invoked with one argument; (value).
 *
 * @private
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @param {Function} iteratee The iteratee invoked per element.
 * @param {boolean} [retHighest] Specify returning the highest qualified index.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 */

function baseSortedIndexBy(array, value, iteratee, retHighest) {
  value = iteratee(value);
  var low = 0,
      high = array == null ? 0 : array.length,
      valIsNaN = value !== value,
      valIsNull = value === null,
      valIsSymbol = isSymbol(value),
      valIsUndefined = value === undefined;

  while (low < high) {
    var mid = nativeFloor((low + high) / 2),
        computed = iteratee(array[mid]),
        othIsDefined = computed !== undefined,
        othIsNull = computed === null,
        othIsReflexive = computed === computed,
        othIsSymbol = isSymbol(computed);

    if (valIsNaN) {
      var setLow = retHighest || othIsReflexive;
    } else if (valIsUndefined) {
      setLow = othIsReflexive && (retHighest || othIsDefined);
    } else if (valIsNull) {
      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
    } else if (valIsSymbol) {
      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
    } else if (othIsNull || othIsSymbol) {
      setLow = false;
    } else {
      setLow = retHighest ? computed <= value : computed < value;
    }

    if (setLow) {
      low = mid + 1;
    } else {
      high = mid;
    }
  }

  return nativeMin(high, MAX_ARRAY_INDEX);
}

module.exports = baseSortedIndexBy;

/***/ }),

/***/ "./node_modules/lodash/_baseTimes.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseTimes.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }

  return result;
}

module.exports = baseTimes;

/***/ }),

/***/ "./node_modules/lodash/_baseToString.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseToString.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js"),
    arrayMap = __webpack_require__(/*! ./_arrayMap */ "./node_modules/lodash/_arrayMap.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");
/** Used as references for various `Number` constants. */


var INFINITY = 1 / 0;
/** Used to convert symbols to primitives and strings. */

var symbolProto = _Symbol ? _Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;
/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */

function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }

  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }

  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }

  var result = value + '';
  return result == '0' && 1 / value == -INFINITY ? '-0' : result;
}

module.exports = baseToString;

/***/ }),

/***/ "./node_modules/lodash/_baseUnary.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseUnary.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function (value) {
    return func(value);
  };
}

module.exports = baseUnary;

/***/ }),

/***/ "./node_modules/lodash/_baseUniq.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseUniq.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(/*! ./_SetCache */ "./node_modules/lodash/_SetCache.js"),
    arrayIncludes = __webpack_require__(/*! ./_arrayIncludes */ "./node_modules/lodash/_arrayIncludes.js"),
    arrayIncludesWith = __webpack_require__(/*! ./_arrayIncludesWith */ "./node_modules/lodash/_arrayIncludesWith.js"),
    cacheHas = __webpack_require__(/*! ./_cacheHas */ "./node_modules/lodash/_cacheHas.js"),
    createSet = __webpack_require__(/*! ./_createSet */ "./node_modules/lodash/_createSet.js"),
    setToArray = __webpack_require__(/*! ./_setToArray */ "./node_modules/lodash/_setToArray.js");
/** Used as the size to enable large array optimizations. */


var LARGE_ARRAY_SIZE = 200;
/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */

function baseUniq(array, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      length = array.length,
      isCommon = true,
      result = [],
      seen = result;

  if (comparator) {
    isCommon = false;
    includes = arrayIncludesWith;
  } else if (length >= LARGE_ARRAY_SIZE) {
    var set = iteratee ? null : createSet(array);

    if (set) {
      return setToArray(set);
    }

    isCommon = false;
    includes = cacheHas;
    seen = new SetCache();
  } else {
    seen = iteratee ? [] : result;
  }

  outer: while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;
    value = comparator || value !== 0 ? value : 0;

    if (isCommon && computed === computed) {
      var seenIndex = seen.length;

      while (seenIndex--) {
        if (seen[seenIndex] === computed) {
          continue outer;
        }
      }

      if (iteratee) {
        seen.push(computed);
      }

      result.push(value);
    } else if (!includes(seen, computed, comparator)) {
      if (seen !== result) {
        seen.push(computed);
      }

      result.push(value);
    }
  }

  return result;
}

module.exports = baseUniq;

/***/ }),

/***/ "./node_modules/lodash/_baseUnset.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseUnset.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(/*! ./_castPath */ "./node_modules/lodash/_castPath.js"),
    last = __webpack_require__(/*! ./last */ "./node_modules/lodash/last.js"),
    parent = __webpack_require__(/*! ./_parent */ "./node_modules/lodash/_parent.js"),
    toKey = __webpack_require__(/*! ./_toKey */ "./node_modules/lodash/_toKey.js");
/**
 * The base implementation of `_.unset`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The property path to unset.
 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
 */


function baseUnset(object, path) {
  path = castPath(path, object);
  object = parent(object, path);
  return object == null || delete object[toKey(last(path))];
}

module.exports = baseUnset;

/***/ }),

/***/ "./node_modules/lodash/_cacheHas.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_cacheHas.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;

/***/ }),

/***/ "./node_modules/lodash/_castPath.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_castPath.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isKey = __webpack_require__(/*! ./_isKey */ "./node_modules/lodash/_isKey.js"),
    stringToPath = __webpack_require__(/*! ./_stringToPath */ "./node_modules/lodash/_stringToPath.js"),
    toString = __webpack_require__(/*! ./toString */ "./node_modules/lodash/toString.js");
/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */


function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }

  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;

/***/ }),

/***/ "./node_modules/lodash/_cloneArrayBuffer.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_cloneArrayBuffer.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Uint8Array = __webpack_require__(/*! ./_Uint8Array */ "./node_modules/lodash/_Uint8Array.js");
/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */


function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;

/***/ }),

/***/ "./node_modules/lodash/_cloneBuffer.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_cloneBuffer.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");
/** Detect free variable `exports`. */


var freeExports = ( false ? undefined : _typeof(exports)) == 'object' && exports && !exports.nodeType && exports;
/** Detect free variable `module`. */

var freeModule = freeExports && ( false ? undefined : _typeof(module)) == 'object' && module && !module.nodeType && module;
/** Detect the popular CommonJS extension `module.exports`. */

var moduleExports = freeModule && freeModule.exports === freeExports;
/** Built-in value references. */

var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;
/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */

function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }

  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/lodash/_cloneDataView.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_cloneDataView.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(/*! ./_cloneArrayBuffer */ "./node_modules/lodash/_cloneArrayBuffer.js");
/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */


function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

module.exports = cloneDataView;

/***/ }),

/***/ "./node_modules/lodash/_cloneRegExp.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_cloneRegExp.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;
/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */

function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

module.exports = cloneRegExp;

/***/ }),

/***/ "./node_modules/lodash/_cloneSymbol.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_cloneSymbol.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js");
/** Used to convert symbols to primitives and strings. */


var symbolProto = _Symbol ? _Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */

function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

module.exports = cloneSymbol;

/***/ }),

/***/ "./node_modules/lodash/_cloneTypedArray.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_cloneTypedArray.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(/*! ./_cloneArrayBuffer */ "./node_modules/lodash/_cloneArrayBuffer.js");
/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */


function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;

/***/ }),

/***/ "./node_modules/lodash/_copyArray.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_copyArray.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;
  array || (array = Array(length));

  while (++index < length) {
    array[index] = source[index];
  }

  return array;
}

module.exports = copyArray;

/***/ }),

/***/ "./node_modules/lodash/_copyObject.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_copyObject.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(/*! ./_assignValue */ "./node_modules/lodash/_assignValue.js"),
    baseAssignValue = __webpack_require__(/*! ./_baseAssignValue */ "./node_modules/lodash/_baseAssignValue.js");
/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */


function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});
  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];
    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }

    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }

  return object;
}

module.exports = copyObject;

/***/ }),

/***/ "./node_modules/lodash/_copySymbols.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_copySymbols.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ "./node_modules/lodash/_copyObject.js"),
    getSymbols = __webpack_require__(/*! ./_getSymbols */ "./node_modules/lodash/_getSymbols.js");
/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */


function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

module.exports = copySymbols;

/***/ }),

/***/ "./node_modules/lodash/_copySymbolsIn.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_copySymbolsIn.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ "./node_modules/lodash/_copyObject.js"),
    getSymbolsIn = __webpack_require__(/*! ./_getSymbolsIn */ "./node_modules/lodash/_getSymbolsIn.js");
/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */


function copySymbolsIn(source, object) {
  return copyObject(source, getSymbolsIn(source), object);
}

module.exports = copySymbolsIn;

/***/ }),

/***/ "./node_modules/lodash/_coreJsData.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_coreJsData.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");
/** Used to detect overreaching core-js shims. */


var coreJsData = root['__core-js_shared__'];
module.exports = coreJsData;

/***/ }),

/***/ "./node_modules/lodash/_createAssigner.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_createAssigner.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseRest = __webpack_require__(/*! ./_baseRest */ "./node_modules/lodash/_baseRest.js"),
    isIterateeCall = __webpack_require__(/*! ./_isIterateeCall */ "./node_modules/lodash/_isIterateeCall.js");
/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */


function createAssigner(assigner) {
  return baseRest(function (object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;
    customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }

    object = Object(object);

    while (++index < length) {
      var source = sources[index];

      if (source) {
        assigner(object, source, index, customizer);
      }
    }

    return object;
  });
}

module.exports = createAssigner;

/***/ }),

/***/ "./node_modules/lodash/_createBaseEach.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_createBaseEach.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js");
/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */


function createBaseEach(eachFunc, fromRight) {
  return function (collection, iteratee) {
    if (collection == null) {
      return collection;
    }

    if (!isArrayLike(collection)) {
      return eachFunc(collection, iteratee);
    }

    var length = collection.length,
        index = fromRight ? length : -1,
        iterable = Object(collection);

    while (fromRight ? index-- : ++index < length) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }

    return collection;
  };
}

module.exports = createBaseEach;

/***/ }),

/***/ "./node_modules/lodash/_createBaseFor.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_createBaseFor.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function (object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];

      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }

    return object;
  };
}

module.exports = createBaseFor;

/***/ }),

/***/ "./node_modules/lodash/_createFind.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_createFind.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIteratee = __webpack_require__(/*! ./_baseIteratee */ "./node_modules/lodash/_baseIteratee.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js"),
    keys = __webpack_require__(/*! ./keys */ "./node_modules/lodash/keys.js");
/**
 * Creates a `_.find` or `_.findLast` function.
 *
 * @private
 * @param {Function} findIndexFunc The function to find the collection index.
 * @returns {Function} Returns the new find function.
 */


function createFind(findIndexFunc) {
  return function (collection, predicate, fromIndex) {
    var iterable = Object(collection);

    if (!isArrayLike(collection)) {
      var iteratee = baseIteratee(predicate, 3);
      collection = keys(collection);

      predicate = function predicate(key) {
        return iteratee(iterable[key], key, iterable);
      };
    }

    var index = findIndexFunc(collection, predicate, fromIndex);
    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
  };
}

module.exports = createFind;

/***/ }),

/***/ "./node_modules/lodash/_createSet.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_createSet.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Set = __webpack_require__(/*! ./_Set */ "./node_modules/lodash/_Set.js"),
    noop = __webpack_require__(/*! ./noop */ "./node_modules/lodash/noop.js"),
    setToArray = __webpack_require__(/*! ./_setToArray */ "./node_modules/lodash/_setToArray.js");
/** Used as references for various `Number` constants. */


var INFINITY = 1 / 0;
/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */

var createSet = !(Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY) ? noop : function (values) {
  return new Set(values);
};
module.exports = createSet;

/***/ }),

/***/ "./node_modules/lodash/_customOmitClone.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_customOmitClone.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isPlainObject = __webpack_require__(/*! ./isPlainObject */ "./node_modules/lodash/isPlainObject.js");
/**
 * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
 * objects.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {string} key The key of the property to inspect.
 * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
 */


function customOmitClone(value) {
  return isPlainObject(value) ? undefined : value;
}

module.exports = customOmitClone;

/***/ }),

/***/ "./node_modules/lodash/_defineProperty.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_defineProperty.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js");

var defineProperty = function () {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}();

module.exports = defineProperty;

/***/ }),

/***/ "./node_modules/lodash/_equalArrays.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_equalArrays.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(/*! ./_SetCache */ "./node_modules/lodash/_SetCache.js"),
    arraySome = __webpack_require__(/*! ./_arraySome */ "./node_modules/lodash/_arraySome.js"),
    cacheHas = __webpack_require__(/*! ./_cacheHas */ "./node_modules/lodash/_cacheHas.js");
/** Used to compose bitmasks for value comparisons. */


var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;
/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */

function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  } // Assume cyclic values are equal.


  var stacked = stack.get(array);

  if (stacked && stack.get(other)) {
    return stacked == other;
  }

  var index = -1,
      result = true,
      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;
  stack.set(array, other);
  stack.set(other, array); // Ignore non-index properties.

  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
    }

    if (compared !== undefined) {
      if (compared) {
        continue;
      }

      result = false;
      break;
    } // Recursively compare arrays (susceptible to call stack limits).


    if (seen) {
      if (!arraySome(other, function (othValue, othIndex) {
        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result = false;
      break;
    }
  }

  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;

/***/ }),

/***/ "./node_modules/lodash/_equalByTag.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_equalByTag.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js"),
    Uint8Array = __webpack_require__(/*! ./_Uint8Array */ "./node_modules/lodash/_Uint8Array.js"),
    eq = __webpack_require__(/*! ./eq */ "./node_modules/lodash/eq.js"),
    equalArrays = __webpack_require__(/*! ./_equalArrays */ "./node_modules/lodash/_equalArrays.js"),
    mapToArray = __webpack_require__(/*! ./_mapToArray */ "./node_modules/lodash/_mapToArray.js"),
    setToArray = __webpack_require__(/*! ./_setToArray */ "./node_modules/lodash/_setToArray.js");
/** Used to compose bitmasks for value comparisons. */


var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;
/** `Object#toString` result references. */

var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';
var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';
/** Used to convert symbols to primitives and strings. */

var symbolProto = _Symbol ? _Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */

function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
        return false;
      }

      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }

      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == other + '';

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      } // Assume cyclic values are equal.


      var stacked = stack.get(object);

      if (stacked) {
        return stacked == other;
      }

      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).

      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }

  }

  return false;
}

module.exports = equalByTag;

/***/ }),

/***/ "./node_modules/lodash/_equalObjects.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_equalObjects.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getAllKeys = __webpack_require__(/*! ./_getAllKeys */ "./node_modules/lodash/_getAllKeys.js");
/** Used to compose bitmasks for value comparisons. */


var COMPARE_PARTIAL_FLAG = 1;
/** Used for built-in method references. */

var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */

function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }

  var index = objLength;

  while (index--) {
    var key = objProps[index];

    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  } // Assume cyclic values are equal.


  var stacked = stack.get(object);

  if (stacked && stack.get(other)) {
    return stacked == other;
  }

  var result = true;
  stack.set(object, other);
  stack.set(other, object);
  var skipCtor = isPartial;

  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
    } // Recursively compare objects (susceptible to call stack limits).


    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result = false;
      break;
    }

    skipCtor || (skipCtor = key == 'constructor');
  }

  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.

    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }

  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;

/***/ }),

/***/ "./node_modules/lodash/_flatRest.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_flatRest.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var flatten = __webpack_require__(/*! ./flatten */ "./node_modules/lodash/flatten.js"),
    overRest = __webpack_require__(/*! ./_overRest */ "./node_modules/lodash/_overRest.js"),
    setToString = __webpack_require__(/*! ./_setToString */ "./node_modules/lodash/_setToString.js");
/**
 * A specialized version of `baseRest` which flattens the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */


function flatRest(func) {
  return setToString(overRest(func, undefined, flatten), func + '');
}

module.exports = flatRest;

/***/ }),

/***/ "./node_modules/lodash/_freeGlobal.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_freeGlobal.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/** Detect free variable `global` from Node.js. */
var freeGlobal = (typeof global === "undefined" ? "undefined" : _typeof(global)) == 'object' && global && global.Object === Object && global;
module.exports = freeGlobal;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/lodash/_getAllKeys.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getAllKeys.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(/*! ./_baseGetAllKeys */ "./node_modules/lodash/_baseGetAllKeys.js"),
    getSymbols = __webpack_require__(/*! ./_getSymbols */ "./node_modules/lodash/_getSymbols.js"),
    keys = __webpack_require__(/*! ./keys */ "./node_modules/lodash/keys.js");
/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */


function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;

/***/ }),

/***/ "./node_modules/lodash/_getAllKeysIn.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_getAllKeysIn.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(/*! ./_baseGetAllKeys */ "./node_modules/lodash/_baseGetAllKeys.js"),
    getSymbolsIn = __webpack_require__(/*! ./_getSymbolsIn */ "./node_modules/lodash/_getSymbolsIn.js"),
    keysIn = __webpack_require__(/*! ./keysIn */ "./node_modules/lodash/keysIn.js");
/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */


function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

module.exports = getAllKeysIn;

/***/ }),

/***/ "./node_modules/lodash/_getMapData.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getMapData.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isKeyable = __webpack_require__(/*! ./_isKeyable */ "./node_modules/lodash/_isKeyable.js");
/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */


function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
}

module.exports = getMapData;

/***/ }),

/***/ "./node_modules/lodash/_getMatchData.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_getMatchData.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isStrictComparable = __webpack_require__(/*! ./_isStrictComparable */ "./node_modules/lodash/_isStrictComparable.js"),
    keys = __webpack_require__(/*! ./keys */ "./node_modules/lodash/keys.js");
/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */


function getMatchData(object) {
  var result = keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];
    result[length] = [key, value, isStrictComparable(value)];
  }

  return result;
}

module.exports = getMatchData;

/***/ }),

/***/ "./node_modules/lodash/_getNative.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getNative.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIsNative = __webpack_require__(/*! ./_baseIsNative */ "./node_modules/lodash/_baseIsNative.js"),
    getValue = __webpack_require__(/*! ./_getValue */ "./node_modules/lodash/_getValue.js");
/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */


function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;

/***/ }),

/***/ "./node_modules/lodash/_getPrototype.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_getPrototype.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(/*! ./_overArg */ "./node_modules/lodash/_overArg.js");
/** Built-in value references. */


var getPrototype = overArg(Object.getPrototypeOf, Object);
module.exports = getPrototype;

/***/ }),

/***/ "./node_modules/lodash/_getRawTag.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getRawTag.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js");
/** Used for built-in method references. */


var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */

var nativeObjectToString = objectProto.toString;
/** Built-in value references. */

var symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;
/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */

function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);

  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }

  return result;
}

module.exports = getRawTag;

/***/ }),

/***/ "./node_modules/lodash/_getSymbols.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getSymbols.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayFilter = __webpack_require__(/*! ./_arrayFilter */ "./node_modules/lodash/_arrayFilter.js"),
    stubArray = __webpack_require__(/*! ./stubArray */ "./node_modules/lodash/stubArray.js");
/** Used for built-in method references. */


var objectProto = Object.prototype;
/** Built-in value references. */

var propertyIsEnumerable = objectProto.propertyIsEnumerable;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeGetSymbols = Object.getOwnPropertySymbols;
/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */

var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
  if (object == null) {
    return [];
  }

  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function (symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};
module.exports = getSymbols;

/***/ }),

/***/ "./node_modules/lodash/_getSymbolsIn.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_getSymbolsIn.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(/*! ./_arrayPush */ "./node_modules/lodash/_arrayPush.js"),
    getPrototype = __webpack_require__(/*! ./_getPrototype */ "./node_modules/lodash/_getPrototype.js"),
    getSymbols = __webpack_require__(/*! ./_getSymbols */ "./node_modules/lodash/_getSymbols.js"),
    stubArray = __webpack_require__(/*! ./stubArray */ "./node_modules/lodash/stubArray.js");
/* Built-in method references for those with the same name as other `lodash` methods. */


var nativeGetSymbols = Object.getOwnPropertySymbols;
/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */

var getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {
  var result = [];

  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }

  return result;
};
module.exports = getSymbolsIn;

/***/ }),

/***/ "./node_modules/lodash/_getTag.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_getTag.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DataView = __webpack_require__(/*! ./_DataView */ "./node_modules/lodash/_DataView.js"),
    Map = __webpack_require__(/*! ./_Map */ "./node_modules/lodash/_Map.js"),
    Promise = __webpack_require__(/*! ./_Promise */ "./node_modules/lodash/_Promise.js"),
    Set = __webpack_require__(/*! ./_Set */ "./node_modules/lodash/_Set.js"),
    WeakMap = __webpack_require__(/*! ./_WeakMap */ "./node_modules/lodash/_WeakMap.js"),
    baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    toSource = __webpack_require__(/*! ./_toSource */ "./node_modules/lodash/_toSource.js");
/** `Object#toString` result references. */


var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';
var dataViewTag = '[object DataView]';
/** Used to detect maps, sets, and weakmaps. */

var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);
/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */

var getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.

if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
  getTag = function getTag(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag;

        case mapCtorString:
          return mapTag;

        case promiseCtorString:
          return promiseTag;

        case setCtorString:
          return setTag;

        case weakMapCtorString:
          return weakMapTag;
      }
    }

    return result;
  };
}

module.exports = getTag;

/***/ }),

/***/ "./node_modules/lodash/_getValue.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_getValue.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;

/***/ }),

/***/ "./node_modules/lodash/_hasPath.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hasPath.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(/*! ./_castPath */ "./node_modules/lodash/_castPath.js"),
    isArguments = __webpack_require__(/*! ./isArguments */ "./node_modules/lodash/isArguments.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isIndex = __webpack_require__(/*! ./_isIndex */ "./node_modules/lodash/_isIndex.js"),
    isLength = __webpack_require__(/*! ./isLength */ "./node_modules/lodash/isLength.js"),
    toKey = __webpack_require__(/*! ./_toKey */ "./node_modules/lodash/_toKey.js");
/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */


function hasPath(object, path, hasFunc) {
  path = castPath(path, object);
  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);

    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }

    object = object[key];
  }

  if (result || ++index != length) {
    return result;
  }

  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
}

module.exports = hasPath;

/***/ }),

/***/ "./node_modules/lodash/_hashClear.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_hashClear.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "./node_modules/lodash/_nativeCreate.js");
/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */


function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;

/***/ }),

/***/ "./node_modules/lodash/_hashDelete.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_hashDelete.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;

/***/ }),

/***/ "./node_modules/lodash/_hashGet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashGet.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "./node_modules/lodash/_nativeCreate.js");
/** Used to stand-in for `undefined` hash values. */


var HASH_UNDEFINED = '__lodash_hash_undefined__';
/** Used for built-in method references. */

var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */

function hashGet(key) {
  var data = this.__data__;

  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }

  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;

/***/ }),

/***/ "./node_modules/lodash/_hashHas.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashHas.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "./node_modules/lodash/_nativeCreate.js");
/** Used for built-in method references. */


var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */

function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

module.exports = hashHas;

/***/ }),

/***/ "./node_modules/lodash/_hashSet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashSet.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "./node_modules/lodash/_nativeCreate.js");
/** Used to stand-in for `undefined` hash values. */


var HASH_UNDEFINED = '__lodash_hash_undefined__';
/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */

function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;

/***/ }),

/***/ "./node_modules/lodash/_initCloneArray.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_initCloneArray.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */

function initCloneArray(array) {
  var length = array.length,
      result = new array.constructor(length); // Add properties assigned by `RegExp#exec`.

  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }

  return result;
}

module.exports = initCloneArray;

/***/ }),

/***/ "./node_modules/lodash/_initCloneByTag.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_initCloneByTag.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(/*! ./_cloneArrayBuffer */ "./node_modules/lodash/_cloneArrayBuffer.js"),
    cloneDataView = __webpack_require__(/*! ./_cloneDataView */ "./node_modules/lodash/_cloneDataView.js"),
    cloneRegExp = __webpack_require__(/*! ./_cloneRegExp */ "./node_modules/lodash/_cloneRegExp.js"),
    cloneSymbol = __webpack_require__(/*! ./_cloneSymbol */ "./node_modules/lodash/_cloneSymbol.js"),
    cloneTypedArray = __webpack_require__(/*! ./_cloneTypedArray */ "./node_modules/lodash/_cloneTypedArray.js");
/** `Object#toString` result references. */


var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';
var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';
/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */

function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;

  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag:
    case float64Tag:
    case int8Tag:
    case int16Tag:
    case int32Tag:
    case uint8Tag:
    case uint8ClampedTag:
    case uint16Tag:
    case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return new Ctor();

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return new Ctor();

    case symbolTag:
      return cloneSymbol(object);
  }
}

module.exports = initCloneByTag;

/***/ }),

/***/ "./node_modules/lodash/_initCloneObject.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_initCloneObject.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__(/*! ./_baseCreate */ "./node_modules/lodash/_baseCreate.js"),
    getPrototype = __webpack_require__(/*! ./_getPrototype */ "./node_modules/lodash/_getPrototype.js"),
    isPrototype = __webpack_require__(/*! ./_isPrototype */ "./node_modules/lodash/_isPrototype.js");
/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */


function initCloneObject(object) {
  return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
}

module.exports = initCloneObject;

/***/ }),

/***/ "./node_modules/lodash/_isFlattenable.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_isFlattenable.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js"),
    isArguments = __webpack_require__(/*! ./isArguments */ "./node_modules/lodash/isArguments.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js");
/** Built-in value references. */


var spreadableSymbol = _Symbol ? _Symbol.isConcatSpreadable : undefined;
/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */

function isFlattenable(value) {
  return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
}

module.exports = isFlattenable;

/***/ }),

/***/ "./node_modules/lodash/_isIndex.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_isIndex.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;
/** Used to detect unsigned integer values. */

var reIsUint = /^(?:0|[1-9]\d*)$/;
/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */

function isIndex(value, length) {
  var type = _typeof(value);

  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
}

module.exports = isIndex;

/***/ }),

/***/ "./node_modules/lodash/_isIterateeCall.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_isIterateeCall.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var eq = __webpack_require__(/*! ./eq */ "./node_modules/lodash/eq.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js"),
    isIndex = __webpack_require__(/*! ./_isIndex */ "./node_modules/lodash/_isIndex.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js");
/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */


function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }

  var type = _typeof(index);

  if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {
    return eq(object[index], value);
  }

  return false;
}

module.exports = isIterateeCall;

/***/ }),

/***/ "./node_modules/lodash/_isKey.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_isKey.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");
/** Used to match property names within property paths. */


var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;
/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */

function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }

  var type = _typeof(value);

  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
    return true;
  }

  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
}

module.exports = isKey;

/***/ }),

/***/ "./node_modules/lodash/_isKeyable.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_isKeyable.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = _typeof(value);

  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
}

module.exports = isKeyable;

/***/ }),

/***/ "./node_modules/lodash/_isMasked.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_isMasked.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var coreJsData = __webpack_require__(/*! ./_coreJsData */ "./node_modules/lodash/_coreJsData.js");
/** Used to detect methods masquerading as native. */


var maskSrcKey = function () {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? 'Symbol(src)_1.' + uid : '';
}();
/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */


function isMasked(func) {
  return !!maskSrcKey && maskSrcKey in func;
}

module.exports = isMasked;

/***/ }),

/***/ "./node_modules/lodash/_isPrototype.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_isPrototype.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;
/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */

function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
  return value === proto;
}

module.exports = isPrototype;

/***/ }),

/***/ "./node_modules/lodash/_isStrictComparable.js":
/*!****************************************************!*\
  !*** ./node_modules/lodash/_isStrictComparable.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js");
/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */


function isStrictComparable(value) {
  return value === value && !isObject(value);
}

module.exports = isStrictComparable;

/***/ }),

/***/ "./node_modules/lodash/_listCacheClear.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_listCacheClear.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;

/***/ }),

/***/ "./node_modules/lodash/_listCacheDelete.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_listCacheDelete.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "./node_modules/lodash/_assocIndexOf.js");
/** Used for built-in method references. */


var arrayProto = Array.prototype;
/** Built-in value references. */

var splice = arrayProto.splice;
/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */

function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }

  var lastIndex = data.length - 1;

  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }

  --this.size;
  return true;
}

module.exports = listCacheDelete;

/***/ }),

/***/ "./node_modules/lodash/_listCacheGet.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheGet.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "./node_modules/lodash/_assocIndexOf.js");
/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */


function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);
  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;

/***/ }),

/***/ "./node_modules/lodash/_listCacheHas.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheHas.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "./node_modules/lodash/_assocIndexOf.js");
/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */


function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;

/***/ }),

/***/ "./node_modules/lodash/_listCacheSet.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheSet.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "./node_modules/lodash/_assocIndexOf.js");
/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */


function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }

  return this;
}

module.exports = listCacheSet;

/***/ }),

/***/ "./node_modules/lodash/_mapCacheClear.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_mapCacheClear.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Hash = __webpack_require__(/*! ./_Hash */ "./node_modules/lodash/_Hash.js"),
    ListCache = __webpack_require__(/*! ./_ListCache */ "./node_modules/lodash/_ListCache.js"),
    Map = __webpack_require__(/*! ./_Map */ "./node_modules/lodash/_Map.js");
/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */


function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash(),
    'map': new (Map || ListCache)(),
    'string': new Hash()
  };
}

module.exports = mapCacheClear;

/***/ }),

/***/ "./node_modules/lodash/_mapCacheDelete.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_mapCacheDelete.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "./node_modules/lodash/_getMapData.js");
/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */


function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;

/***/ }),

/***/ "./node_modules/lodash/_mapCacheGet.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheGet.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "./node_modules/lodash/_getMapData.js");
/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */


function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;

/***/ }),

/***/ "./node_modules/lodash/_mapCacheHas.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheHas.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "./node_modules/lodash/_getMapData.js");
/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */


function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;

/***/ }),

/***/ "./node_modules/lodash/_mapCacheSet.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheSet.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "./node_modules/lodash/_getMapData.js");
/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */


function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;
  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;

/***/ }),

/***/ "./node_modules/lodash/_mapToArray.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_mapToArray.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);
  map.forEach(function (value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;

/***/ }),

/***/ "./node_modules/lodash/_matchesStrictComparable.js":
/*!*********************************************************!*\
  !*** ./node_modules/lodash/_matchesStrictComparable.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function (object) {
    if (object == null) {
      return false;
    }

    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));
  };
}

module.exports = matchesStrictComparable;

/***/ }),

/***/ "./node_modules/lodash/_memoizeCapped.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_memoizeCapped.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var memoize = __webpack_require__(/*! ./memoize */ "./node_modules/lodash/memoize.js");
/** Used as the maximum memoize cache size. */


var MAX_MEMOIZE_SIZE = 500;
/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */

function memoizeCapped(func) {
  var result = memoize(func, function (key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }

    return key;
  });
  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;

/***/ }),

/***/ "./node_modules/lodash/_nativeCreate.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_nativeCreate.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js");
/* Built-in method references that are verified to be native. */


var nativeCreate = getNative(Object, 'create');
module.exports = nativeCreate;

/***/ }),

/***/ "./node_modules/lodash/_nativeKeys.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_nativeKeys.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(/*! ./_overArg */ "./node_modules/lodash/_overArg.js");
/* Built-in method references for those with the same name as other `lodash` methods. */


var nativeKeys = overArg(Object.keys, Object);
module.exports = nativeKeys;

/***/ }),

/***/ "./node_modules/lodash/_nativeKeysIn.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_nativeKeysIn.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];

  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }

  return result;
}

module.exports = nativeKeysIn;

/***/ }),

/***/ "./node_modules/lodash/_nodeUtil.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_nodeUtil.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ "./node_modules/lodash/_freeGlobal.js");
/** Detect free variable `exports`. */


var freeExports = ( false ? undefined : _typeof(exports)) == 'object' && exports && !exports.nodeType && exports;
/** Detect free variable `module`. */

var freeModule = freeExports && ( false ? undefined : _typeof(module)) == 'object' && module && !module.nodeType && module;
/** Detect the popular CommonJS extension `module.exports`. */

var moduleExports = freeModule && freeModule.exports === freeExports;
/** Detect free variable `process` from Node.js. */

var freeProcess = moduleExports && freeGlobal.process;
/** Used to access faster Node.js helpers. */

var nodeUtil = function () {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    } // Legacy `process.binding('util')` for Node.js < 10.


    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}();

module.exports = nodeUtil;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/lodash/_objectToString.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_objectToString.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */

var nativeObjectToString = objectProto.toString;
/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */

function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;

/***/ }),

/***/ "./node_modules/lodash/_overArg.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_overArg.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function (arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;

/***/ }),

/***/ "./node_modules/lodash/_overRest.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_overRest.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__(/*! ./_apply */ "./node_modules/lodash/_apply.js");
/* Built-in method references for those with the same name as other `lodash` methods. */


var nativeMax = Math.max;
/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */

function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? func.length - 1 : start, 0);
  return function () {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }

    index = -1;
    var otherArgs = Array(start + 1);

    while (++index < start) {
      otherArgs[index] = args[index];
    }

    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;

/***/ }),

/***/ "./node_modules/lodash/_parent.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_parent.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(/*! ./_baseGet */ "./node_modules/lodash/_baseGet.js"),
    baseSlice = __webpack_require__(/*! ./_baseSlice */ "./node_modules/lodash/_baseSlice.js");
/**
 * Gets the parent value at `path` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} path The path to get the parent value of.
 * @returns {*} Returns the parent value.
 */


function parent(object, path) {
  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
}

module.exports = parent;

/***/ }),

/***/ "./node_modules/lodash/_root.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_root.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ "./node_modules/lodash/_freeGlobal.js");
/** Detect free variable `self`. */


var freeSelf = (typeof self === "undefined" ? "undefined" : _typeof(self)) == 'object' && self && self.Object === Object && self;
/** Used as a reference to the global object. */

var root = freeGlobal || freeSelf || Function('return this')();
module.exports = root;

/***/ }),

/***/ "./node_modules/lodash/_safeGet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_safeGet.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function safeGet(object, key) {
  if (key === 'constructor' && typeof object[key] === 'function') {
    return;
  }

  if (key == '__proto__') {
    return;
  }

  return object[key];
}

module.exports = safeGet;

/***/ }),

/***/ "./node_modules/lodash/_setCacheAdd.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setCacheAdd.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';
/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */

function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);

  return this;
}

module.exports = setCacheAdd;

/***/ }),

/***/ "./node_modules/lodash/_setCacheHas.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setCacheHas.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;

/***/ }),

/***/ "./node_modules/lodash/_setToArray.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_setToArray.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);
  set.forEach(function (value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;

/***/ }),

/***/ "./node_modules/lodash/_setToString.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setToString.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseSetToString = __webpack_require__(/*! ./_baseSetToString */ "./node_modules/lodash/_baseSetToString.js"),
    shortOut = __webpack_require__(/*! ./_shortOut */ "./node_modules/lodash/_shortOut.js");
/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */


var setToString = shortOut(baseSetToString);
module.exports = setToString;

/***/ }),

/***/ "./node_modules/lodash/_shortOut.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_shortOut.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeNow = Date.now;
/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */

function shortOut(func) {
  var count = 0,
      lastCalled = 0;
  return function () {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);
    lastCalled = stamp;

    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }

    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;

/***/ }),

/***/ "./node_modules/lodash/_stackClear.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_stackClear.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ "./node_modules/lodash/_ListCache.js");
/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */


function stackClear() {
  this.__data__ = new ListCache();
  this.size = 0;
}

module.exports = stackClear;

/***/ }),

/***/ "./node_modules/lodash/_stackDelete.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_stackDelete.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);
  this.size = data.size;
  return result;
}

module.exports = stackDelete;

/***/ }),

/***/ "./node_modules/lodash/_stackGet.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackGet.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;

/***/ }),

/***/ "./node_modules/lodash/_stackHas.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackHas.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;

/***/ }),

/***/ "./node_modules/lodash/_stackSet.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackSet.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ "./node_modules/lodash/_ListCache.js"),
    Map = __webpack_require__(/*! ./_Map */ "./node_modules/lodash/_Map.js"),
    MapCache = __webpack_require__(/*! ./_MapCache */ "./node_modules/lodash/_MapCache.js");
/** Used as the size to enable large array optimizations. */


var LARGE_ARRAY_SIZE = 200;
/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */

function stackSet(key, value) {
  var data = this.__data__;

  if (data instanceof ListCache) {
    var pairs = data.__data__;

    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }

    data = this.__data__ = new MapCache(pairs);
  }

  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;

/***/ }),

/***/ "./node_modules/lodash/_strictIndexOf.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_strictIndexOf.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }

  return -1;
}

module.exports = strictIndexOf;

/***/ }),

/***/ "./node_modules/lodash/_stringToPath.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_stringToPath.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var memoizeCapped = __webpack_require__(/*! ./_memoizeCapped */ "./node_modules/lodash/_memoizeCapped.js");
/** Used to match property names within property paths. */


var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
/** Used to match backslashes in property paths. */

var reEscapeChar = /\\(\\)?/g;
/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */

var stringToPath = memoizeCapped(function (string) {
  var result = [];

  if (string.charCodeAt(0) === 46
  /* . */
  ) {
      result.push('');
    }

  string.replace(rePropName, function (match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);
  });
  return result;
});
module.exports = stringToPath;

/***/ }),

/***/ "./node_modules/lodash/_toKey.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_toKey.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");
/** Used as references for various `Number` constants. */


var INFINITY = 1 / 0;
/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */

function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }

  var result = value + '';
  return result == '0' && 1 / value == -INFINITY ? '-0' : result;
}

module.exports = toKey;

/***/ }),

/***/ "./node_modules/lodash/_toSource.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_toSource.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var funcProto = Function.prototype;
/** Used to resolve the decompiled source of functions. */

var funcToString = funcProto.toString;
/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */

function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}

    try {
      return func + '';
    } catch (e) {}
  }

  return '';
}

module.exports = toSource;

/***/ }),

/***/ "./node_modules/lodash/constant.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/constant.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function () {
    return value;
  };
}

module.exports = constant;

/***/ }),

/***/ "./node_modules/lodash/eq.js":
/*!***********************************!*\
  !*** ./node_modules/lodash/eq.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || value !== value && other !== other;
}

module.exports = eq;

/***/ }),

/***/ "./node_modules/lodash/find.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/find.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var createFind = __webpack_require__(/*! ./_createFind */ "./node_modules/lodash/_createFind.js"),
    findIndex = __webpack_require__(/*! ./findIndex */ "./node_modules/lodash/findIndex.js");
/**
 * Iterates over elements of `collection`, returning the first element
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {*} Returns the matched element, else `undefined`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'age': 36, 'active': true },
 *   { 'user': 'fred',    'age': 40, 'active': false },
 *   { 'user': 'pebbles', 'age': 1,  'active': true }
 * ];
 *
 * _.find(users, function(o) { return o.age < 40; });
 * // => object for 'barney'
 *
 * // The `_.matches` iteratee shorthand.
 * _.find(users, { 'age': 1, 'active': true });
 * // => object for 'pebbles'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.find(users, ['active', false]);
 * // => object for 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.find(users, 'active');
 * // => object for 'barney'
 */


var find = createFind(findIndex);
module.exports = find;

/***/ }),

/***/ "./node_modules/lodash/findIndex.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/findIndex.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseFindIndex = __webpack_require__(/*! ./_baseFindIndex */ "./node_modules/lodash/_baseFindIndex.js"),
    baseIteratee = __webpack_require__(/*! ./_baseIteratee */ "./node_modules/lodash/_baseIteratee.js"),
    toInteger = __webpack_require__(/*! ./toInteger */ "./node_modules/lodash/toInteger.js");
/* Built-in method references for those with the same name as other `lodash` methods. */


var nativeMax = Math.max;
/**
 * This method is like `_.find` except that it returns the index of the first
 * element `predicate` returns truthy for instead of the element itself.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': false },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': true }
 * ];
 *
 * _.findIndex(users, function(o) { return o.user == 'barney'; });
 * // => 0
 *
 * // The `_.matches` iteratee shorthand.
 * _.findIndex(users, { 'user': 'fred', 'active': false });
 * // => 1
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findIndex(users, ['active', false]);
 * // => 0
 *
 * // The `_.property` iteratee shorthand.
 * _.findIndex(users, 'active');
 * // => 2
 */

function findIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;

  if (!length) {
    return -1;
  }

  var index = fromIndex == null ? 0 : toInteger(fromIndex);

  if (index < 0) {
    index = nativeMax(length + index, 0);
  }

  return baseFindIndex(array, baseIteratee(predicate, 3), index);
}

module.exports = findIndex;

/***/ }),

/***/ "./node_modules/lodash/flatten.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/flatten.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseFlatten = __webpack_require__(/*! ./_baseFlatten */ "./node_modules/lodash/_baseFlatten.js");
/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */


function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten(array, 1) : [];
}

module.exports = flatten;

/***/ }),

/***/ "./node_modules/lodash/get.js":
/*!************************************!*\
  !*** ./node_modules/lodash/get.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(/*! ./_baseGet */ "./node_modules/lodash/_baseGet.js");
/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */


function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;

/***/ }),

/***/ "./node_modules/lodash/hasIn.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/hasIn.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseHasIn = __webpack_require__(/*! ./_baseHasIn */ "./node_modules/lodash/_baseHasIn.js"),
    hasPath = __webpack_require__(/*! ./_hasPath */ "./node_modules/lodash/_hasPath.js");
/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */


function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

module.exports = hasIn;

/***/ }),

/***/ "./node_modules/lodash/identity.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/identity.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;

/***/ }),

/***/ "./node_modules/lodash/isArguments.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/isArguments.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIsArguments = __webpack_require__(/*! ./_baseIsArguments */ "./node_modules/lodash/_baseIsArguments.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");
/** Used for built-in method references. */


var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/** Built-in value references. */

var propertyIsEnumerable = objectProto.propertyIsEnumerable;
/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */

var isArguments = baseIsArguments(function () {
  return arguments;
}()) ? baseIsArguments : function (value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
};
module.exports = isArguments;

/***/ }),

/***/ "./node_modules/lodash/isArray.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/isArray.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;
module.exports = isArray;

/***/ }),

/***/ "./node_modules/lodash/isArrayLike.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/isArrayLike.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(/*! ./isFunction */ "./node_modules/lodash/isFunction.js"),
    isLength = __webpack_require__(/*! ./isLength */ "./node_modules/lodash/isLength.js");
/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */


function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;

/***/ }),

/***/ "./node_modules/lodash/isArrayLikeObject.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/isArrayLikeObject.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");
/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */


function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

module.exports = isArrayLikeObject;

/***/ }),

/***/ "./node_modules/lodash/isBuffer.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isBuffer.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js"),
    stubFalse = __webpack_require__(/*! ./stubFalse */ "./node_modules/lodash/stubFalse.js");
/** Detect free variable `exports`. */


var freeExports = ( false ? undefined : _typeof(exports)) == 'object' && exports && !exports.nodeType && exports;
/** Detect free variable `module`. */

var freeModule = freeExports && ( false ? undefined : _typeof(module)) == 'object' && module && !module.nodeType && module;
/** Detect the popular CommonJS extension `module.exports`. */

var moduleExports = freeModule && freeModule.exports === freeExports;
/** Built-in value references. */

var Buffer = moduleExports ? root.Buffer : undefined;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;
/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */

var isBuffer = nativeIsBuffer || stubFalse;
module.exports = isBuffer;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/lodash/isFunction.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/isFunction.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js");
/** `Object#toString` result references. */


var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';
/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */

function isFunction(value) {
  if (!isObject(value)) {
    return false;
  } // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.


  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;

/***/ }),

/***/ "./node_modules/lodash/isLength.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isLength.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;
/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */

function isLength(value) {
  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;

/***/ }),

/***/ "./node_modules/lodash/isMap.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/isMap.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMap = __webpack_require__(/*! ./_baseIsMap */ "./node_modules/lodash/_baseIsMap.js"),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ "./node_modules/lodash/_baseUnary.js"),
    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ "./node_modules/lodash/_nodeUtil.js");
/* Node.js helper references. */


var nodeIsMap = nodeUtil && nodeUtil.isMap;
/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */

var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
module.exports = isMap;

/***/ }),

/***/ "./node_modules/lodash/isObject.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isObject.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = _typeof(value);

  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;

/***/ }),

/***/ "./node_modules/lodash/isObjectLike.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isObjectLike.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && _typeof(value) == 'object';
}

module.exports = isObjectLike;

/***/ }),

/***/ "./node_modules/lodash/isPlainObject.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/isPlainObject.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    getPrototype = __webpack_require__(/*! ./_getPrototype */ "./node_modules/lodash/_getPrototype.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");
/** `Object#toString` result references. */


var objectTag = '[object Object]';
/** Used for built-in method references. */

var funcProto = Function.prototype,
    objectProto = Object.prototype;
/** Used to resolve the decompiled source of functions. */

var funcToString = funcProto.toString;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/** Used to infer the `Object` constructor. */

var objectCtorString = funcToString.call(Object);
/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */

function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }

  var proto = getPrototype(value);

  if (proto === null) {
    return true;
  }

  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;

/***/ }),

/***/ "./node_modules/lodash/isSet.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/isSet.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIsSet = __webpack_require__(/*! ./_baseIsSet */ "./node_modules/lodash/_baseIsSet.js"),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ "./node_modules/lodash/_baseUnary.js"),
    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ "./node_modules/lodash/_nodeUtil.js");
/* Node.js helper references. */


var nodeIsSet = nodeUtil && nodeUtil.isSet;
/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */

var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
module.exports = isSet;

/***/ }),

/***/ "./node_modules/lodash/isSymbol.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isSymbol.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");
/** `Object#toString` result references. */


var symbolTag = '[object Symbol]';
/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */

function isSymbol(value) {
  return _typeof(value) == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
}

module.exports = isSymbol;

/***/ }),

/***/ "./node_modules/lodash/isTypedArray.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isTypedArray.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIsTypedArray = __webpack_require__(/*! ./_baseIsTypedArray */ "./node_modules/lodash/_baseIsTypedArray.js"),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ "./node_modules/lodash/_baseUnary.js"),
    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ "./node_modules/lodash/_nodeUtil.js");
/* Node.js helper references. */


var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */

var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
module.exports = isTypedArray;

/***/ }),

/***/ "./node_modules/lodash/keys.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/keys.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(/*! ./_arrayLikeKeys */ "./node_modules/lodash/_arrayLikeKeys.js"),
    baseKeys = __webpack_require__(/*! ./_baseKeys */ "./node_modules/lodash/_baseKeys.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js");
/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */


function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;

/***/ }),

/***/ "./node_modules/lodash/keysIn.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/keysIn.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(/*! ./_arrayLikeKeys */ "./node_modules/lodash/_arrayLikeKeys.js"),
    baseKeysIn = __webpack_require__(/*! ./_baseKeysIn */ "./node_modules/lodash/_baseKeysIn.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js");
/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */


function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;

/***/ }),

/***/ "./node_modules/lodash/last.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/last.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Gets the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the last element of `array`.
 * @example
 *
 * _.last([1, 2, 3]);
 * // => 3
 */
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : undefined;
}

module.exports = last;

/***/ }),

/***/ "./node_modules/lodash/map.js":
/*!************************************!*\
  !*** ./node_modules/lodash/map.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(/*! ./_arrayMap */ "./node_modules/lodash/_arrayMap.js"),
    baseIteratee = __webpack_require__(/*! ./_baseIteratee */ "./node_modules/lodash/_baseIteratee.js"),
    baseMap = __webpack_require__(/*! ./_baseMap */ "./node_modules/lodash/_baseMap.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js");
/**
 * Creates an array of values by running each element in `collection` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
 *
 * The guarded methods are:
 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * _.map([4, 8], square);
 * // => [16, 64]
 *
 * _.map({ 'a': 4, 'b': 8 }, square);
 * // => [16, 64] (iteration order is not guaranteed)
 *
 * var users = [
 *   { 'user': 'barney' },
 *   { 'user': 'fred' }
 * ];
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, 'user');
 * // => ['barney', 'fred']
 */


function map(collection, iteratee) {
  var func = isArray(collection) ? arrayMap : baseMap;
  return func(collection, baseIteratee(iteratee, 3));
}

module.exports = map;

/***/ }),

/***/ "./node_modules/lodash/memoize.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/memoize.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(/*! ./_MapCache */ "./node_modules/lodash/_MapCache.js");
/** Error message constants. */


var FUNC_ERROR_TEXT = 'Expected a function';
/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */

function memoize(func, resolver) {
  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }

  var memoized = function memoized() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }

    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };

  memoized.cache = new (memoize.Cache || MapCache)();
  return memoized;
} // Expose `MapCache`.


memoize.Cache = MapCache;
module.exports = memoize;

/***/ }),

/***/ "./node_modules/lodash/merge.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/merge.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseMerge = __webpack_require__(/*! ./_baseMerge */ "./node_modules/lodash/_baseMerge.js"),
    createAssigner = __webpack_require__(/*! ./_createAssigner */ "./node_modules/lodash/_createAssigner.js");
/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */


var merge = createAssigner(function (object, source, srcIndex) {
  baseMerge(object, source, srcIndex);
});
module.exports = merge;

/***/ }),

/***/ "./node_modules/lodash/mergeWith.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/mergeWith.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseMerge = __webpack_require__(/*! ./_baseMerge */ "./node_modules/lodash/_baseMerge.js"),
    createAssigner = __webpack_require__(/*! ./_createAssigner */ "./node_modules/lodash/_createAssigner.js");
/**
 * This method is like `_.merge` except that it accepts `customizer` which
 * is invoked to produce the merged values of the destination and source
 * properties. If `customizer` returns `undefined`, merging is handled by the
 * method instead. The `customizer` is invoked with six arguments:
 * (objValue, srcValue, key, object, source, stack).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} sources The source objects.
 * @param {Function} customizer The function to customize assigned values.
 * @returns {Object} Returns `object`.
 * @example
 *
 * function customizer(objValue, srcValue) {
 *   if (_.isArray(objValue)) {
 *     return objValue.concat(srcValue);
 *   }
 * }
 *
 * var object = { 'a': [1], 'b': [2] };
 * var other = { 'a': [3], 'b': [4] };
 *
 * _.mergeWith(object, other, customizer);
 * // => { 'a': [1, 3], 'b': [2, 4] }
 */


var mergeWith = createAssigner(function (object, source, srcIndex, customizer) {
  baseMerge(object, source, srcIndex, customizer);
});
module.exports = mergeWith;

/***/ }),

/***/ "./node_modules/lodash/noop.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/noop.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {// No operation performed.
}

module.exports = noop;

/***/ }),

/***/ "./node_modules/lodash/omit.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/omit.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(/*! ./_arrayMap */ "./node_modules/lodash/_arrayMap.js"),
    baseClone = __webpack_require__(/*! ./_baseClone */ "./node_modules/lodash/_baseClone.js"),
    baseUnset = __webpack_require__(/*! ./_baseUnset */ "./node_modules/lodash/_baseUnset.js"),
    castPath = __webpack_require__(/*! ./_castPath */ "./node_modules/lodash/_castPath.js"),
    copyObject = __webpack_require__(/*! ./_copyObject */ "./node_modules/lodash/_copyObject.js"),
    customOmitClone = __webpack_require__(/*! ./_customOmitClone */ "./node_modules/lodash/_customOmitClone.js"),
    flatRest = __webpack_require__(/*! ./_flatRest */ "./node_modules/lodash/_flatRest.js"),
    getAllKeysIn = __webpack_require__(/*! ./_getAllKeysIn */ "./node_modules/lodash/_getAllKeysIn.js");
/** Used to compose bitmasks for cloning. */


var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;
/**
 * The opposite of `_.pick`; this method creates an object composed of the
 * own and inherited enumerable property paths of `object` that are not omitted.
 *
 * **Note:** This method is considerably slower than `_.pick`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to omit.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.omit(object, ['a', 'c']);
 * // => { 'b': '2' }
 */

var omit = flatRest(function (object, paths) {
  var result = {};

  if (object == null) {
    return result;
  }

  var isDeep = false;
  paths = arrayMap(paths, function (path) {
    path = castPath(path, object);
    isDeep || (isDeep = path.length > 1);
    return path;
  });
  copyObject(object, getAllKeysIn(object), result);

  if (isDeep) {
    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
  }

  var length = paths.length;

  while (length--) {
    baseUnset(result, paths[length]);
  }

  return result;
});
module.exports = omit;

/***/ }),

/***/ "./node_modules/lodash/property.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/property.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseProperty = __webpack_require__(/*! ./_baseProperty */ "./node_modules/lodash/_baseProperty.js"),
    basePropertyDeep = __webpack_require__(/*! ./_basePropertyDeep */ "./node_modules/lodash/_basePropertyDeep.js"),
    isKey = __webpack_require__(/*! ./_isKey */ "./node_modules/lodash/_isKey.js"),
    toKey = __webpack_require__(/*! ./_toKey */ "./node_modules/lodash/_toKey.js");
/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */


function property(path) {
  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}

module.exports = property;

/***/ }),

/***/ "./node_modules/lodash/pull.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/pull.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseRest = __webpack_require__(/*! ./_baseRest */ "./node_modules/lodash/_baseRest.js"),
    pullAll = __webpack_require__(/*! ./pullAll */ "./node_modules/lodash/pullAll.js");
/**
 * Removes all given values from `array` using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
 * to remove elements from an array by predicate.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {...*} [values] The values to remove.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
 *
 * _.pull(array, 'a', 'c');
 * console.log(array);
 * // => ['b', 'b']
 */


var pull = baseRest(pullAll);
module.exports = pull;

/***/ }),

/***/ "./node_modules/lodash/pullAll.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/pullAll.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var basePullAll = __webpack_require__(/*! ./_basePullAll */ "./node_modules/lodash/_basePullAll.js");
/**
 * This method is like `_.pull` except that it accepts an array of values to remove.
 *
 * **Note:** Unlike `_.difference`, this method mutates `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {Array} values The values to remove.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
 *
 * _.pullAll(array, ['a', 'c']);
 * console.log(array);
 * // => ['b', 'b']
 */


function pullAll(array, values) {
  return array && array.length && values && values.length ? basePullAll(array, values) : array;
}

module.exports = pullAll;

/***/ }),

/***/ "./node_modules/lodash/remove.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/remove.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIteratee = __webpack_require__(/*! ./_baseIteratee */ "./node_modules/lodash/_baseIteratee.js"),
    basePullAt = __webpack_require__(/*! ./_basePullAt */ "./node_modules/lodash/_basePullAt.js");
/**
 * Removes all elements from `array` that `predicate` returns truthy for
 * and returns an array of the removed elements. The predicate is invoked
 * with three arguments: (value, index, array).
 *
 * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
 * to pull elements from an array by value.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new array of removed elements.
 * @example
 *
 * var array = [1, 2, 3, 4];
 * var evens = _.remove(array, function(n) {
 *   return n % 2 == 0;
 * });
 *
 * console.log(array);
 * // => [1, 3]
 *
 * console.log(evens);
 * // => [2, 4]
 */


function remove(array, predicate) {
  var result = [];

  if (!(array && array.length)) {
    return result;
  }

  var index = -1,
      indexes = [],
      length = array.length;
  predicate = baseIteratee(predicate, 3);

  while (++index < length) {
    var value = array[index];

    if (predicate(value, index, array)) {
      result.push(value);
      indexes.push(index);
    }
  }

  basePullAt(array, indexes);
  return result;
}

module.exports = remove;

/***/ }),

/***/ "./node_modules/lodash/sortedIndexBy.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/sortedIndexBy.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIteratee = __webpack_require__(/*! ./_baseIteratee */ "./node_modules/lodash/_baseIteratee.js"),
    baseSortedIndexBy = __webpack_require__(/*! ./_baseSortedIndexBy */ "./node_modules/lodash/_baseSortedIndexBy.js");
/**
 * This method is like `_.sortedIndex` except that it accepts `iteratee`
 * which is invoked for `value` and each element of `array` to compute their
 * sort ranking. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 * @example
 *
 * var objects = [{ 'x': 4 }, { 'x': 5 }];
 *
 * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
 * // => 0
 *
 * // The `_.property` iteratee shorthand.
 * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
 * // => 0
 */


function sortedIndexBy(array, value, iteratee) {
  return baseSortedIndexBy(array, value, baseIteratee(iteratee, 2));
}

module.exports = sortedIndexBy;

/***/ }),

/***/ "./node_modules/lodash/stubArray.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/stubArray.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;

/***/ }),

/***/ "./node_modules/lodash/stubFalse.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/stubFalse.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;

/***/ }),

/***/ "./node_modules/lodash/toFinite.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/toFinite.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toNumber = __webpack_require__(/*! ./toNumber */ "./node_modules/lodash/toNumber.js");
/** Used as references for various `Number` constants. */


var INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;
/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */

function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }

  value = toNumber(value);

  if (value === INFINITY || value === -INFINITY) {
    var sign = value < 0 ? -1 : 1;
    return sign * MAX_INTEGER;
  }

  return value === value ? value : 0;
}

module.exports = toFinite;

/***/ }),

/***/ "./node_modules/lodash/toInteger.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/toInteger.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toFinite = __webpack_require__(/*! ./toFinite */ "./node_modules/lodash/toFinite.js");
/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */


function toInteger(value) {
  var result = toFinite(value),
      remainder = result % 1;
  return result === result ? remainder ? result - remainder : result : 0;
}

module.exports = toInteger;

/***/ }),

/***/ "./node_modules/lodash/toNumber.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/toNumber.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");
/** Used as references for various `Number` constants. */


var NAN = 0 / 0;
/** Used to match leading and trailing whitespace. */

var reTrim = /^\s+|\s+$/g;
/** Used to detect bad signed hexadecimal string values. */

var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
/** Used to detect binary string values. */

var reIsBinary = /^0b[01]+$/i;
/** Used to detect octal string values. */

var reIsOctal = /^0o[0-7]+$/i;
/** Built-in method references without a dependency on `root`. */

var freeParseInt = parseInt;
/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */

function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }

  if (isSymbol(value)) {
    return NAN;
  }

  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? other + '' : other;
  }

  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }

  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
}

module.exports = toNumber;

/***/ }),

/***/ "./node_modules/lodash/toPlainObject.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/toPlainObject.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ "./node_modules/lodash/_copyObject.js"),
    keysIn = __webpack_require__(/*! ./keysIn */ "./node_modules/lodash/keysIn.js");
/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */


function toPlainObject(value) {
  return copyObject(value, keysIn(value));
}

module.exports = toPlainObject;

/***/ }),

/***/ "./node_modules/lodash/toString.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/toString.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseToString = __webpack_require__(/*! ./_baseToString */ "./node_modules/lodash/_baseToString.js");
/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */


function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;

/***/ }),

/***/ "./node_modules/lodash/uniq.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/uniq.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseUniq = __webpack_require__(/*! ./_baseUniq */ "./node_modules/lodash/_baseUniq.js");
/**
 * Creates a duplicate-free version of an array, using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons, in which only the first occurrence of each element
 * is kept. The order of result values is determined by the order they occur
 * in the array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniq([2, 1, 2]);
 * // => [2, 1]
 */


function uniq(array) {
  return array && array.length ? baseUniq(array) : [];
}

module.exports = uniq;

/***/ }),

/***/ "./node_modules/lodash/uniqWith.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/uniqWith.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseUniq = __webpack_require__(/*! ./_baseUniq */ "./node_modules/lodash/_baseUniq.js");
/**
 * This method is like `_.uniq` except that it accepts `comparator` which
 * is invoked to compare elements of `array`. The order of result values is
 * determined by the order they occur in the array.The comparator is invoked
 * with two arguments: (arrVal, othVal).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
 *
 * _.uniqWith(objects, _.isEqual);
 * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
 */


function uniqWith(array, comparator) {
  comparator = typeof comparator == 'function' ? comparator : undefined;
  return array && array.length ? baseUniq(array, undefined, comparator) : [];
}

module.exports = uniqWith;

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var g; // This works in non-strict mode

g = function () {
  return this;
}();

try {
  // This works if eval is allowed (see CSP)
  g = g || new Function("return this")();
} catch (e) {
  // This works if the window reference is available
  if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === "object") g = window;
} // g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}


module.exports = g;

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (module) {
  if (!module.webpackPolyfill) {
    module.deprecate = function () {};

    module.paths = []; // module.parent = undefined by default

    if (!module.children) module.children = [];
    Object.defineProperty(module, "loaded", {
      enumerable: true,
      get: function get() {
        return module.l;
      }
    });
    Object.defineProperty(module, "id", {
      enumerable: true,
      get: function get() {
        return module.i;
      }
    });
    module.webpackPolyfill = 1;
  }

  return module;
};

/***/ })

/******/ });
});
//# sourceMappingURL=snjs.min.js.map